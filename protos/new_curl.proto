syntax = "proto3";

message prcs {
    int32 prereq_retcode = 1;
    int32 ipv6 = 2;
}

message xcharp_u {
    xcharp_u tchar_ptr = 1;
    xcharp_u const_tchar_ptr = 2;
    xcharp_u tbyte_ptr = 3;
    xcharp_u const_tbyte_ptr = 4;
}

message OutStruct {
    OutStruct filename = 1;
    bool alloc_filename = 2;
    bool is_cd_filename = 3;
    bool s_isreg = 4;
    bool fopened = 5;
    OutStruct stream = 6;
    OutStruct bytes = 7;
    OutStruct init = 8;
}

message getout {
    getout next = 1;
    getout url = 2;
    getout outfile = 3;
    getout infile = 4;
    int32 flags = 5;
    int32 num = 6;
}

message URLPattern {
    URLPattern type = 1;
    int32 globindex = 2;
    URLPattern content = 3;
}

message URLPattern::union (unnamed at /data/tfk/study/PUT/curl/src/tool_urlglob.h:38:3) {
    URLPattern::union (unnamed at /data/tfk/study/PUT/curl/src/tool_urlglob.h:38:3) Set = 1;
    URLPattern::union (unnamed at /data/tfk/study/PUT/curl/src/tool_urlglob.h:38:3) CharRange = 2;
    URLPattern::union (unnamed at /data/tfk/study/PUT/curl/src/tool_urlglob.h:38:3) NumRange = 3;
}

message URLPattern::(anonymous union)::struct (unnamed at /data/tfk/study/PUT/curl/src/tool_urlglob.h:39:5) {
    URLPattern::(anonymous union)::struct (unnamed at /data/tfk/study/PUT/curl/src/tool_urlglob.h:39:5) elements = 1;
    URLPattern::(anonymous union)::struct (unnamed at /data/tfk/study/PUT/curl/src/tool_urlglob.h:39:5) size = 2;
    int32 ptr_s = 3;
}

message URLPattern::(anonymous union)::struct (unnamed at /data/tfk/study/PUT/curl/src/tool_urlglob.h:44:5) {
    string min_c = 1;
    string max_c = 2;
    string ptr_c = 3;
    int32 step = 4;
}

message URLPattern::(anonymous union)::struct (unnamed at /data/tfk/study/PUT/curl/src/tool_urlglob.h:50:5) {
    URLPattern::(anonymous union)::struct (unnamed at /data/tfk/study/PUT/curl/src/tool_urlglob.h:50:5) min_n = 1;
    URLPattern::(anonymous union)::struct (unnamed at /data/tfk/study/PUT/curl/src/tool_urlglob.h:50:5) max_n = 2;
    int32 padlength = 3;
    URLPattern::(anonymous union)::struct (unnamed at /data/tfk/study/PUT/curl/src/tool_urlglob.h:50:5) ptr_n = 4;
    URLPattern::(anonymous union)::struct (unnamed at /data/tfk/study/PUT/curl/src/tool_urlglob.h:50:5) step = 5;
}

message URLGlob {
    URLGlob pattern = 1;
    URLGlob size = 2;
    URLGlob urllen = 3;
    URLGlob glob_buffer = 4;
    string beenhere = 5;
    URLGlob error = 6;
    URLGlob pos = 7;
}

message dynbuf {
    dynbuf bufr = 1;
    dynbuf leng = 2;
    dynbuf allc = 3;
    dynbuf toobig = 4;
}

message var {
    var next = 1;
    var name = 2;
    var content = 3;
    var clen = 4;
}

message State {
    State urlnode = 1;
    State inglob = 2;
    State urls = 3;
    State outfiles = 4;
    State httpgetfields = 5;
    State uploadfile = 6;
    State infilenum = 7;
    State up = 8;
    State urlnum = 9;
    State li = 10;
}

message OperationConfig {
    bool remote_time = 1;
    OperationConfig useragent = 2;
    OperationConfig cookies = 3;
    OperationConfig cookiejar = 4;
    OperationConfig cookiefiles = 5;
    OperationConfig altsvc = 6;
    OperationConfig hsts = 7;
    bool cookiesession = 8;
    bool encoding = 9;
    bool tr_encoding = 10;
    OperationConfig authtype = 11;
    bool use_resume = 12;
    bool resume_from_current = 13;
    bool disable_epsv = 14;
    bool disable_eprt = 15;
    bool ftp_pret = 16;
    OperationConfig proto_str = 17;
    bool proto_present = 18;
    OperationConfig proto_redir_str = 19;
    bool proto_redir_present = 20;
    OperationConfig proto_default = 21;
    OperationConfig resume_from = 22;
    OperationConfig postfields = 23;
    OperationConfig postdata = 24;
    OperationConfig referer = 25;
    OperationConfig query = 26;
    OperationConfig timeout_ms = 27;
    OperationConfig connecttimeout_ms = 28;
    OperationConfig maxredirs = 29;
    OperationConfig max_filesize = 30;
    OperationConfig output_dir = 31;
    OperationConfig headerfile = 32;
    OperationConfig ftpport = 33;
    OperationConfig iface = 34;
    OperationConfig localport = 35;
    OperationConfig localportrange = 36;
    OperationConfig porttouse = 37;
    OperationConfig range = 38;
    OperationConfig low_speed_limit = 39;
    OperationConfig low_speed_time = 40;
    OperationConfig dns_servers = 41;
    OperationConfig dns_interface = 42;
    OperationConfig dns_ipv4_addr = 43;
    OperationConfig dns_ipv6_addr = 44;
    OperationConfig userpwd = 45;
    OperationConfig login_options = 46;
    OperationConfig tls_username = 47;
    OperationConfig tls_password = 48;
    OperationConfig tls_authtype = 49;
    OperationConfig proxy_tls_username = 50;
    OperationConfig proxy_tls_password = 51;
    OperationConfig proxy_tls_authtype = 52;
    OperationConfig proxyuserpwd = 53;
    OperationConfig proxy = 54;
    int32 proxyver = 55;
    OperationConfig noproxy = 56;
    OperationConfig mail_from = 57;
    OperationConfig mail_rcpt = 58;
    OperationConfig mail_auth = 59;
    bool mail_rcpt_allowfails = 60;
    OperationConfig sasl_authzid = 61;
    bool sasl_ir = 62;
    bool proxytunnel = 63;
    bool ftp_append = 64;
    bool use_ascii = 65;
    bool autoreferer = 66;
    bool failonerror = 67;
    bool failwithbody = 68;
    bool show_headers = 69;
    bool no_body = 70;
    bool dirlistonly = 71;
    bool followlocation = 72;
    bool unrestricted_auth = 73;
    bool netrc_opt = 74;
    bool netrc = 75;
    OperationConfig netrc_file = 76;
    OperationConfig url_list = 77;
    OperationConfig url_last = 78;
    OperationConfig url_get = 79;
    OperationConfig url_out = 80;
    OperationConfig url_ul = 81;
    OperationConfig ipfs_gateway = 82;
    OperationConfig doh_url = 83;
    OperationConfig cipher_list = 84;
    OperationConfig proxy_cipher_list = 85;
    OperationConfig cipher13_list = 86;
    OperationConfig proxy_cipher13_list = 87;
    OperationConfig cert = 88;
    OperationConfig proxy_cert = 89;
    OperationConfig cert_type = 90;
    OperationConfig proxy_cert_type = 91;
    OperationConfig cacert = 92;
    OperationConfig proxy_cacert = 93;
    OperationConfig capath = 94;
    OperationConfig proxy_capath = 95;
    OperationConfig crlfile = 96;
    OperationConfig proxy_crlfile = 97;
    OperationConfig pinnedpubkey = 98;
    OperationConfig proxy_pinnedpubkey = 99;
    OperationConfig key = 100;
    OperationConfig proxy_key = 101;
    OperationConfig key_type = 102;
    OperationConfig proxy_key_type = 103;
    OperationConfig key_passwd = 104;
    OperationConfig proxy_key_passwd = 105;
    OperationConfig pubkey = 106;
    OperationConfig hostpubmd5 = 107;
    OperationConfig hostpubsha256 = 108;
    OperationConfig engine = 109;
    OperationConfig etag_save_file = 110;
    OperationConfig etag_compare_file = 111;
    bool crlf = 112;
    OperationConfig customrequest = 113;
    OperationConfig ssl_ec_curves = 114;
    OperationConfig krblevel = 115;
    OperationConfig request_target = 116;
    OperationConfig httpversion = 117;
    bool http09_allowed = 118;
    bool nobuffer = 119;
    bool readbusy = 120;
    bool globoff = 121;
    bool use_httpget = 122;
    bool insecure_ok = 123;
    bool doh_insecure_ok = 124;
    bool proxy_insecure_ok = 125;
    bool terminal_binary_ok = 126;
    bool verifystatus = 127;
    bool doh_verifystatus = 128;
    bool create_dirs = 129;
    bool ftp_create_dirs = 130;
    bool ftp_skip_ip = 131;
    bool proxynegotiate = 132;
    bool proxyntlm = 133;
    bool proxydigest = 134;
    bool proxybasic = 135;
    bool proxyanyauth = 136;
    bool jsoned = 137;
    OperationConfig writeout = 138;
    OperationConfig quote = 139;
    OperationConfig postquote = 140;
    OperationConfig prequote = 141;
    OperationConfig ssl_version = 142;
    OperationConfig ssl_version_max = 143;
    OperationConfig proxy_ssl_version = 144;
    OperationConfig ip_version = 145;
    OperationConfig create_file_mode = 146;
    OperationConfig timecond = 147;
    OperationConfig condtime = 148;
    OperationConfig headers = 149;
    OperationConfig proxyheaders = 150;
    OperationConfig mimeroot = 151;
    OperationConfig mimecurrent = 152;
    OperationConfig mimepost = 153;
    OperationConfig telnet_options = 154;
    OperationConfig resolve = 155;
    OperationConfig connect_to = 156;
    OperationConfig httpreq = 157;
    OperationConfig sendpersecond = 158;
    OperationConfig recvpersecond = 159;
    bool ftp_ssl = 160;
    bool ftp_ssl_reqd = 161;
    bool ftp_ssl_control = 162;
    bool ftp_ssl_ccc = 163;
    int32 ftp_ssl_ccc_mode = 164;
    OperationConfig preproxy = 165;
    bool socks5_gssapi_nec = 166;
    OperationConfig socks5_auth = 167;
    OperationConfig proxy_service_name = 168;
    OperationConfig service_name = 169;
    bool tcp_nodelay = 170;
    bool tcp_fastopen = 171;
    OperationConfig req_retry = 172;
    bool retry_all_errors = 173;
    bool retry_connrefused = 174;
    OperationConfig retry_delay = 175;
    OperationConfig retry_maxtime = 176;
    OperationConfig ftp_account = 177;
    OperationConfig ftp_alternative_to_user = 178;
    int32 ftp_filemethod = 179;
    OperationConfig mime_options = 180;
    OperationConfig tftp_blksize = 181;
    bool tftp_no_options = 182;
    bool ignorecl = 183;
    bool disable_sessionid = 184;
    bool raw = 185;
    bool post301 = 186;
    bool post302 = 187;
    bool post303 = 188;
    bool nokeepalive = 189;
    OperationConfig alivetime = 190;
    bool content_disposition = 191;
    int32 default_node_flags = 192;
    bool xattr = 193;
    OperationConfig gssapi_delegation = 194;
    bool ssl_allow_beast = 195;
    bool proxy_ssl_allow_beast = 196;
    bool ssl_no_revoke = 197;
    bool ssl_revoke_best_effort = 198;
    bool native_ca_store = 199;
    bool proxy_native_ca_store = 200;
    bool ssl_auto_client_cert = 201;
    bool proxy_ssl_auto_client_cert = 202;
    OperationConfig oauth_bearer = 203;
    bool noalpn = 204;
    OperationConfig unix_socket_path = 205;
    bool abstract_unix_socket = 206;
    bool falsestart = 207;
    bool path_as_is = 208;
    OperationConfig expect100timeout_ms = 209;
    bool suppress_connect_headers = 210;
    bool synthetic_error = 211;
    bool ssh_compression = 212;
    OperationConfig happy_eyeballs_timeout_ms = 213;
    bool haproxy_protocol = 214;
    OperationConfig haproxy_clientip = 215;
    bool disallow_username_in_url = 216;
    OperationConfig aws_sigv4 = 217;
    OperationConfig file_clobber_mode = 218;
    OperationConfig global = 219;
    OperationConfig prev = 220;
    OperationConfig next = 221;
    OperationConfig state = 222;
    bool rm_partial = 223;
}

message GlobalConfig {
    bool showerror = 1;
    bool silent = 2;
    bool noprogress = 3;
    bool isatty = 4;
    GlobalConfig trace_dump = 5;
    GlobalConfig trace_stream = 6;
    bool trace_fopened = 7;
    GlobalConfig tracetype = 8;
    bool tracetime = 9;
    bool traceids = 10;
    int32 progressmode = 11;
    GlobalConfig libcurl = 12;
    bool fail_early = 13;
    bool styled_output = 14;
    GlobalConfig ms_per_transfer = 15;
    bool parallel = 16;
    GlobalConfig parallel_max = 17;
    bool parallel_connect = 18;
    GlobalConfig help_category = 19;
    GlobalConfig variables = 20;
    GlobalConfig first = 21;
    GlobalConfig current = 22;
    GlobalConfig last = 23;
}

message WriteThis {
    WriteThis readptr = 1;
    WriteThis sizeleft = 2;
}

message transfer_status {
    transfer_status easy = 1;
    int32 halted = 2;
    int32 counter = 3;
    int32 please = 4;
}

message Cookie {
    Cookie next = 1;
    Cookie name = 2;
    Cookie value = 3;
    Cookie path = 4;
    Cookie spath = 5;
    Cookie domain = 6;
    Cookie expires = 7;
    bool tailmatch = 8;
    bool secure = 9;
    bool livecookie = 10;
    bool httponly = 11;
    int32 creationtime = 12;
    string prefix = 13;
}

message CookieInfo {
    CookieInfo cookies = 1;
    CookieInfo next_expiration = 2;
    int32 numcookies = 3;
    int32 lastct = 4;
    bool running = 5;
    bool newsession = 6;
}

message FormInfo {
    FormInfo name = 1;
    FormInfo namelength = 2;
    FormInfo value = 3;
    FormInfo contentslength = 4;
    FormInfo contenttype = 5;
    FormInfo flags = 6;
    FormInfo buffer = 7;
    FormInfo bufferlength = 8;
    FormInfo showfilename = 9;
    FormInfo userp = 10;
    FormInfo contentheader = 11;
    FormInfo more = 12;
    bool name_alloc = 13;
    bool value_alloc = 14;
    bool contenttype_alloc = 15;
    bool showfilename_alloc = 16;
}

message curltime {
    curltime tv_sec = 1;
    int32 tv_usec = 2;
}

message Curl_chunker {
    Curl_chunker datasize = 1;
    Curl_chunker state = 2;
    Curl_chunker last_code = 3;
    Curl_chunker trailer = 4;
    string hexindex = 5;
    string hexbuffer = 6;
    Curl_chunker ignore_body = 7;
}

message Curl_llist_element {
    Curl_llist_element ptr = 1;
    Curl_llist_element prev = 2;
    Curl_llist_element next = 3;
}

message Curl_llist {
    Curl_llist head = 1;
    Curl_llist tail = 2;
    Curl_llist dtor = 3;
    Curl_llist size = 4;
}

message Curl_hash {
    Curl_hash table = 1;
    Curl_hash hash_func = 2;
    Curl_hash comp_func = 3;
    Curl_hash dtor = 4;
    int32 slots = 5;
    Curl_hash size = 6;
}

message Curl_hash_element {
    Curl_hash_element list = 1;
    Curl_hash_element ptr = 2;
    Curl_hash_element key_len = 3;
    string key = 4;
}

message Curl_hash_iterator {
    Curl_hash_iterator hash = 1;
    int32 slot_index = 2;
    Curl_hash_iterator current_element = 3;
}

message Curl_addrinfo {
    int32 ai_flags = 1;
    int32 ai_family = 2;
    int32 ai_socktype = 3;
    int32 ai_protocol = 4;
    Curl_addrinfo ai_addrlen = 5;
    Curl_addrinfo ai_canonname = 6;
    Curl_addrinfo ai_addr = 7;
    Curl_addrinfo ai_next = 8;
}

message Curl_dns_entry {
    Curl_dns_entry addr = 1;
    Curl_dns_entry timestamp = 2;
    Curl_dns_entry inuse = 3;
    int32 hostport = 4;
    string hostname = 5;
}

message Curl_tree {
    Curl_tree smaller = 1;
    Curl_tree larger = 2;
    Curl_tree samen = 3;
    Curl_tree samep = 4;
    Curl_tree key = 5;
    Curl_tree payload = 6;
}

message dynhds_entry {
    dynhds_entry name = 1;
    dynhds_entry value = 2;
    dynhds_entry namelen = 3;
    dynhds_entry valuelen = 4;
}

message dynhds {
    dynhds hds = 1;
    dynhds hds_len = 2;
    dynhds hds_allc = 3;
    dynhds max_entries = 4;
    dynhds strs_len = 5;
    dynhds max_strs_size = 6;
    int32 opts = 7;
}

message mime_encoder {
    mime_encoder name = 1;
    bool encodefunc = 2;
    mime_encoder sizefunc = 3;
}

message mime_encoder_state {
    mime_encoder_state pos = 1;
    mime_encoder_state bufbeg = 2;
    mime_encoder_state bufend = 3;
    string buf = 4;
}

message mime_state {
    mime_state state = 1;
    mime_state ptr = 2;
    mime_state offset = 3;
}

message curl_mime {
    curl_mime parent = 1;
    curl_mime firstpart = 2;
    curl_mime lastpart = 3;
    string boundary = 4;
    curl_mime state = 5;
}

message curl_mimepart {
    curl_mimepart parent = 1;
    curl_mimepart nextpart = 2;
    curl_mimepart kind = 3;
    int32 flags = 4;
    curl_mimepart data = 5;
    curl_mimepart readfunc = 6;
    curl_mimepart seekfunc = 7;
    curl_mimepart freefunc = 8;
    curl_mimepart arg = 9;
    curl_mimepart fp = 10;
    curl_mimepart curlheaders = 11;
    curl_mimepart userheaders = 12;
    curl_mimepart mimetype = 13;
    curl_mimepart filename = 14;
    curl_mimepart name = 15;
    curl_mimepart datasize = 16;
    curl_mimepart state = 17;
    curl_mimepart encoder = 18;
    curl_mimepart encstate = 19;
    curl_mimepart lastreadstatus = 20;
}

message pingpong {
    pingpong nread_resp = 1;
    bool pending_resp = 2;
    pingpong sendthis = 3;
    pingpong sendleft = 4;
    pingpong sendsize = 5;
    pingpong response = 6;
    pingpong response_time = 7;
    pingpong sendbuf = 8;
    pingpong recvbuf = 9;
    pingpong overflow = 10;
    pingpong nfinal = 11;
    pingpong statemachine = 12;
    int32 endofresp = 13;
}

message bufref {
    bufref dtor = 1;
    bufref ptr = 2;
    bufref len = 3;
}

message SASLproto {
    SASLproto service = 1;
    SASLproto sendauth = 2;
    SASLproto contauth = 3;
    SASLproto cancelauth = 4;
    SASLproto getmessage = 5;
    SASLproto maxirlen = 6;
    int32 contcode = 7;
    int32 finalcode = 8;
    SASLproto defmechs = 9;
    SASLproto flags = 10;
}

message SASL {
    SASL params = 1;
    SASL state = 2;
    SASL curmech = 3;
    SASL authmechs = 4;
    SASL prefmech = 5;
    SASL authused = 6;
    SASL resetprefs = 7;
    SASL mutual_auth = 8;
    SASL force_ir = 9;
}

message IMAP {
    IMAP transfer = 1;
    IMAP mailbox = 2;
    IMAP uidvalidity = 3;
    IMAP uid = 4;
    IMAP mindex = 5;
    IMAP section = 6;
    IMAP partial = 7;
    IMAP query = 8;
    IMAP custom = 9;
    IMAP custom_params = 10;
}

message imap_conn {
    imap_conn pp = 1;
    imap_conn sasl = 2;
    imap_conn dyn = 3;
    imap_conn mailbox = 4;
    imap_conn mailbox_uidvalidity = 5;
    imap_conn state = 6;
    string resptag = 7;
    string preftype = 8;
    string cmdid = 9;
    imap_conn ssldone = 10;
    imap_conn preauth = 11;
    imap_conn tls_supported = 12;
    imap_conn login_disabled = 13;
    imap_conn ir_supported = 14;
}

message POP3 {
    POP3 transfer = 1;
    POP3 id = 2;
    POP3 custom = 3;
}

message pop3_conn {
    pop3_conn pp = 1;
    pop3_conn state = 2;
    pop3_conn eob = 3;
    pop3_conn strip = 4;
    pop3_conn sasl = 5;
    pop3_conn apoptimestamp = 6;
    string authtypes = 7;
    string preftype = 8;
    pop3_conn ssldone = 9;
    pop3_conn tls_supported = 10;
}

message SMTP {
    SMTP transfer = 1;
    SMTP custom = 2;
    SMTP rcpt = 3;
    int32 rcpt_last_error = 4;
    SMTP eob = 5;
    SMTP rcpt_had_ok = 6;
    SMTP trailing_crlf = 7;
}

message smtp_conn {
    smtp_conn pp = 1;
    smtp_conn sasl = 2;
    smtp_conn state = 3;
    smtp_conn domain = 4;
    smtp_conn ssldone = 5;
    smtp_conn tls_supported = 6;
    smtp_conn size_supported = 7;
    smtp_conn utf8_supported = 8;
    smtp_conn auth_supported = 9;
}

message ftp_wc {
    ftp_wc parser = 1;
    ftp_wc backup = 2;
}

message ftp_wc::struct (unnamed at /data/tfk/study/PUT/curl/lib/ftp.h:91:3) {
    ftp_wc::struct (unnamed at /data/tfk/study/PUT/curl/lib/ftp.h:91:3) write_function = 1;
    ftp_wc::struct (unnamed at /data/tfk/study/PUT/curl/lib/ftp.h:91:3) file_descriptor = 2;
}

message FTP {
    FTP path = 1;
    FTP pathalloc = 2;
    FTP transfer = 3;
    FTP downloadsize = 4;
}

message ftp_conn {
    ftp_conn pp = 1;
    ftp_conn account = 2;
    ftp_conn alternative_to_user = 3;
    ftp_conn entrypath = 4;
    ftp_conn file = 5;
    ftp_conn dirs = 6;
    ftp_conn newhost = 7;
    ftp_conn prevpath = 8;
    string transfertype = 9;
    ftp_conn retr_size_saved = 10;
    ftp_conn server_os = 11;
    ftp_conn known_filesize = 12;
    int32 dirdepth = 13;
    int32 cwdcount = 14;
    int32 count1 = 15;
    int32 count2 = 16;
    int32 count3 = 17;
    ftp_conn newport = 18;
    ftp_conn state = 19;
    ftp_conn state_saved = 20;
    string use_ssl = 21;
    string ccc = 22;
    ftp_conn ftp_trying_alternative = 23;
    ftp_conn dont_check = 24;
    ftp_conn ctl_valid = 25;
    ftp_conn cwddone = 26;
    ftp_conn cwdfail = 27;
    ftp_conn wait_data_conn = 28;
}

message FILEPROTO {
    FILEPROTO path = 1;
    FILEPROTO freepath = 2;
    int32 fd = 3;
}

message SSHPROTO {
    SSHPROTO path = 1;
}

message ssh_conn {
    ssh_conn authlist = 1;
    ssh_conn passphrase = 2;
    ssh_conn rsa_pub = 3;
    ssh_conn rsa = 4;
    bool authed = 5;
    bool acceptfail = 6;
    ssh_conn state = 7;
    ssh_conn nextstate = 8;
    ssh_conn actualcode = 9;
    ssh_conn quote_item = 10;
    ssh_conn quote_path1 = 11;
    ssh_conn quote_path2 = 12;
    ssh_conn homedir = 13;
    int32 secondCreateDirs = 14;
    int32 orig_waitfor = 15;
    ssh_conn slash_pos = 16;
}

message buf_chunk {
    buf_chunk next = 1;
    buf_chunk dlen = 2;
    buf_chunk r_offset = 3;
    buf_chunk w_offset = 4;
    buf_chunk x = 5;
}

message buf_chunk::union (unnamed at /data/tfk/study/PUT/curl/lib/bufq.h:40:3) {
    string data = 1;
    buf_chunk::union (unnamed at /data/tfk/study/PUT/curl/lib/bufq.h:40:3) dummy = 2;
}

message bufc_pool {
    bufc_pool spare = 1;
    bufc_pool chunk_size = 2;
    bufc_pool spare_count = 3;
    bufc_pool spare_max = 4;
}

message bufq {
    bufq head = 1;
    bufq tail = 2;
    bufq spare = 3;
    bufq pool = 4;
    bufq chunk_count = 5;
    bufq max_chunks = 6;
    bufq chunk_size = 7;
    int32 opts = 8;
}

message HTTP {
    HTTP postsize = 1;
    HTTP postdata = 2;
    HTTP backup = 3;
    HTTP sending = 4;
    HTTP h2_ctx = 5;
    HTTP h3_ctx = 6;
    HTTP send_buffer = 7;
}

message back {
    back fread_func = 1;
    back fread_in = 2;
    back postdata = 3;
    back postsize = 4;
    back data = 5;
}

message httpreq {
    string method = 1;
    httpreq scheme = 2;
    httpreq authority = 3;
    httpreq path = 4;
    httpreq headers = 5;
    httpreq trailers = 6;
}

message http_resp {
    int32 status = 1;
    http_resp description = 2;
    http_resp headers = 3;
    http_resp trailers = 4;
    http_resp prev = 5;
}

message rtsp_conn {
    rtsp_conn buf = 1;
    int32 rtp_channel = 2;
    rtsp_conn rtp_len = 3;
    rtsp_conn state = 4;
    rtsp_conn in_header = 5;
}

message RTSP {
    RTSP http_wrapper = 1;
    RTSP CSeq_sent = 2;
    RTSP CSeq_recv = 3;
}

message smb_conn {
    smb_conn state = 1;
    smb_conn user = 2;
    smb_conn domain = 3;
    smb_conn share = 4;
    string challenge = 5;
    int32 session_key = 6;
    smb_conn uid = 7;
    smb_conn recv_buf = 8;
    smb_conn upload_size = 9;
    smb_conn send_size = 10;
    smb_conn sent = 11;
    smb_conn got = 12;
}

message mqtt_conn {
    mqtt_conn state = 1;
    mqtt_conn nextstate = 2;
    int32 packetid = 3;
}

message MQTT {
    MQTT sendleftovers = 1;
    MQTT nsend = 2;
    MQTT npacket = 3;
    string firstbyte = 4;
    MQTT remaining_length = 5;
    MQTT recvbuf = 6;
    string pkt_hd = 7;
}

message WildcardData {
    WildcardData path = 1;
    WildcardData pattern = 2;
    WildcardData filelist = 3;
    WildcardData ftpwc = 4;
    WildcardData dtor = 5;
    string state = 6;
}

message conncache {
    conncache hash = 1;
    conncache num_conn = 2;
    conncache next_connection_id = 3;
    conncache next_easy_id = 4;
    conncache last_cleanup = 5;
    conncache closure_handle = 6;
}

message connectbundle {
    int32 multiuse = 1;
    connectbundle num_connections = 2;
    connectbundle conn_list = 3;
}

message Curl_message {
    Curl_message list = 1;
    Curl_message extmsg = 2;
}

message Curl_multi {
    int32 magic = 1;
    Curl_multi easyp = 2;
    Curl_multi easylp = 3;
    int32 num_easy = 4;
    int32 num_alive = 5;
    Curl_multi msglist = 6;
    Curl_multi pending = 7;
    Curl_multi msgsent = 8;
    Curl_multi socket_cb = 9;
    Curl_multi socket_userp = 10;
    Curl_multi push_cb = 11;
    Curl_multi push_userp = 12;
    Curl_multi hostcache = 13;
    Curl_multi timetree = 14;
    Curl_multi ssl_backend_data = 15;
    Curl_multi sockhash = 16;
    Curl_multi conn_cache = 17;
    Curl_multi max_host_connections = 18;
    Curl_multi max_total_connections = 19;
    Curl_multi timer_cb = 20;
    Curl_multi timer_userp = 21;
    Curl_multi timer_lastcall = 22;
    Curl_multi wakeup_pair = 23;
    int32 max_concurrent_streams = 24;
    int32 maxconnects = 25;
    string ipv6_up = 26;
    Curl_multi multiplexing = 27;
    Curl_multi recheckstate = 28;
    Curl_multi in_callback = 29;
    Curl_multi ssl_seeded = 30;
    Curl_multi dead = 31;
}

message Curl_sockaddr_storage {
    Curl_sockaddr_storage buffer = 1;
}

message Curl_sockaddr_storage::union (unnamed at /data/tfk/study/PUT/curl/lib/sockaddr.h:30:3) {
    Curl_sockaddr_storage::union (unnamed at /data/tfk/study/PUT/curl/lib/sockaddr.h:30:3) sa = 1;
    Curl_sockaddr_storage::union (unnamed at /data/tfk/study/PUT/curl/lib/sockaddr.h:30:3) sa_in = 2;
    Curl_sockaddr_storage::union (unnamed at /data/tfk/study/PUT/curl/lib/sockaddr.h:30:3) sa_in6 = 3;
    Curl_sockaddr_storage::union (unnamed at /data/tfk/study/PUT/curl/lib/sockaddr.h:30:3) sa_stor = 4;
}

message Curl_sockaddr_ex {
    int32 family = 1;
    int32 socktype = 2;
    int32 protocol = 3;
    int32 addrlen = 4;
    Curl_sockaddr_ex _sa_ex_u = 5;
}

message Curl_sockaddr_ex::union (unnamed at /data/tfk/study/PUT/curl/lib/cf-socket.h:49:3) {
    Curl_sockaddr_ex::union (unnamed at /data/tfk/study/PUT/curl/lib/cf-socket.h:49:3) addr = 1;
    Curl_sockaddr_ex::union (unnamed at /data/tfk/study/PUT/curl/lib/cf-socket.h:49:3) buff = 2;
}

message ssl_peer {
    ssl_peer hostname = 1;
    ssl_peer dispname = 2;
    ssl_peer sni = 3;
    ssl_peer is_ip_address = 4;
}

message ssl_primary_config {
    ssl_primary_config CApath = 1;
    ssl_primary_config CAfile = 2;
    ssl_primary_config issuercert = 3;
    ssl_primary_config clientcert = 4;
    ssl_primary_config cipher_list = 5;
    ssl_primary_config cipher_list13 = 6;
    ssl_primary_config pinned_key = 7;
    ssl_primary_config CRLfile = 8;
    ssl_primary_config cert_blob = 9;
    ssl_primary_config ca_info_blob = 10;
    ssl_primary_config issuercert_blob = 11;
    ssl_primary_config username = 12;
    ssl_primary_config password = 13;
    ssl_primary_config curves = 14;
    string ssl_options = 15;
    int32 version_max = 16;
    string version = 17;
    ssl_primary_config verifypeer = 18;
    ssl_primary_config verifyhost = 19;
    ssl_primary_config verifystatus = 20;
    ssl_primary_config sessionid = 21;
}

message ssl_config_data {
    ssl_config_data primary = 1;
    ssl_config_data certverifyresult = 2;
    ssl_config_data fsslctx = 3;
    ssl_config_data fsslctxp = 4;
    ssl_config_data cert_type = 5;
    ssl_config_data key = 6;
    ssl_config_data key_blob = 7;
    ssl_config_data key_type = 8;
    ssl_config_data key_passwd = 9;
    ssl_config_data certinfo = 10;
    ssl_config_data falsestart = 11;
    ssl_config_data enable_beast = 12;
    ssl_config_data no_revoke = 13;
    ssl_config_data no_partialchain = 14;
    ssl_config_data revoke_best_effort = 15;
    ssl_config_data native_ca_store = 16;
    ssl_config_data auto_client_cert = 17;
}

message ssl_general_config {
    ssl_general_config max_ssl_sessions = 1;
    int32 ca_cache_timeout = 2;
}

message Curl_ssl_session {
    Curl_ssl_session name = 1;
    Curl_ssl_session conn_to_host = 2;
    Curl_ssl_session scheme = 3;
    Curl_ssl_session sessionid = 4;
    Curl_ssl_session idsize = 5;
    Curl_ssl_session age = 6;
    int32 remote_port = 7;
    int32 conn_to_port = 8;
    Curl_ssl_session ssl_config = 9;
}

message digestdata {
    digestdata nonce = 1;
    digestdata cnonce = 2;
    digestdata realm = 3;
    digestdata opaque = 4;
    digestdata qop = 5;
    digestdata algorithm = 6;
    int32 nc = 7;
    string algo = 8;
    digestdata stale = 9;
    digestdata userhash = 10;
}

message ntlmdata {
    int32 flags = 1;
    string nonce = 2;
    int32 target_info_len = 3;
    ntlmdata target_info = 4;
}

message ConnectBits {
    ConnectBits httpproxy = 1;
    ConnectBits socksproxy = 2;
    ConnectBits proxy_user_passwd = 3;
    ConnectBits tunnel_proxy = 4;
    ConnectBits proxy_connect_closed = 5;
    ConnectBits proxy = 6;
    ConnectBits close = 7;
    ConnectBits reuse = 8;
    ConnectBits altused = 9;
    ConnectBits conn_to_host = 10;
    ConnectBits conn_to_port = 11;
    ConnectBits ipv6_ip = 12;
    ConnectBits ipv6 = 13;
    ConnectBits do_more = 14;
    ConnectBits protoconnstart = 15;
    ConnectBits retry = 16;
    ConnectBits authneg = 17;
    ConnectBits ftp_use_epsv = 18;
    ConnectBits ftp_use_eprt = 19;
    ConnectBits ftp_use_data_ssl = 20;
    ConnectBits ftp_use_control_ssl = 21;
    ConnectBits netrc = 22;
    ConnectBits bound = 23;
    ConnectBits multiplex = 24;
    ConnectBits tcp_fastopen = 25;
    ConnectBits tls_enable_alpn = 26;
    ConnectBits doh = 27;
    ConnectBits abstract_unix_socket = 28;
    ConnectBits tls_upgraded = 29;
    ConnectBits sock_accepted = 30;
    ConnectBits parallel_connect = 31;
}

message hostname {
    hostname rawalloc = 1;
    hostname encalloc = 2;
    hostname name = 3;
    hostname dispname = 4;
}

message Curl_async {
    Curl_async hostname = 1;
    Curl_async dns = 2;
    Curl_async tdata = 3;
    Curl_async resolver = 4;
    int32 port = 5;
    int32 status = 6;
    Curl_async done = 7;
}

message easy_pollset {
    easy_pollset sockets = 1;
    int32 num = 2;
    string actions = 3;
}

message SingleRequest {
    SingleRequest size = 1;
    SingleRequest maxdownload = 2;
    SingleRequest bytecount = 3;
    SingleRequest writebytecount = 4;
    SingleRequest pendingheader = 5;
    SingleRequest start = 6;
    int32 headerbytecount = 7;
    int32 allheadercount = 8;
    int32 deductheadercount = 9;
    int32 headerline = 10;
    SingleRequest offset = 11;
    int32 httpcode = 12;
    int32 keepon = 13;
    SingleRequest start100 = 14;
    SingleRequest exp100 = 15;
    SingleRequest upgr101 = 16;
    SingleRequest writer_stack = 17;
    SingleRequest timeofdoc = 18;
    SingleRequest bodywrites = 19;
    SingleRequest location = 20;
    SingleRequest newurl = 21;
    SingleRequest upload_present = 22;
    SingleRequest upload_fromhere = 23;
    SingleRequest p = 24;
    SingleRequest doh = 25;
    string fread_eof = 26;
    string setcookies = 27;
    SingleRequest header = 28;
    SingleRequest content_range = 29;
    SingleRequest download_done = 30;
    SingleRequest eos_written = 31;
    SingleRequest upload_done = 32;
    SingleRequest ignorebody = 33;
    SingleRequest http_bodyless = 34;
    SingleRequest chunk = 35;
    SingleRequest ignore_cl = 36;
    SingleRequest upload_chunky = 37;
    SingleRequest getheader = 38;
    SingleRequest forbidchunk = 39;
    SingleRequest no_body = 40;
}

message SingleRequest::union (unnamed at /data/tfk/study/PUT/curl/lib/urldata.h:708:3) {
    SingleRequest::union (unnamed at /data/tfk/study/PUT/curl/lib/urldata.h:708:3) file = 1;
    SingleRequest::union (unnamed at /data/tfk/study/PUT/curl/lib/urldata.h:708:3) ftp = 2;
    SingleRequest::union (unnamed at /data/tfk/study/PUT/curl/lib/urldata.h:708:3) http = 3;
    SingleRequest::union (unnamed at /data/tfk/study/PUT/curl/lib/urldata.h:708:3) imap = 4;
    SingleRequest::union (unnamed at /data/tfk/study/PUT/curl/lib/urldata.h:708:3) ldap = 5;
    SingleRequest::union (unnamed at /data/tfk/study/PUT/curl/lib/urldata.h:708:3) mqtt = 6;
    SingleRequest::union (unnamed at /data/tfk/study/PUT/curl/lib/urldata.h:708:3) pop3 = 7;
    SingleRequest::union (unnamed at /data/tfk/study/PUT/curl/lib/urldata.h:708:3) rtsp = 8;
    SingleRequest::union (unnamed at /data/tfk/study/PUT/curl/lib/urldata.h:708:3) smb = 9;
    SingleRequest::union (unnamed at /data/tfk/study/PUT/curl/lib/urldata.h:708:3) smtp = 10;
    SingleRequest::union (unnamed at /data/tfk/study/PUT/curl/lib/urldata.h:708:3) ssh = 11;
    SingleRequest::union (unnamed at /data/tfk/study/PUT/curl/lib/urldata.h:708:3) telnet = 12;
}

message Curl_handler {
    Curl_handler scheme = 1;
    Curl_handler setup_connection = 2;
    bool do_it = 3;
    bool done = 4;
    int32 do_more = 5;
    bool connect_it = 6;
    bool connecting = 7;
    bool doing = 8;
    int32 proto_getsock = 9;
    int32 doing_getsock = 10;
    int32 domore_getsock = 11;
    int32 perform_getsock = 12;
    bool disconnect = 13;
    bool write_resp = 14;
    int32 connection_check = 15;
    Curl_handler attach = 16;
    int32 defport = 17;
    Curl_handler protocol = 18;
    Curl_handler family = 19;
    int32 flags = 20;
}

message proxy_info {
    proxy_info host = 1;
    int32 port = 2;
    string proxytype = 3;
    proxy_info user = 4;
    proxy_info passwd = 5;
}

message connectdata {
    connectdata bundle_node = 1;
    connectdata fclosesocket = 2;
    connectdata closesocket_client = 3;
    connectdata connection_id = 4;
    connectdata dns_entry = 5;
    connectdata remote_addr = 6;
    connectdata host = 7;
    connectdata hostname_resolve = 8;
    connectdata secondaryhostname = 9;
    connectdata conn_to_host = 10;
    connectdata socks_proxy = 11;
    connectdata http_proxy = 12;
    string primary_ip = 13;
    connectdata user = 14;
    connectdata passwd = 15;
    connectdata options = 16;
    connectdata sasl_authzid = 17;
    connectdata oauth_bearer = 18;
    connectdata now = 19;
    connectdata created = 20;
    connectdata lastused = 21;
    connectdata sock = 22;
    connectdata recv = 23;
    connectdata send = 24;
    connectdata cfilter = 25;
    connectdata ssl_config = 26;
    connectdata proxy_ssl_config = 27;
    connectdata bits = 28;
    connectdata handler = 29;
    connectdata given = 30;
    connectdata keepalive = 31;
    connectdata sockfd = 32;
    connectdata writesockfd = 33;
    connectdata easyq = 34;
    connectdata seek_func = 35;
    connectdata seek_client = 36;
    connectdata http_ntlm_state = 37;
    connectdata proxy_ntlm_state = 38;
    connectdata ntlm = 39;
    connectdata proxyntlm = 40;
    connectdata proto = 41;
    connectdata bundle = 42;
    connectdata unix_domain_socket = 43;
    connectdata localdev = 44;
    connectdata localportrange = 45;
    int32 waitfor = 46;
    int32 port = 47;
    int32 remote_port = 48;
    int32 conn_to_port = 49;
    int32 scope_id = 50;
    connectdata localport = 51;
    connectdata secondary_port = 52;
    string alpn = 53;
    string proxy_alpn = 54;
    string transport = 55;
    string ip_version = 56;
    string httpversion = 57;
    string connect_only = 58;
    string gssapi_delegation = 59;
}

message connectdata::union (unnamed at /data/tfk/study/PUT/curl/lib/urldata.h:1023:3) {
    connectdata::union (unnamed at /data/tfk/study/PUT/curl/lib/urldata.h:1023:3) ftpc = 1;
    connectdata::union (unnamed at /data/tfk/study/PUT/curl/lib/urldata.h:1023:3) tftpc = 2;
    connectdata::union (unnamed at /data/tfk/study/PUT/curl/lib/urldata.h:1023:3) imapc = 3;
    connectdata::union (unnamed at /data/tfk/study/PUT/curl/lib/urldata.h:1023:3) pop3c = 4;
    connectdata::union (unnamed at /data/tfk/study/PUT/curl/lib/urldata.h:1023:3) smtpc = 5;
    connectdata::union (unnamed at /data/tfk/study/PUT/curl/lib/urldata.h:1023:3) rtspc = 6;
    connectdata::union (unnamed at /data/tfk/study/PUT/curl/lib/urldata.h:1023:3) smbc = 7;
    connectdata::union (unnamed at /data/tfk/study/PUT/curl/lib/urldata.h:1023:3) mqtt = 8;
    int32 unused = 9;
}

message PureInfo {
    int32 httpcode = 1;
    int32 httpproxycode = 2;
    int32 httpversion = 3;
    PureInfo filetime = 4;
    PureInfo request_size = 5;
    PureInfo proxyauthavail = 6;
    PureInfo httpauthavail = 7;
    PureInfo numconnects = 8;
    PureInfo contenttype = 9;
    PureInfo wouldredirect = 10;
    PureInfo retry_after = 11;
    int32 header_size = 12;
    string conn_primary_ip = 13;
    int32 conn_primary_port = 14;
    int32 conn_remote_port = 15;
    string conn_local_ip = 16;
    int32 conn_local_port = 17;
    PureInfo conn_scheme = 18;
    int32 conn_protocol = 19;
    PureInfo certs = 20;
    PureInfo pxcode = 21;
    PureInfo timecond = 22;
}

message Progress {
    Progress lastshow = 1;
    Progress size_dl = 2;
    Progress size_ul = 3;
    Progress downloaded = 4;
    Progress uploaded = 5;
    Progress current_speed = 6;
    int32 width = 7;
    int32 flags = 8;
    Progress timespent = 9;
    Progress dlspeed = 10;
    Progress ulspeed = 11;
    Progress t_postqueue = 12;
    Progress t_nslookup = 13;
    Progress t_connect = 14;
    Progress t_appconnect = 15;
    Progress t_pretransfer = 16;
    Progress t_starttransfer = 17;
    Progress t_redirect = 18;
    Progress start = 19;
    Progress t_startsingle = 20;
    Progress t_startop = 21;
    Progress t_acceptdata = 22;
    Progress ul_limit_start = 23;
    Progress ul_limit_size = 24;
    Progress dl_limit_start = 25;
    Progress dl_limit_size = 26;
    Progress speeder = 27;
    Progress speeder_time = 28;
    int32 speeder_c = 29;
    Progress callback = 30;
    Progress is_t_startransfer_set = 31;
}

message auth {
    auth want = 1;
    auth picked = 2;
    auth avail = 3;
    auth done = 4;
    auth multipass = 5;
    auth iestyle = 6;
}

message Curl_data_priority {
    int32 weight = 1;
}

message tempbuf {
    tempbuf b = 1;
    int32 type = 2;
    tempbuf paused_body = 3;
}

message time_node {
    time_node list = 1;
    time_node time = 2;
    time_node eid = 3;
}

message urlpieces {
    urlpieces scheme = 1;
    urlpieces hostname = 2;
    urlpieces port = 3;
    urlpieces user = 4;
    urlpieces password = 5;
    urlpieces options = 6;
    urlpieces path = 7;
    urlpieces query = 8;
}

message UrlState {
    UrlState conn_cache = 1;
    UrlState keeps_speed = 2;
    UrlState lastconnect_id = 3;
    UrlState recent_conn_id = 4;
    UrlState headerb = 5;
    UrlState hstslist = 6;
    UrlState buffer = 7;
    UrlState ulbuf = 8;
    UrlState current_speed = 9;
    UrlState first_host = 10;
    int32 first_remote_port = 11;
    UrlState first_remote_protocol = 12;
    int32 retrycount = 13;
    UrlState session = 14;
    UrlState sessionage = 15;
    UrlState tempwrite = 16;
    int32 tempcount = 17;
    int32 os_errno = 18;
    UrlState scratch = 19;
    UrlState followlocation = 20;
    int32 requests = 21;
    int32 prev_signal = 22;
    UrlState digest = 23;
    UrlState proxydigest = 24;
    UrlState authhost = 25;
    UrlState authproxy = 26;
    UrlState async = 27;
    UrlState engine = 28;
    UrlState expiretime = 29;
    UrlState timenode = 30;
    UrlState timeoutlist = 31;
    UrlState expires = 32;
    UrlState most_recent_ftp_entrypath = 33;
    UrlState prev_block_had_trailing_cr = 34;
    UrlState crlf_conversions = 35;
    UrlState range = 36;
    UrlState resume_from = 37;
    UrlState rtsp_next_client_CSeq = 38;
    UrlState rtsp_next_server_CSeq = 39;
    UrlState rtsp_CSeq_recv = 40;
    string rtp_channel_mask = 41;
    UrlState infilesize = 42;
    UrlState fread_func = 43;
    UrlState in = 44;
    UrlState uh = 45;
    UrlState up = 46;
    UrlState url = 47;
    UrlState referer = 48;
    UrlState resolve = 49;
    UrlState mimepost = 50;
    UrlState formp = 51;
    UrlState trailers_bytes_sent = 52;
    UrlState trailers_buf = 53;
    UrlState httphdrs = 54;
    UrlState headerout = 55;
    UrlState prevhead = 56;
    UrlState trailers_state = 57;
    UrlState cookielist = 58;
    UrlState aptr = 59;
    string httpwant = 60;
    string httpversion = 61;
    string httpreq = 62;
    string select_bits = 63;
    UrlState multi_owned_by_easy = 64;
    UrlState this_is_a_follow = 65;
    UrlState refused_stream = 66;
    UrlState errorbuf = 67;
    UrlState allow_port = 68;
    UrlState authproblem = 69;
    UrlState wildcardmatch = 70;
    UrlState expect100header = 71;
    UrlState disableexpect = 72;
    UrlState use_range = 73;
    UrlState rangestringalloc = 74;
    UrlState done = 75;
    UrlState previouslypending = 76;
    UrlState cookie_engine = 77;
    UrlState prefer_ascii = 78;
    UrlState list_only = 79;
    UrlState url_alloc = 80;
    UrlState referer_alloc = 81;
    UrlState wildcard_resolve = 82;
    UrlState rewindbeforesend = 83;
    UrlState upload = 84;
    UrlState internal = 85;
}

message dynamically_allocated_data {
    dynamically_allocated_data proxyuserpwd = 1;
    dynamically_allocated_data uagent = 2;
    dynamically_allocated_data accept_encoding = 3;
    dynamically_allocated_data userpwd = 4;
    dynamically_allocated_data rangeline = 5;
    dynamically_allocated_data ref = 6;
    dynamically_allocated_data host = 7;
    dynamically_allocated_data cookiehost = 8;
    dynamically_allocated_data rtsp_transport = 9;
    dynamically_allocated_data te = 10;
    dynamically_allocated_data user = 11;
    dynamically_allocated_data passwd = 12;
    dynamically_allocated_data proxyuser = 13;
    dynamically_allocated_data proxypasswd = 14;
}

message UserDefined {
    UserDefined err = 1;
    UserDefined debugdata = 2;
    UserDefined errorbuffer = 3;
    UserDefined out = 4;
    UserDefined in_set = 5;
    UserDefined writeheader = 6;
    UserDefined use_port = 7;
    UserDefined httpauth = 8;
    UserDefined proxyauth = 9;
    UserDefined maxredirs = 10;
    UserDefined postfields = 11;
    UserDefined seek_func = 12;
    UserDefined postfieldsize = 13;
    UserDefined localport = 14;
    UserDefined localportrange = 15;
    UserDefined fwrite_func = 16;
    UserDefined fwrite_header = 17;
    UserDefined fwrite_rtp = 18;
    UserDefined fread_func_set = 19;
    UserDefined fprogress = 20;
    UserDefined fxferinfo = 21;
    UserDefined fdebug = 22;
    UserDefined ioctl_func = 23;
    UserDefined fsockopt = 24;
    UserDefined sockopt_client = 25;
    UserDefined fopensocket = 26;
    UserDefined opensocket_client = 27;
    UserDefined fclosesocket = 28;
    UserDefined closesocket_client = 29;
    UserDefined fprereq = 30;
    UserDefined prereq_userp = 31;
    UserDefined seek_client = 32;
    UserDefined hsts_read = 33;
    UserDefined hsts_read_userp = 34;
    UserDefined hsts_write = 35;
    UserDefined hsts_write_userp = 36;
    UserDefined progress_client = 37;
    UserDefined ioctl_client = 38;
    int32 timeout = 39;
    int32 connecttimeout = 40;
    int32 happy_eyeballs_timeout = 41;
    int32 server_response_timeout = 42;
    UserDefined maxage_conn = 43;
    UserDefined maxlifetime_conn = 44;
    UserDefined tftp_blksize = 45;
    UserDefined filesize = 46;
    UserDefined low_speed_limit = 47;
    UserDefined low_speed_time = 48;
    UserDefined max_send_speed = 49;
    UserDefined max_recv_speed = 50;
    UserDefined set_resume_from = 51;
    UserDefined headers = 52;
    UserDefined httppost = 53;
    UserDefined mimepost = 54;
    UserDefined telnet_options = 55;
    UserDefined resolve = 56;
    UserDefined connect_to = 57;
    UserDefined timevalue = 58;
    string timecondition = 59;
    string method = 60;
    string httpwant = 61;
    UserDefined ssl = 62;
    UserDefined proxy_ssl = 63;
    UserDefined proxyheaders = 64;
    UserDefined proxyport = 65;
    string proxytype = 66;
    string socks5auth = 67;
    UserDefined general_ssl = 68;
    int32 dns_cache_timeout = 69;
    int32 buffer_size = 70;
    int32 upload_buffer_size = 71;
    UserDefined private_data = 72;
    UserDefined http200aliases = 73;
    string ipver = 74;
    UserDefined max_filesize = 75;
    string ftp_filemethod = 76;
    string ftpsslauth = 77;
    string ftp_ccc = 78;
    int32 accepttimeout = 79;
    UserDefined quote = 80;
    UserDefined postquote = 81;
    UserDefined prequote = 82;
    string ftp_create_missing_dirs = 83;
    string use_netrc = 84;
    int32 new_file_perms = 85;
    UserDefined str = 86;
    UserDefined blobs = 87;
    int32 scope_id = 88;
    UserDefined allowed_protocols = 89;
    UserDefined redir_protocols = 90;
    UserDefined rtp_out = 91;
    UserDefined rtspreq = 92;
    UserDefined chunk_bgn = 93;
    UserDefined chunk_end = 94;
    UserDefined fnmatch = 95;
    UserDefined fnmatch_data = 96;
    UserDefined wildcardptr = 97;
    string gssapi_delegation = 98;
    int32 tcp_keepidle = 99;
    int32 tcp_keepintvl = 100;
    UserDefined expect_100_timeout = 101;
    UserDefined resolver_start = 102;
    UserDefined resolver_start_client = 103;
    UserDefined upkeep_interval_ms = 104;
    UserDefined fmultidone = 105;
    UserDefined dohfor = 106;
    UserDefined uh = 107;
    UserDefined trailer_data = 108;
    UserDefined trailer_callback = 109;
    string keep_post = 110;
    UserDefined mail_rcpt = 111;
    UserDefined mail_rcpt_allowfails = 112;
    int32 maxconnects = 113;
    string use_ssl = 114;
    string connect_only = 115;
    UserDefined mime_formescape = 116;
    UserDefined is_fread_set = 117;
    UserDefined tftp_no_options = 118;
    UserDefined sep_headers = 119;
    UserDefined cookiesession = 120;
    UserDefined crlf = 121;
    UserDefined ssh_compression = 122;
    UserDefined quick_exit = 123;
    UserDefined get_filetime = 124;
    UserDefined tunnel_thru_httpproxy = 125;
    UserDefined prefer_ascii = 126;
    UserDefined remote_append = 127;
    UserDefined list_only = 128;
    UserDefined ftp_use_port = 129;
    UserDefined ftp_use_epsv = 130;
    UserDefined ftp_use_eprt = 131;
    UserDefined ftp_use_pret = 132;
    UserDefined ftp_skip_ip = 133;
    UserDefined wildcard_enabled = 134;
    UserDefined hide_progress = 135;
    UserDefined http_fail_on_error = 136;
    UserDefined http_keep_sending_on_error = 137;
    UserDefined http_follow_location = 138;
    UserDefined http_transfer_encoding = 139;
    UserDefined allow_auth_to_other_hosts = 140;
    UserDefined include_header = 141;
    UserDefined http_set_referer = 142;
    UserDefined http_auto_referer = 143;
    UserDefined opt_no_body = 144;
    UserDefined verbose = 145;
    UserDefined krb = 146;
    UserDefined reuse_forbid = 147;
    UserDefined reuse_fresh = 148;
    UserDefined no_signal = 149;
    UserDefined tcp_nodelay = 150;
    UserDefined ignorecl = 151;
    UserDefined http_te_skip = 152;
    UserDefined http_ce_skip = 153;
    UserDefined proxy_transfer_mode = 154;
    UserDefined sasl_ir = 155;
    UserDefined tcp_keepalive = 156;
    UserDefined tcp_fastopen = 157;
    UserDefined ssl_enable_alpn = 158;
    UserDefined path_as_is = 159;
    UserDefined pipewait = 160;
    UserDefined suppress_connect_headers = 161;
    UserDefined dns_shuffle_addresses = 162;
    UserDefined haproxyprotocol = 163;
    UserDefined abstract_unix_socket = 164;
    UserDefined disallow_username_in_url = 165;
    UserDefined doh = 166;
    UserDefined doh_verifypeer = 167;
    UserDefined doh_verifyhost = 168;
    UserDefined doh_verifystatus = 169;
    UserDefined http09_allowed = 170;
}

message Names {
    Names hostcache = 1;
    Names hostcachetype = 2;
}

message Curl_easy {
    int32 magic = 1;
    Curl_easy id = 2;
    Curl_easy next = 3;
    Curl_easy prev = 4;
    Curl_easy conn = 5;
    Curl_easy connect_queue = 6;
    Curl_easy conn_queue = 7;
    Curl_easy mstate = 8;
    Curl_easy result = 9;
    Curl_easy msg = 10;
    Curl_easy last_poll = 11;
    Curl_easy dns = 12;
    Curl_easy multi = 13;
    Curl_easy multi_easy = 14;
    Curl_easy share = 15;
    Curl_easy req = 16;
    Curl_easy set = 17;
    Curl_easy cookies = 18;
    Curl_easy hsts = 19;
    Curl_easy asi = 20;
    Curl_easy progress = 21;
    Curl_easy state = 22;
    Curl_easy wildcard = 23;
    Curl_easy info = 24;
    Curl_easy tsi = 25;
}

message Curl_cwtype {
    Curl_cwtype name = 1;
    Curl_cwtype alias = 2;
    Curl_cwtype do_init = 3;
    int32 do_write = 4;
    Curl_cwtype do_close = 5;
    Curl_cwtype cwriter_size = 6;
}

message Curl_cwriter {
    Curl_cwriter cwt = 1;
    Curl_cwriter next = 2;
    Curl_cwriter phase = 3;
}

message Curl_cftype {
    Curl_cftype name = 1;
    int32 flags = 2;
    int32 log_level = 3;
    Curl_cftype destroy = 4;
    Curl_cftype do_connect = 5;
    Curl_cftype do_close = 6;
    Curl_cftype get_host = 7;
    Curl_cftype adjust_pollset = 8;
    Curl_cftype has_data_pending = 9;
    Curl_cftype do_send = 10;
    Curl_cftype do_recv = 11;
    Curl_cftype cntrl = 12;
    Curl_cftype is_alive = 13;
    Curl_cftype keep_alive = 14;
    Curl_cftype query = 15;
}

message Curl_cfilter {
    Curl_cfilter cft = 1;
    Curl_cfilter next = 2;
    Curl_cfilter ctx = 3;
    Curl_cfilter conn = 4;
    int32 sockindex = 5;
    Curl_cfilter connected = 6;
}

message cf_call_data {
    cf_call_data data = 1;
}

message alpn_spec {
    string entries = 1;
    alpn_spec count = 2;
}

message alpn_proto_buf {
    string data = 1;
    int32 len = 2;
}

message ssl_connect_data {
    ssl_connect_data state = 1;
    ssl_connect_data connecting_state = 2;
    ssl_connect_data peer = 3;
    ssl_connect_data alpn = 4;
    ssl_connect_data backend = 5;
    ssl_connect_data call_data = 6;
    ssl_connect_data handshake_done = 7;
    int32 port = 8;
    ssl_connect_data use_alpn = 9;
    ssl_connect_data reused_session = 10;
}

message Curl_ssl {
    Curl_ssl info = 1;
    int32 supports = 2;
    Curl_ssl sizeof_ssl_backend_data = 3;
    int32 init = 4;
    Curl_ssl cleanup = 5;
    Curl_ssl version = 6;
    int32 check_cxn = 7;
    int32 shut_down = 8;
    bool data_pending = 9;
    Curl_ssl random = 10;
    bool cert_status_request = 11;
    Curl_ssl connect_blocking = 12;
    bool connect_nonblocking = 13;
    Curl_ssl adjust_pollset = 14;
    Curl_ssl get_internals = 15;
    Curl_ssl close = 16;
    Curl_ssl close_all = 17;
    Curl_ssl session_free = 18;
    Curl_ssl set_engine = 19;
    Curl_ssl set_engine_default = 20;
    Curl_ssl engines_list = 21;
    bool false_start = 22;
    Curl_ssl sha256sum = 23;
    bool attach_data = 24;
    Curl_ssl detach_data = 25;
    Curl_ssl free_multi_ssl_backend_data = 26;
    Curl_ssl recv_plain = 27;
    Curl_ssl send_plain = 28;
}

message ossl_ssl_backend_data {
    ossl_ssl_backend_data ctx = 1;
    ossl_ssl_backend_data handle = 2;
    ossl_ssl_backend_data server_cert = 3;
    ossl_ssl_backend_data bio_method = 4;
    ossl_ssl_backend_data io_result = 5;
    bool x509_store_setup = 6;
}

message multi_ssl_backend_data {
    multi_ssl_backend_data CAfile = 1;
    multi_ssl_backend_data store = 2;
    multi_ssl_backend_data time = 3;
}

message struct (unnamed at /data/tfk/study/PUT/curl/lib/vtls/openssl.c:1350:9) {
    struct (unnamed at /data/tfk/study/PUT/curl/lib/vtls/openssl.c:1350:9) cert_id = 1;
    struct (unnamed at /data/tfk/study/PUT/curl/lib/vtls/openssl.c:1350:9) cert = 2;
}

message tool_mime {
    tool_mime kind = 1;
    tool_mime parent = 2;
    tool_mime prev = 3;
    tool_mime data = 4;
    tool_mime name = 5;
    tool_mime filename = 6;
    tool_mime type = 7;
    tool_mime encoder = 8;
    tool_mime headers = 9;
    tool_mime subparts = 10;
    tool_mime origin = 11;
    tool_mime size = 12;
    tool_mime curpos = 13;
    tool_mime config = 14;
}

message NameValue {
    NameValue name = 1;
    NameValue value = 2;
}

message NameValueUnsigned {
    NameValueUnsigned name = 1;
    NameValueUnsigned value = 2;
}

message slist_wc {
    slist_wc first = 1;
    slist_wc last = 2;
}

message HdrCbData {
    HdrCbData global = 1;
    HdrCbData config = 2;
    HdrCbData outs = 3;
    HdrCbData heads = 4;
    HdrCbData etag_save = 5;
    bool honor_cd_filename = 6;
}

message ProgressData {
    int32 calls = 1;
    ProgressData prev = 2;
    ProgressData prevtime = 3;
    int32 width = 4;
    ProgressData out = 5;
    ProgressData initial_size = 6;
    int32 tick = 7;
    int32 bar = 8;
    int32 barmove = 9;
}

message per_transfer {
    per_transfer next = 1;
    per_transfer prev = 2;
    per_transfer config = 3;
    per_transfer certinfo = 4;
    per_transfer curl = 5;
    per_transfer retry_numretries = 6;
    per_transfer retry_sleep_default = 7;
    per_transfer retry_sleep = 8;
    per_transfer start = 9;
    per_transfer retrystart = 10;
    per_transfer this_url = 11;
    int32 urlnum = 12;
    per_transfer outfile = 13;
    bool infdopen = 14;
    int32 infd = 15;
    bool noprogress = 16;
    per_transfer progressbar = 17;
    per_transfer outs = 18;
    per_transfer heads = 19;
    per_transfer etag_save = 20;
    per_transfer hdrcbdata = 21;
    per_transfer num_headers = 22;
    bool was_last_header_empty = 23;
    bool added = 24;
    per_transfer startat = 25;
    bool abort = 26;
    per_transfer dltotal = 27;
    per_transfer dlnow = 28;
    per_transfer ultotal = 29;
    per_transfer ulnow = 30;
    per_transfer uploadfilesize = 31;
    per_transfer uploadedsofar = 32;
    bool dltotal_added = 33;
    bool ultotal_added = 34;
    per_transfer uploadfile = 35;
    per_transfer errorbuffer = 36;
}

message Curl_share {
    int32 magic = 1;
    int32 specifier = 2;
    int32 dirty = 3;
    Curl_share lockfunc = 4;
    Curl_share unlockfunc = 5;
    Curl_share clientdata = 6;
    Curl_share conn_cache = 7;
    Curl_share hostcache = 8;
    Curl_share cookies = 9;
    Curl_share hsts = 10;
    Curl_share sslsession = 11;
    Curl_share max_ssl_sessions = 12;
    Curl_share sessionage = 13;
}

message srvr_sockaddr_union_t {
    srvr_sockaddr_union_t sa = 1;
    srvr_sockaddr_union_t sa4 = 2;
    srvr_sockaddr_union_t sa6 = 3;
    srvr_sockaddr_union_t sau = 4;
}

message httprequest {
    string reqbuf = 1;
    bool connect_request = 2;
    httprequest connect_port = 3;
    httprequest checkindex = 4;
    httprequest offset = 5;
    httprequest testno = 6;
    httprequest partno = 7;
    bool open = 8;
    bool auth_req = 9;
    bool auth = 10;
    httprequest cl = 11;
    bool digest = 12;
    bool ntlm = 13;
    int32 delay = 14;
    int32 writedelay = 15;
    int32 skip = 16;
    int32 rcmd = 17;
    int32 prot_version = 18;
    int32 callcount = 19;
    bool skipall = 20;
    bool noexpect = 21;
    bool connmon = 22;
    bool upgrade = 23;
    bool upgrade_request = 24;
    bool close = 25;
    int32 done_processing = 26;
}

message finder {
    finder env = 1;
    finder append = 2;
    finder withoutdot = 3;
}

message Tdata {
    Tdata share = 1;
    Tdata url = 2;
}

message userdata {
    userdata text = 1;
    int32 counter = 2;
}

message HMAC_params {
    HMAC_params hmac_hinit = 1;
    HMAC_params hmac_hupdate = 2;
    HMAC_params hmac_hfinal = 3;
    int32 hmac_ctxtsize = 4;
    int32 hmac_maxkeylen = 5;
    int32 hmac_resultlen = 6;
}

message HMAC_context {
    HMAC_context hmac_hash = 1;
    HMAC_context hmac_hashctxt1 = 2;
    HMAC_context hmac_hashctxt2 = 3;
}

message MD5_params {
    MD5_params md5_init_func = 1;
    MD5_params md5_update_func = 2;
    MD5_params md5_final_func = 3;
    int32 md5_ctxtsize = 4;
    int32 md5_resultlen = 5;
}

message MD5_context {
    MD5_context md5_hash = 1;
    MD5_context md5_hashctx = 2;
}

message libtest_trace_cfg {
    int32 tracetime = 1;
    int32 nohex = 2;
}

message smb_header {
    string nbt_type = 1;
    string nbt_flags = 2;
    smb_header nbt_length = 3;
    string magic = 4;
    string command = 5;
    int32 status = 6;
    string flags = 7;
    smb_header flags2 = 8;
    smb_header pid_high = 9;
    string signature = 10;
    smb_header pad = 11;
    smb_header tid = 12;
    smb_header pid = 13;
    smb_header uid = 14;
    smb_header mid = 15;
}

message smb_negotiate_response {
    smb_negotiate_response h = 1;
    string word_count = 2;
    smb_negotiate_response dialect_index = 3;
    string security_mode = 4;
    smb_negotiate_response max_mpx_count = 5;
    smb_negotiate_response max_number_vcs = 6;
    int32 max_buffer_size = 7;
    int32 max_raw_size = 8;
    int32 session_key = 9;
    int32 capabilities = 10;
    int32 system_time_low = 11;
    int32 system_time_high = 12;
    smb_negotiate_response server_time_zone = 13;
    string encryption_key_length = 14;
    smb_negotiate_response byte_count = 15;
    string bytes = 16;
}

message andx {
    string command = 1;
    string pad = 2;
    andx offset = 3;
}

message smb_setup {
    string word_count = 1;
    smb_setup andx = 2;
    smb_setup max_buffer_size = 3;
    smb_setup max_mpx_count = 4;
    smb_setup vc_number = 5;
    int32 session_key = 6;
    smb_setup lengths = 7;
    int32 pad = 8;
    int32 capabilities = 9;
    smb_setup byte_count = 10;
    string bytes = 11;
}

message smb_tree_connect {
    string word_count = 1;
    smb_tree_connect andx = 2;
    smb_tree_connect flags = 3;
    smb_tree_connect pw_len = 4;
    smb_tree_connect byte_count = 5;
    string bytes = 6;
}

message smb_nt_create {
    string word_count = 1;
    smb_nt_create andx = 2;
    string pad = 3;
    smb_nt_create name_length = 4;
    int32 flags = 5;
    int32 root_fid = 6;
    int32 access = 7;
    smb_nt_create allocation_size = 8;
    int32 ext_file_attributes = 9;
    int32 share_access = 10;
    int32 create_disposition = 11;
    int32 create_options = 12;
    int32 impersonation_level = 13;
    string security_flags = 14;
    smb_nt_create byte_count = 15;
    string bytes = 16;
}

message smb_nt_create_response {
    smb_nt_create_response h = 1;
    string word_count = 2;
    smb_nt_create_response andx = 3;
    string op_lock_level = 4;
    smb_nt_create_response fid = 5;
    int32 create_disposition = 6;
    smb_nt_create_response create_time = 7;
    smb_nt_create_response last_access_time = 8;
    smb_nt_create_response last_write_time = 9;
    smb_nt_create_response last_change_time = 10;
    int32 ext_file_attributes = 11;
    smb_nt_create_response allocation_size = 12;
    smb_nt_create_response end_of_file = 13;
}

message smb_read {
    string word_count = 1;
    smb_read andx = 2;
    smb_read fid = 3;
    int32 offset = 4;
    smb_read max_bytes = 5;
    smb_read min_bytes = 6;
    int32 timeout = 7;
    smb_read remaining = 8;
    int32 offset_high = 9;
    smb_read byte_count = 10;
}

message smb_write {
    smb_write h = 1;
    string word_count = 2;
    smb_write andx = 3;
    smb_write fid = 4;
    int32 offset = 5;
    int32 timeout = 6;
    smb_write write_mode = 7;
    smb_write remaining = 8;
    smb_write pad = 9;
    smb_write data_length = 10;
    smb_write data_offset = 11;
    int32 offset_high = 12;
    smb_write byte_count = 13;
    string pad2 = 14;
}

message smb_close {
    string word_count = 1;
    smb_close fid = 2;
    int32 last_mtime = 3;
    smb_close byte_count = 4;
}

message smb_tree_disconnect {
    string word_count = 1;
    smb_tree_disconnect byte_count = 2;
}

message smb_request {
    smb_request state = 1;
    smb_request path = 2;
    smb_request tid = 3;
    smb_request fid = 4;
    smb_request result = 5;
}

message Curl_header_store {
    Curl_header_store node = 1;
    Curl_header_store name = 2;
    Curl_header_store value = 3;
    int32 request = 4;
    string type = 5;
    string buffer = 6;
}

message cf_socket_ctx {
    int32 transport = 1;
    cf_socket_ctx addr = 2;
    cf_socket_ctx sock = 3;
    cf_socket_ctx recvbuf = 4;
    string r_ip = 5;
    int32 r_port = 6;
    string l_ip = 7;
    int32 l_port = 8;
    cf_socket_ctx started_at = 9;
    cf_socket_ctx connected_at = 10;
    cf_socket_ctx first_byte_at = 11;
    int32 error = 12;
    cf_socket_ctx got_first_byte = 13;
    cf_socket_ctx accepted = 14;
    cf_socket_ctx sock_connected = 15;
    cf_socket_ctx active = 16;
    cf_socket_ctx buffer_recv = 17;
}

message reader_ctx {
    reader_ctx cf = 1;
    reader_ctx data = 2;
}

message sigpipe_ignore {
    sigpipe_ignore old_pipe_act = 1;
    sigpipe_ignore no_signal = 2;
}

message fileinfo {
    fileinfo info = 1;
    fileinfo list = 2;
    fileinfo buf = 3;
}

message writeoutvar {
    writeoutvar name = 1;
    writeoutvar id = 2;
    writeoutvar ci = 3;
    int32 writefunc = 4;
}

message helptxt {
    helptxt opt = 1;
    helptxt desc = 2;
    helptxt categories = 3;
}

message struct (unnamed at /data/tfk/study/PUT/curl/lib/curl_sasl.c:61:14) {
    struct (unnamed at /data/tfk/study/PUT/curl/lib/curl_sasl.c:61:14) name = 1;
    struct (unnamed at /data/tfk/study/PUT/curl/lib/curl_sasl.c:61:14) len = 2;
    struct (unnamed at /data/tfk/study/PUT/curl/lib/curl_sasl.c:61:14) bit = 3;
}

message va_input {
    va_input type = 1;
    int32 val = 2;
}

message va_input::union (unnamed at /data/tfk/study/PUT/curl/lib/mprintf.c:149:3) {
    va_input::union (unnamed at /data/tfk/study/PUT/curl/lib/mprintf.c:149:3) str = 1;
    va_input::union (unnamed at /data/tfk/study/PUT/curl/lib/mprintf.c:149:3) ptr = 2;
    va_input::union (unnamed at /data/tfk/study/PUT/curl/lib/mprintf.c:149:3) nums = 3;
    va_input::union (unnamed at /data/tfk/study/PUT/curl/lib/mprintf.c:149:3) numu = 4;
    va_input::union (unnamed at /data/tfk/study/PUT/curl/lib/mprintf.c:149:3) dnum = 5;
}

message outsegment {
    int32 width = 1;
    int32 precision = 2;
    int32 flags = 3;
    int32 input = 4;
    outsegment start = 5;
    outsegment outlen = 6;
}

message nsprintf {
    nsprintf buffer = 1;
    nsprintf length = 2;
    nsprintf max = 3;
}

message asprintf {
    asprintf b = 1;
    string merr = 2;
}

message stsentry {
    stsentry node = 1;
    stsentry host = 2;
    bool includeSubDomains = 3;
    stsentry expires = 4;
}

message hsts {
    hsts list = 1;
    hsts filename = 2;
    int32 flags = 3;
}

message althost {
    althost host = 1;
    althost port = 2;
    althost alpnid = 3;
}

message altsvc {
    altsvc src = 1;
    altsvc dst = 2;
    altsvc expires = 3;
    bool persist = 4;
    int32 prio = 5;
    altsvc node = 6;
}

message altsvcinfo {
    altsvcinfo filename = 1;
    altsvcinfo list = 2;
    altsvcinfo flags = 3;
}

message name_const {
    name_const name = 1;
    name_const namelen = 2;
}

message connfind {
    connfind id_tofind = 1;
    connfind found = 2;
}

message eyeballer {
    eyeballer name = 1;
    eyeballer first = 2;
    eyeballer addr = 3;
    int32 ai_family = 4;
    eyeballer cf_create = 5;
    eyeballer cf = 6;
    eyeballer primary = 7;
    eyeballer delay_ms = 8;
    eyeballer started = 9;
    eyeballer timeoutms = 10;
    eyeballer timeout_id = 11;
    eyeballer result = 12;
    int32 error = 13;
    eyeballer rewinded = 14;
    eyeballer has_started = 15;
    eyeballer is_done = 16;
    eyeballer connected = 17;
    eyeballer inconclusive = 18;
}

message cf_he_ctx {
    int32 transport = 1;
    cf_he_ctx cf_create = 2;
    cf_he_ctx remotehost = 3;
    cf_he_ctx state = 4;
    cf_he_ctx baller = 5;
    cf_he_ctx winner = 6;
    cf_he_ctx started = 7;
}

message transport_provider {
    int32 transport = 1;
    transport_provider cf_create = 2;
}

message cf_setup_ctx {
    cf_setup_ctx state = 1;
    cf_setup_ctx remotehost = 2;
    int32 ssl_mode = 3;
    int32 transport = 4;
}

message ContentType {
    ContentType extension = 1;
    ContentType type = 2;
}

message unsshort_st {
    unsshort_st num = 1;
    unsshort_st expected = 2;
    string result = 3;
}

message sigshort_st {
    sigshort_st num = 1;
    sigshort_st expected = 2;
    string result = 3;
}

message unsint_st {
    int32 num = 1;
    unsint_st expected = 2;
    string result = 3;
}

message sigint_st {
    int32 num = 1;
    sigint_st expected = 2;
    string result = 3;
}

message unslong_st {
    unslong_st num = 1;
    unslong_st expected = 2;
    string result = 3;
}

message siglong_st {
    siglong_st num = 1;
    siglong_st expected = 2;
    string result = 3;
}

message curloff_st {
    curloff_st num = 1;
    curloff_st expected = 2;
    string result = 3;
}

message xattr_mapping {
    xattr_mapping attr = 1;
    xattr_mapping info = 2;
}

message cf_proxy_ctx {
    cf_proxy_ctx cf_protocol = 1;
}

message dnsprobe {
    dnsprobe easy = 1;
    dnsprobe dnstype = 2;
    string dohbuffer = 3;
    dnsprobe dohlen = 4;
    dnsprobe serverdoh = 5;
}

message dohdata {
    dohdata headers = 1;
    dohdata probe = 2;
    int32 pending = 3;
    int32 port = 4;
    dohdata host = 5;
}

message dohaddr {
    int32 type = 1;
    dohaddr ip = 2;
}

message dohaddr::union (unnamed at /data/tfk/study/PUT/curl/lib/doh.h:94:3) {
    string v4 = 1;
    string v6 = 2;
}

message dohentry {
    dohentry cname = 1;
    dohentry addr = 2;
    int32 numaddr = 3;
    int32 ttl = 4;
    int32 numcname = 5;
}

message prunedead {
    prunedead data = 1;
    prunedead extracted = 2;
}

message LongShort {
    LongShort lname = 1;
    LongShort desc = 2;
    string letter = 3;
    LongShort cmd = 4;
}

message chunk_data {
    int32 remains = 1;
    int32 print_content = 2;
}

message pair {
    pair in = 1;
    pair exp = 2;
}

message tftphdr {
    tftphdr th_opcode = 1;
    tftphdr th_block = 2;
    string th_data = 3;
}

message testcase {
    testcase buffer = 1;
    testcase bufsize = 2;
    testcase rptr = 3;
    testcase rcount = 4;
    testcase testno = 5;
    int32 ofile = 6;
    int32 writedelay = 7;
}

message formats {
    formats f_mode = 1;
    int32 f_convert = 2;
}

message errmsg {
    int32 e_code = 1;
    errmsg e_msg = 2;
}

message tftphdr_storage_t {
    tftphdr_storage_t hdr = 1;
    string storage = 2;
}

message bf {
    int32 counter = 1;
    bf buf = 2;
}

message configurable {
    string version = 1;
    string nmethods_min = 2;
    string nmethods_max = 3;
    string responseversion = 4;
    string responsemethod = 5;
    string reqcmd = 6;
    string connectrep = 7;
    configurable port = 8;
    string addr = 9;
    string user = 10;
    string password = 11;
}

message perclient {
    perclient fromremote = 1;
    perclient fromclient = 2;
    perclient remotefd = 3;
    perclient clientfd = 4;
    bool used = 5;
}

message s_tls_max {
    s_tls_max tls_max_str = 1;
    s_tls_max tls_max = 2;
}

message proto_name_tokenp {
    proto_name_tokenp proto_name = 1;
    proto_name_tokenp proto_tokenp = 2;
}

message feature_name_presentp {
    feature_name_presentp feature_name = 1;
    bool feature_presentp = 2;
    int32 feature_bitmask = 3;
}

message dcheck {
    dcheck input = 1;
    dcheck output = 2;
}

message Sockets {
    Sockets sockets = 1;
    int32 count = 2;
    int32 max_count = 3;
}

message ReadWriteSockets {
    ReadWriteSockets read = 1;
    ReadWriteSockets write = 2;
}

message namebuff {
    namebuff hostentry = 1;
    namebuff addrentry = 2;
    namebuff h_addr_list = 3;
}

message namebuff::union (unnamed at /data/tfk/study/PUT/curl/lib/curl_addrinfo.c:349:3) {
    namebuff::union (unnamed at /data/tfk/study/PUT/curl/lib/curl_addrinfo.c:349:3) ina4 = 1;
    namebuff::union (unnamed at /data/tfk/study/PUT/curl/lib/curl_addrinfo.c:349:3) ina6 = 2;
}

message cf_hc_baller {
    cf_hc_baller name = 1;
    cf_hc_baller cf = 2;
    cf_hc_baller result = 3;
    cf_hc_baller started = 4;
    int32 reply_ms = 5;
    bool enabled = 6;
}

message cf_hc_ctx {
    cf_hc_ctx state = 1;
    cf_hc_ctx remotehost = 2;
    cf_hc_ctx started = 3;
    cf_hc_ctx result = 4;
    cf_hc_ctx h3_baller = 5;
    cf_hc_ctx h21_baller = 6;
    int32 soft_eyeballs_timeout_ms = 7;
    int32 hard_eyeballs_timeout_ms = 8;
}

message cf_haproxy_ctx {
    int32 state = 1;
    cf_haproxy_ctx data_out = 2;
}

message h1_req_parser {
    h1_req_parser req = 1;
    h1_req_parser scratch = 2;
    h1_req_parser scratch_skip = 3;
    h1_req_parser line = 4;
    h1_req_parser max_line_len = 5;
    h1_req_parser line_len = 6;
    bool done = 7;
}

message pl_unix_substate {
    pl_unix_substate total_dirsize = 1;
    pl_unix_substate hlinks = 2;
    pl_unix_substate user = 3;
    pl_unix_substate group = 4;
    pl_unix_substate size = 5;
    pl_unix_substate time = 6;
    pl_unix_substate filename = 7;
    pl_unix_substate symlink = 8;
}

message pl_winNT_substate {
    pl_winNT_substate time = 1;
    pl_winNT_substate dirorsize = 2;
    pl_winNT_substate filename = 3;
}

message ftp_parselist_data {
    ftp_parselist_data os_type = 1;
    ftp_parselist_data state = 2;
    ftp_parselist_data error = 3;
    ftp_parselist_data file_data = 4;
    int32 item_length = 5;
    ftp_parselist_data item_offset = 6;
    ftp_parselist_data offsets = 7;
}

message ftp_parselist_data::union (unnamed at /data/tfk/study/PUT/curl/lib/ftplistparser.c:155:3) {
    ftp_parselist_data::union (unnamed at /data/tfk/study/PUT/curl/lib/ftplistparser.c:155:3) UNIX = 1;
    ftp_parselist_data::union (unnamed at /data/tfk/study/PUT/curl/lib/ftplistparser.c:155:3) NT = 2;
}

message ftp_parselist_data::(anonymous union)::struct (unnamed at /data/tfk/study/PUT/curl/lib/ftplistparser.c:156:5) {
    ftp_parselist_data::(anonymous union)::struct (unnamed at /data/tfk/study/PUT/curl/lib/ftplistparser.c:156:5) main = 1;
    ftp_parselist_data::(anonymous union)::struct (unnamed at /data/tfk/study/PUT/curl/lib/ftplistparser.c:156:5) sub = 2;
}

message ftp_parselist_data::(anonymous union)::struct (unnamed at /data/tfk/study/PUT/curl/lib/ftplistparser.c:161:5) {
    ftp_parselist_data::(anonymous union)::struct (unnamed at /data/tfk/study/PUT/curl/lib/ftplistparser.c:161:5) main = 1;
    ftp_parselist_data::(anonymous union)::struct (unnamed at /data/tfk/study/PUT/curl/lib/ftplistparser.c:161:5) sub = 2;
}

message ftp_parselist_data::struct (unnamed at /data/tfk/study/PUT/curl/lib/ftplistparser.c:171:3) {
    ftp_parselist_data::struct (unnamed at /data/tfk/study/PUT/curl/lib/ftplistparser.c:171:3) filename = 1;
    ftp_parselist_data::struct (unnamed at /data/tfk/study/PUT/curl/lib/ftplistparser.c:171:3) user = 2;
    ftp_parselist_data::struct (unnamed at /data/tfk/study/PUT/curl/lib/ftplistparser.c:171:3) group = 3;
    ftp_parselist_data::struct (unnamed at /data/tfk/study/PUT/curl/lib/ftplistparser.c:171:3) time = 4;
    ftp_parselist_data::struct (unnamed at /data/tfk/study/PUT/curl/lib/ftplistparser.c:171:3) perm = 5;
    ftp_parselist_data::struct (unnamed at /data/tfk/study/PUT/curl/lib/ftplistparser.c:171:3) symlink_target = 6;
}

message put_buffer {
    put_buffer buf = 1;
    put_buffer len = 2;
}

message speedcount {
    speedcount dl = 1;
    speedcount ul = 2;
    speedcount stamp = 3;
}

message chunked_writer {
    chunked_writer super = 1;
    chunked_writer ch = 2;
}

message tzinfo {
    string name = 1;
    int32 offset = 2;
}

message Curl_sh_entry {
    Curl_sh_entry transfers = 1;
    int32 action = 2;
    int32 users = 3;
    Curl_sh_entry socketp = 4;
    int32 readers = 5;
    int32 writers = 6;
}

message h1_tunnel_state {
    h1_tunnel_state CONNECT = 1;
    h1_tunnel_state rcvbuf = 2;
    h1_tunnel_state request_data = 3;
    h1_tunnel_state nsent = 4;
    h1_tunnel_state headerlines = 5;
    h1_tunnel_state ch = 6;
    h1_tunnel_state keepon = 7;
    h1_tunnel_state cl = 8;
    h1_tunnel_state tunnel_state = 9;
    h1_tunnel_state chunked_encoding = 10;
    h1_tunnel_state close_connection = 11;
}

message category_descriptors {
    category_descriptors opt = 1;
    category_descriptors desc = 2;
    category_descriptors category = 3;
}

message tftp_packet {
    tftp_packet data = 1;
}

message tftp_state_data {
    tftp_state_data state = 1;
    tftp_state_data mode = 2;
    tftp_state_data error = 3;
    tftp_state_data event = 4;
    tftp_state_data data = 5;
    tftp_state_data sockfd = 6;
    int32 retries = 7;
    int32 retry_time = 8;
    int32 retry_max = 9;
    tftp_state_data rx_time = 10;
    tftp_state_data local_addr = 11;
    tftp_state_data remote_addr = 12;
    tftp_state_data remote_addrlen = 13;
    int32 rbytes = 14;
    int32 sbytes = 15;
    int32 blksize = 16;
    int32 requested_blksize = 17;
    tftp_state_data block = 18;
    tftp_state_data rpacket = 19;
    tftp_state_data spacket = 20;
}

message entry {
    entry name = 1;
    entry exp = 2;
}

message state {
    int32 index = 1;
}

message upload_status {
    int32 lines_read = 1;
}

message Curl_URL {
    Curl_URL scheme = 1;
    Curl_URL user = 2;
    Curl_URL password = 3;
    Curl_URL options = 4;
    Curl_URL host = 5;
    Curl_URL zoneid = 6;
    Curl_URL port = 7;
    Curl_URL path = 8;
    Curl_URL query = 9;
    Curl_URL fragment = 10;
    Curl_URL portnum = 11;
}

message httpmap {
    httpmap str = 1;
    int32 num = 2;
}

message ms_filetime {
    int32 dwLowDateTime = 1;
    int32 dwHighDateTime = 2;
}

message sha256_ctx {
    sha256_ctx openssl_ctx = 1;
}

message union (unnamed at /data/tfk/study/PUT/curl/lib/getinfo.c:196:3) {
    union (unnamed at /data/tfk/study/PUT/curl/lib/getinfo.c:196:3) to_ulong = 1;
    union (unnamed at /data/tfk/study/PUT/curl/lib/getinfo.c:196:3) to_long = 2;
}

message union (unnamed at /data/tfk/study/PUT/curl/lib/getinfo.c:512:3) {
    union (unnamed at /data/tfk/study/PUT/curl/lib/getinfo.c:512:3) to_certinfo = 1;
    union (unnamed at /data/tfk/study/PUT/curl/lib/getinfo.c:512:3) to_slist = 2;
}

message feat {
    feat name = 1;
    int32 present = 2;
    int32 bitmask = 3;
}

message Curl_actual_call {
    int32 func = 1;
    Curl_actual_call arg = 2;
}

message resdata {
    resdata start = 1;
}

message thread_sync_data {
    thread_sync_data mtx = 1;
    int32 done = 2;
    int32 port = 3;
    thread_sync_data hostname = 4;
    thread_sync_data data = 5;
    thread_sync_data sock_pair = 6;
    int32 sock_error = 7;
    thread_sync_data res = 8;
    thread_sync_data hints = 9;
    thread_sync_data td = 10;
}

message thread_data {
    thread_data thread_hnd = 1;
    int32 poll_interval = 2;
    thread_data interval_end = 3;
    thread_data tsd = 4;
}

message union (unnamed at /data/tfk/study/PUT/curl/tests/server/getpart.c:320:3) {
    union (unnamed at /data/tfk/study/PUT/curl/tests/server/getpart.c:320:3) sig = 1;
    union (unnamed at /data/tfk/study/PUT/curl/tests/server/getpart.c:320:3) uns = 2;
}

message headerinfo {
    headerinfo largest = 1;
}

message socks_state {
    socks_state state = 1;
    socks_state outstanding = 2;
    string buffer = 3;
    socks_state outp = 4;
    socks_state hostname = 5;
    int32 remote_port = 6;
    socks_state proxy_user = 7;
    socks_state proxy_password = 8;
}

message cb_data {
    cb_data easy_handle = 1;
    int32 response_received = 2;
    int32 paused = 3;
    cb_data remaining_bytes = 4;
}

message data {
    string trace_ascii = 1;
}

message hostcache_prune_data {
    hostcache_prune_data now = 1;
    hostcache_prune_data oldest = 2;
    int32 cache_timeout = 3;
}

message Curl_sec_client_mech {
    Curl_sec_client_mech name = 1;
    Curl_sec_client_mech size = 2;
    int32 init = 3;
    int32 auth = 4;
    Curl_sec_client_mech end = 5;
    int32 check_prot = 6;
    int32 encode = 7;
    int32 decode = 8;
}

message part {
    part part = 1;
    part name = 2;
}

message redircase {
    redircase in = 1;
    redircase set = 2;
    redircase out = 3;
    int32 urlflags = 4;
    int32 setflags = 5;
    redircase ucode = 6;
}

message setcase {
    setcase in = 1;
    setcase set = 2;
    setcase out = 3;
    int32 urlflags = 4;
    int32 setflags = 5;
    setcase ucode = 6;
    setcase pcode = 7;
}

message setgetcase {
    setgetcase in = 1;
    setgetcase set = 2;
    setgetcase out = 3;
    int32 urlflags = 4;
    int32 setflags = 5;
    int32 getflags = 6;
    setgetcase pcode = 7;
}

message urltestcase {
    urltestcase in = 1;
    urltestcase out = 2;
    int32 urlflags = 3;
    int32 getflags = 4;
    urltestcase ucode = 5;
}

message querycase {
    querycase in = 1;
    querycase q = 2;
    querycase out = 3;
    int32 urlflags = 4;
    int32 qflags = 5;
    querycase ucode = 6;
}

message clearurlcase {
    clearurlcase part = 1;
    clearurlcase in = 2;
    clearurlcase out = 3;
    clearurlcase ucode = 4;
}

message ReadThis {
    ReadThis easy = 1;
    ReadThis origin = 2;
    int32 count = 3;
}

message zlib_writer {
    zlib_writer super = 1;
    zlib_writer zlib_init = 2;
    zlib_writer trailerlen = 3;
    zlib_writer z = 4;
}

message testparams {
    int32 flags = 1;
    testparams result = 2;
}

message TELNET {
    int32 please_negotiate = 1;
    int32 already_negotiated = 2;
    int32 us = 3;
    int32 usq = 4;
    int32 us_preferred = 5;
    int32 him = 6;
    int32 himq = 7;
    int32 him_preferred = 8;
    int32 subnegotiation = 9;
    string subopt_ttype = 10;
    string subopt_xdisploc = 11;
    TELNET subopt_wsx = 12;
    TELNET subopt_wsy = 13;
    TELNET telrcv_state = 14;
    TELNET telnet_vars = 15;
    TELNET out = 16;
    string subbuffer = 17;
    TELNET subpointer = 18;
    TELNET subend = 19;
}

