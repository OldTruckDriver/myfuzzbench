// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lcms.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_lcms_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_lcms_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_lcms_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_lcms_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_lcms_2eproto;
class cmsICCPROFILEProto;
struct cmsICCPROFILEProtoDefaultTypeInternal;
extern cmsICCPROFILEProtoDefaultTypeInternal _cmsICCPROFILEProto_default_instance_;
class cmsProfileIDProto;
struct cmsProfileIDProtoDefaultTypeInternal;
extern cmsProfileIDProtoDefaultTypeInternal _cmsProfileIDProto_default_instance_;
class tmStructProto;
struct tmStructProtoDefaultTypeInternal;
extern tmStructProtoDefaultTypeInternal _tmStructProto_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::cmsICCPROFILEProto* Arena::CreateMaybeMessage<::cmsICCPROFILEProto>(Arena*);
template<> ::cmsProfileIDProto* Arena::CreateMaybeMessage<::cmsProfileIDProto>(Arena*);
template<> ::tmStructProto* Arena::CreateMaybeMessage<::tmStructProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum cmsTagSignatureProto : int {
  CMSTagSignatureUnKnown = 0,
  CMSSigAToB0Tag = 1093812784,
  CMSSigAToB1Tag = 1093812785,
  CMSSigAToB2Tag = 1093812786,
  CMSSigBlueColorantTag = 1649957210,
  CMSSigBlueMatrixColumnTag = 1649957210,
  CMSSigBlueTRCTag = 1649693251,
  CMSSigBToA0Tag = 1110589744,
  CMSSigBToA1Tag = 1110589745,
  CMSSigBToA2Tag = 1110589746,
  CMSSigCalibrationDateTimeTag = 1667329140,
  CMSSigCharTargetTag = 1952543335,
  CMSSigChromaticAdaptationTag = 1667785060,
  CMSSigChromaticityTag = 1667789421,
  CMSSigColorantOrderTag = 1668051567,
  CMSSigColorantTableTag = 1668051572,
  CMSSigColorantTableOutTag = 1668050804,
  CMSSigColorimetricIntentImageStateTag = 1667852659,
  CMSSigCopyrightTag = 1668313716,
  CMSSigCrdInfoTag = 1668441193,
  CMSSigDataTag = 1684108385,
  CMSSigDateTimeTag = 1685350765,
  CMSSigDeviceMfgDescTag = 1684893284,
  CMSSigDeviceModelDescTag = 1684890724,
  CMSSigDeviceSettingsTag = 1684371059,
  CMSSigDToB0Tag = 1144144432,
  CMSSigDToB1Tag = 1144144433,
  CMSSigDToB2Tag = 1144144434,
  CMSSigDToB3Tag = 1144144435,
  CMSSigBToD0Tag = 1110590512,
  CMSSigBToD1Tag = 1110590513,
  CMSSigBToD2Tag = 1110590514,
  CMSSigBToD3Tag = 1110590515,
  CMSSigGamutTag = 1734438260,
  CMSSigGrayTRCTag = 1800688195,
  CMSSigGreenColorantTag = 1733843290,
  CMSSigGreenMatrixColumnTag = 1733843290,
  CMSSigGreenTRCTag = 1733579331,
  CMSSigLuminanceTag = 1819635049,
  CMSSigMeasurementTag = 1835360627,
  CMSSigMediaBlackPointTag = 1651208308,
  CMSSigMediaWhitePointTag = 2004119668,
  CMSSigNamedColorTag = 1852010348,
  CMSSigNamedColor2Tag = 1852009522,
  CMSSigOutputResponseTag = 1919251312,
  CMSSigPerceptualRenderingIntentGamutTag = 1919510320,
  CMSSigPreview0Tag = 1886545200,
  CMSSigPreview1Tag = 1886545201,
  CMSSigPreview2Tag = 1886545202,
  CMSSigProfileDescriptionTag = 1684370275,
  CMSSigProfileDescriptionMLTag = 1685283693,
  CMSSigProfileSequenceDescTag = 1886610801,
  CMSSigProfileSequenceIdTag = 1886611812,
  CMSSigPs2CRD0Tag = 1886610480,
  CMSSigPs2CRD1Tag = 1886610481,
  CMSSigPs2CRD2Tag = 1886610482,
  CMSSigPs2CRD3Tag = 1886610483,
  CMSSigPs2CSATag = 1886597747,
  CMSSigPs2RenderingIntentTag = 1886597737,
  CMSSigRedColorantTag = 1918392666,
  CMSSigRedMatrixColumnTag = 1918392666,
  CMSSigRedTRCTag = 1918128707,
  CMSSigSaturationRenderingIntentGamutTag = 1919510322,
  CMSSigScreeningDescTag = 1935897188,
  CMSSigScreeningTag = 1935897198,
  CMSSigTechnologyTag = 1952801640,
  CMSSigUcrBgTag = 1650877472,
  CMSSigViewingCondDescTag = 1987405156,
  CMSSigViewingConditionsTag = 1986618743,
  CMSSigVcgtTag = 1986226036,
  CMSSigMetaTag = 1835365473,
  CMSSigcicpTag = 1667851120,
  CMSSigArgyllArtsTag = 1634890867,
  CMSSigMHC2Tag = 1296581426,
  cmsTagSignatureProto_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  cmsTagSignatureProto_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool cmsTagSignatureProto_IsValid(int value);
constexpr cmsTagSignatureProto cmsTagSignatureProto_MIN = CMSTagSignatureUnKnown;
constexpr cmsTagSignatureProto cmsTagSignatureProto_MAX = CMSSigMediaWhitePointTag;
constexpr int cmsTagSignatureProto_ARRAYSIZE = cmsTagSignatureProto_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* cmsTagSignatureProto_descriptor();
template<typename T>
inline const std::string& cmsTagSignatureProto_Name(T enum_t_value) {
  static_assert(::std::is_same<T, cmsTagSignatureProto>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function cmsTagSignatureProto_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    cmsTagSignatureProto_descriptor(), enum_t_value);
}
inline bool cmsTagSignatureProto_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, cmsTagSignatureProto* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<cmsTagSignatureProto>(
    cmsTagSignatureProto_descriptor(), name, value);
}
enum cmsProfileClassSignatureProto : int {
  CMSProfileClassSignatureUnKnown = 0,
  CMSSigInputClass = 1935896178,
  CMSSigDisplayClass = 1835955314,
  CMSSigOutputClass = 1886549106,
  CMSSigLinkClass = 1818848875,
  CMSSigAbstractClass = 1633842036,
  CMSSigColorSpaceClass = 1936744803,
  CMSSigNamedColorClass = 1852662636,
  cmsProfileClassSignatureProto_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  cmsProfileClassSignatureProto_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool cmsProfileClassSignatureProto_IsValid(int value);
constexpr cmsProfileClassSignatureProto cmsProfileClassSignatureProto_MIN = CMSProfileClassSignatureUnKnown;
constexpr cmsProfileClassSignatureProto cmsProfileClassSignatureProto_MAX = CMSSigColorSpaceClass;
constexpr int cmsProfileClassSignatureProto_ARRAYSIZE = cmsProfileClassSignatureProto_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* cmsProfileClassSignatureProto_descriptor();
template<typename T>
inline const std::string& cmsProfileClassSignatureProto_Name(T enum_t_value) {
  static_assert(::std::is_same<T, cmsProfileClassSignatureProto>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function cmsProfileClassSignatureProto_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    cmsProfileClassSignatureProto_descriptor(), enum_t_value);
}
inline bool cmsProfileClassSignatureProto_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, cmsProfileClassSignatureProto* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<cmsProfileClassSignatureProto>(
    cmsProfileClassSignatureProto_descriptor(), name, value);
}
enum cmsColorSpaceSignatureProto : int {
  CMSColorSpaceSignatureUnKnown = 0,
  CMSSigXYZData = 1482250784,
  CMSSigLabData = 1281450528,
  CMSSigLuvData = 1282766368,
  CMSSigYCbCrData = 1497588338,
  CMSSigYxyData = 1501067552,
  CMSSigRgbData = 1380401696,
  CMSSigGrayData = 1196573017,
  CMSSigHsvData = 1213421088,
  CMSSigHlsData = 1212961568,
  CMSSigCmykData = 1129142603,
  CMSSigCmyData = 1129142560,
  CMSSigMCH1Data = 1296255025,
  CMSSigMCH2Data = 1296255026,
  CMSSigMCH3Data = 1296255027,
  CMSSigMCH4Data = 1296255028,
  CMSSigMCH5Data = 1296255029,
  CMSSigMCH6Data = 1296255030,
  CMSSigMCH7Data = 1296255031,
  CMSSigMCH8Data = 1296255032,
  CMSSigMCH9Data = 1296255033,
  CMSSigMCHAData = 1296255041,
  CMSSigMCHBData = 1296255042,
  CMSSigMCHCData = 1296255043,
  CMSSigMCHDData = 1296255044,
  CMSSigMCHEData = 1296255045,
  CMSSigMCHFData = 1296255046,
  CMSSigNamedData = 1852662636,
  CMSSig1colorData = 826494034,
  CMSSig2colorData = 843271250,
  CMSSig3colorData = 860048466,
  CMSSig4colorData = 876825682,
  CMSSig5colorData = 893602898,
  CMSSig6colorData = 910380114,
  CMSSig7colorData = 927157330,
  CMSSig8colorData = 943934546,
  CMSSig9colorData = 960711762,
  CMSSig10colorData = 1094929490,
  CMSSig11colorData = 1111706706,
  CMSSig12colorData = 1128483922,
  CMSSig13colorData = 1145261138,
  CMSSig14colorData = 1162038354,
  CMSSig15colorData = 1178815570,
  CMSSigLuvKData = 1282766411,
  cmsColorSpaceSignatureProto_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  cmsColorSpaceSignatureProto_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool cmsColorSpaceSignatureProto_IsValid(int value);
constexpr cmsColorSpaceSignatureProto cmsColorSpaceSignatureProto_MIN = CMSColorSpaceSignatureUnKnown;
constexpr cmsColorSpaceSignatureProto cmsColorSpaceSignatureProto_MAX = CMSSigNamedData;
constexpr int cmsColorSpaceSignatureProto_ARRAYSIZE = cmsColorSpaceSignatureProto_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* cmsColorSpaceSignatureProto_descriptor();
template<typename T>
inline const std::string& cmsColorSpaceSignatureProto_Name(T enum_t_value) {
  static_assert(::std::is_same<T, cmsColorSpaceSignatureProto>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function cmsColorSpaceSignatureProto_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    cmsColorSpaceSignatureProto_descriptor(), enum_t_value);
}
inline bool cmsColorSpaceSignatureProto_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, cmsColorSpaceSignatureProto* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<cmsColorSpaceSignatureProto>(
    cmsColorSpaceSignatureProto_descriptor(), name, value);
}
enum cmsPlatformSignatureProto : int {
  CMSPlatformSignatureUnKnown = 0,
  CMSSigMacintosh = 1095782476,
  CMSSigMicrosoft = 1297303124,
  CMSSigSolaris = 1398099543,
  CMSSigSGI = 1397180704,
  CMSSigTaligent = 1413959252,
  CMSSigUnices = 711879032,
  cmsPlatformSignatureProto_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  cmsPlatformSignatureProto_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool cmsPlatformSignatureProto_IsValid(int value);
constexpr cmsPlatformSignatureProto cmsPlatformSignatureProto_MIN = CMSPlatformSignatureUnKnown;
constexpr cmsPlatformSignatureProto cmsPlatformSignatureProto_MAX = CMSSigTaligent;
constexpr int cmsPlatformSignatureProto_ARRAYSIZE = cmsPlatformSignatureProto_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* cmsPlatformSignatureProto_descriptor();
template<typename T>
inline const std::string& cmsPlatformSignatureProto_Name(T enum_t_value) {
  static_assert(::std::is_same<T, cmsPlatformSignatureProto>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function cmsPlatformSignatureProto_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    cmsPlatformSignatureProto_descriptor(), enum_t_value);
}
inline bool cmsPlatformSignatureProto_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, cmsPlatformSignatureProto* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<cmsPlatformSignatureProto>(
    cmsPlatformSignatureProto_descriptor(), name, value);
}
// ===================================================================

class tmStructProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tmStructProto) */ {
 public:
  inline tmStructProto() : tmStructProto(nullptr) {}
  ~tmStructProto() override;
  explicit PROTOBUF_CONSTEXPR tmStructProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  tmStructProto(const tmStructProto& from);
  tmStructProto(tmStructProto&& from) noexcept
    : tmStructProto() {
    *this = ::std::move(from);
  }

  inline tmStructProto& operator=(const tmStructProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline tmStructProto& operator=(tmStructProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const tmStructProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const tmStructProto* internal_default_instance() {
    return reinterpret_cast<const tmStructProto*>(
               &_tmStructProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(tmStructProto& a, tmStructProto& b) {
    a.Swap(&b);
  }
  inline void Swap(tmStructProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(tmStructProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  tmStructProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<tmStructProto>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const tmStructProto& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const tmStructProto& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(tmStructProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tmStructProto";
  }
  protected:
  explicit tmStructProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTmSecFieldNumber = 1,
    kTmMinFieldNumber = 2,
    kTmHourFieldNumber = 3,
    kTmMdayFieldNumber = 4,
    kTmMonFieldNumber = 5,
    kTmYearFieldNumber = 6,
    kTmWdayFieldNumber = 7,
    kTmYdayFieldNumber = 8,
    kTmIsdstFieldNumber = 9,
  };
  // int32 tm_sec = 1;
  void clear_tm_sec();
  int32_t tm_sec() const;
  void set_tm_sec(int32_t value);
  private:
  int32_t _internal_tm_sec() const;
  void _internal_set_tm_sec(int32_t value);
  public:

  // int32 tm_min = 2;
  void clear_tm_min();
  int32_t tm_min() const;
  void set_tm_min(int32_t value);
  private:
  int32_t _internal_tm_min() const;
  void _internal_set_tm_min(int32_t value);
  public:

  // int32 tm_hour = 3;
  void clear_tm_hour();
  int32_t tm_hour() const;
  void set_tm_hour(int32_t value);
  private:
  int32_t _internal_tm_hour() const;
  void _internal_set_tm_hour(int32_t value);
  public:

  // int32 tm_mday = 4;
  void clear_tm_mday();
  int32_t tm_mday() const;
  void set_tm_mday(int32_t value);
  private:
  int32_t _internal_tm_mday() const;
  void _internal_set_tm_mday(int32_t value);
  public:

  // int32 tm_mon = 5;
  void clear_tm_mon();
  int32_t tm_mon() const;
  void set_tm_mon(int32_t value);
  private:
  int32_t _internal_tm_mon() const;
  void _internal_set_tm_mon(int32_t value);
  public:

  // int32 tm_year = 6;
  void clear_tm_year();
  int32_t tm_year() const;
  void set_tm_year(int32_t value);
  private:
  int32_t _internal_tm_year() const;
  void _internal_set_tm_year(int32_t value);
  public:

  // int32 tm_wday = 7;
  void clear_tm_wday();
  int32_t tm_wday() const;
  void set_tm_wday(int32_t value);
  private:
  int32_t _internal_tm_wday() const;
  void _internal_set_tm_wday(int32_t value);
  public:

  // int32 tm_yday = 8;
  void clear_tm_yday();
  int32_t tm_yday() const;
  void set_tm_yday(int32_t value);
  private:
  int32_t _internal_tm_yday() const;
  void _internal_set_tm_yday(int32_t value);
  public:

  // int32 tm_isdst = 9;
  void clear_tm_isdst();
  int32_t tm_isdst() const;
  void set_tm_isdst(int32_t value);
  private:
  int32_t _internal_tm_isdst() const;
  void _internal_set_tm_isdst(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:tmStructProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t tm_sec_;
  int32_t tm_min_;
  int32_t tm_hour_;
  int32_t tm_mday_;
  int32_t tm_mon_;
  int32_t tm_year_;
  int32_t tm_wday_;
  int32_t tm_yday_;
  int32_t tm_isdst_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_lcms_2eproto;
};
// -------------------------------------------------------------------

class cmsProfileIDProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cmsProfileIDProto) */ {
 public:
  inline cmsProfileIDProto() : cmsProfileIDProto(nullptr) {}
  ~cmsProfileIDProto() override;
  explicit PROTOBUF_CONSTEXPR cmsProfileIDProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  cmsProfileIDProto(const cmsProfileIDProto& from);
  cmsProfileIDProto(cmsProfileIDProto&& from) noexcept
    : cmsProfileIDProto() {
    *this = ::std::move(from);
  }

  inline cmsProfileIDProto& operator=(const cmsProfileIDProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline cmsProfileIDProto& operator=(cmsProfileIDProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const cmsProfileIDProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const cmsProfileIDProto* internal_default_instance() {
    return reinterpret_cast<const cmsProfileIDProto*>(
               &_cmsProfileIDProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(cmsProfileIDProto& a, cmsProfileIDProto& b) {
    a.Swap(&b);
  }
  inline void Swap(cmsProfileIDProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(cmsProfileIDProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  cmsProfileIDProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<cmsProfileIDProto>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const cmsProfileIDProto& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const cmsProfileIDProto& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsProfileIDProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "cmsProfileIDProto";
  }
  protected:
  explicit cmsProfileIDProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kId32FieldNumber = 1,
  };
  // repeated uint32 id32 = 1;
  int id32_size() const;
  private:
  int _internal_id32_size() const;
  public:
  void clear_id32();
  private:
  uint32_t _internal_id32(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_id32() const;
  void _internal_add_id32(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_id32();
  public:
  uint32_t id32(int index) const;
  void set_id32(int index, uint32_t value);
  void add_id32(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      id32() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_id32();

  // @@protoc_insertion_point(class_scope:cmsProfileIDProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > id32_;
  mutable std::atomic<int> _id32_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_lcms_2eproto;
};
// -------------------------------------------------------------------

class cmsICCPROFILEProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cmsICCPROFILEProto) */ {
 public:
  inline cmsICCPROFILEProto() : cmsICCPROFILEProto(nullptr) {}
  ~cmsICCPROFILEProto() override;
  explicit PROTOBUF_CONSTEXPR cmsICCPROFILEProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  cmsICCPROFILEProto(const cmsICCPROFILEProto& from);
  cmsICCPROFILEProto(cmsICCPROFILEProto&& from) noexcept
    : cmsICCPROFILEProto() {
    *this = ::std::move(from);
  }

  inline cmsICCPROFILEProto& operator=(const cmsICCPROFILEProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline cmsICCPROFILEProto& operator=(cmsICCPROFILEProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const cmsICCPROFILEProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const cmsICCPROFILEProto* internal_default_instance() {
    return reinterpret_cast<const cmsICCPROFILEProto*>(
               &_cmsICCPROFILEProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(cmsICCPROFILEProto& a, cmsICCPROFILEProto& b) {
    a.Swap(&b);
  }
  inline void Swap(cmsICCPROFILEProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(cmsICCPROFILEProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  cmsICCPROFILEProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<cmsICCPROFILEProto>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const cmsICCPROFILEProto& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const cmsICCPROFILEProto& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsICCPROFILEProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "cmsICCPROFILEProto";
  }
  protected:
  explicit cmsICCPROFILEProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagNamesFieldNumber = 18,
    kTagLinkedFieldNumber = 19,
    kTagSizesFieldNumber = 20,
    kTagOffsetsFieldNumber = 21,
    kTagSaveAsRawFieldNumber = 22,
    kTagPtrsFieldNumber = 23,
    kCreatedFieldNumber = 3,
    kProfileIDFieldNumber = 16,
    kCMMFieldNumber = 4,
    kVersionFieldNumber = 5,
    kDeviceClassFieldNumber = 6,
    kColorSpaceFieldNumber = 7,
    kPCSFieldNumber = 8,
    kRenderingIntentFieldNumber = 9,
    kPlatformFieldNumber = 10,
    kFlagsFieldNumber = 11,
    kManufacturerFieldNumber = 12,
    kModelFieldNumber = 13,
    kAttributesFieldNumber = 14,
    kCreatorFieldNumber = 15,
    kTagCountFieldNumber = 17,
  };
  // repeated .cmsTagSignatureProto TagNames = 18;
  int tagnames_size() const;
  private:
  int _internal_tagnames_size() const;
  public:
  void clear_tagnames();
  private:
  ::cmsTagSignatureProto _internal_tagnames(int index) const;
  void _internal_add_tagnames(::cmsTagSignatureProto value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_tagnames();
  public:
  ::cmsTagSignatureProto tagnames(int index) const;
  void set_tagnames(int index, ::cmsTagSignatureProto value);
  void add_tagnames(::cmsTagSignatureProto value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& tagnames() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_tagnames();

  // repeated .cmsTagSignatureProto TagLinked = 19;
  int taglinked_size() const;
  private:
  int _internal_taglinked_size() const;
  public:
  void clear_taglinked();
  private:
  ::cmsTagSignatureProto _internal_taglinked(int index) const;
  void _internal_add_taglinked(::cmsTagSignatureProto value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_taglinked();
  public:
  ::cmsTagSignatureProto taglinked(int index) const;
  void set_taglinked(int index, ::cmsTagSignatureProto value);
  void add_taglinked(::cmsTagSignatureProto value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& taglinked() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_taglinked();

  // repeated uint32 TagSizes = 20;
  int tagsizes_size() const;
  private:
  int _internal_tagsizes_size() const;
  public:
  void clear_tagsizes();
  private:
  uint32_t _internal_tagsizes(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_tagsizes() const;
  void _internal_add_tagsizes(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_tagsizes();
  public:
  uint32_t tagsizes(int index) const;
  void set_tagsizes(int index, uint32_t value);
  void add_tagsizes(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      tagsizes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_tagsizes();

  // repeated uint32 TagOffsets = 21;
  int tagoffsets_size() const;
  private:
  int _internal_tagoffsets_size() const;
  public:
  void clear_tagoffsets();
  private:
  uint32_t _internal_tagoffsets(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_tagoffsets() const;
  void _internal_add_tagoffsets(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_tagoffsets();
  public:
  uint32_t tagoffsets(int index) const;
  void set_tagoffsets(int index, uint32_t value);
  void add_tagoffsets(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      tagoffsets() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_tagoffsets();

  // repeated int32 TagSaveAsRaw = 22;
  int tagsaveasraw_size() const;
  private:
  int _internal_tagsaveasraw_size() const;
  public:
  void clear_tagsaveasraw();
  private:
  int32_t _internal_tagsaveasraw(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_tagsaveasraw() const;
  void _internal_add_tagsaveasraw(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_tagsaveasraw();
  public:
  int32_t tagsaveasraw(int index) const;
  void set_tagsaveasraw(int index, int32_t value);
  void add_tagsaveasraw(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      tagsaveasraw() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_tagsaveasraw();

  // repeated bytes tag_ptrs = 23;
  int tag_ptrs_size() const;
  private:
  int _internal_tag_ptrs_size() const;
  public:
  void clear_tag_ptrs();
  const std::string& tag_ptrs(int index) const;
  std::string* mutable_tag_ptrs(int index);
  void set_tag_ptrs(int index, const std::string& value);
  void set_tag_ptrs(int index, std::string&& value);
  void set_tag_ptrs(int index, const char* value);
  void set_tag_ptrs(int index, const void* value, size_t size);
  std::string* add_tag_ptrs();
  void add_tag_ptrs(const std::string& value);
  void add_tag_ptrs(std::string&& value);
  void add_tag_ptrs(const char* value);
  void add_tag_ptrs(const void* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& tag_ptrs() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_tag_ptrs();
  private:
  const std::string& _internal_tag_ptrs(int index) const;
  std::string* _internal_add_tag_ptrs();
  public:

  // .tmStructProto Created = 3;
  bool has_created() const;
  private:
  bool _internal_has_created() const;
  public:
  void clear_created();
  const ::tmStructProto& created() const;
  PROTOBUF_NODISCARD ::tmStructProto* release_created();
  ::tmStructProto* mutable_created();
  void set_allocated_created(::tmStructProto* created);
  private:
  const ::tmStructProto& _internal_created() const;
  ::tmStructProto* _internal_mutable_created();
  public:
  void unsafe_arena_set_allocated_created(
      ::tmStructProto* created);
  ::tmStructProto* unsafe_arena_release_created();

  // .cmsProfileIDProto ProfileID = 16;
  bool has_profileid() const;
  private:
  bool _internal_has_profileid() const;
  public:
  void clear_profileid();
  const ::cmsProfileIDProto& profileid() const;
  PROTOBUF_NODISCARD ::cmsProfileIDProto* release_profileid();
  ::cmsProfileIDProto* mutable_profileid();
  void set_allocated_profileid(::cmsProfileIDProto* profileid);
  private:
  const ::cmsProfileIDProto& _internal_profileid() const;
  ::cmsProfileIDProto* _internal_mutable_profileid();
  public:
  void unsafe_arena_set_allocated_profileid(
      ::cmsProfileIDProto* profileid);
  ::cmsProfileIDProto* unsafe_arena_release_profileid();

  // uint32 CMM = 4;
  void clear_cmm();
  uint32_t cmm() const;
  void set_cmm(uint32_t value);
  private:
  uint32_t _internal_cmm() const;
  void _internal_set_cmm(uint32_t value);
  public:

  // uint32 Version = 5;
  void clear_version();
  uint32_t version() const;
  void set_version(uint32_t value);
  private:
  uint32_t _internal_version() const;
  void _internal_set_version(uint32_t value);
  public:

  // .cmsProfileClassSignatureProto DeviceClass = 6;
  void clear_deviceclass();
  ::cmsProfileClassSignatureProto deviceclass() const;
  void set_deviceclass(::cmsProfileClassSignatureProto value);
  private:
  ::cmsProfileClassSignatureProto _internal_deviceclass() const;
  void _internal_set_deviceclass(::cmsProfileClassSignatureProto value);
  public:

  // .cmsColorSpaceSignatureProto ColorSpace = 7;
  void clear_colorspace();
  ::cmsColorSpaceSignatureProto colorspace() const;
  void set_colorspace(::cmsColorSpaceSignatureProto value);
  private:
  ::cmsColorSpaceSignatureProto _internal_colorspace() const;
  void _internal_set_colorspace(::cmsColorSpaceSignatureProto value);
  public:

  // .cmsColorSpaceSignatureProto PCS = 8;
  void clear_pcs();
  ::cmsColorSpaceSignatureProto pcs() const;
  void set_pcs(::cmsColorSpaceSignatureProto value);
  private:
  ::cmsColorSpaceSignatureProto _internal_pcs() const;
  void _internal_set_pcs(::cmsColorSpaceSignatureProto value);
  public:

  // uint32 RenderingIntent = 9;
  void clear_renderingintent();
  uint32_t renderingintent() const;
  void set_renderingintent(uint32_t value);
  private:
  uint32_t _internal_renderingintent() const;
  void _internal_set_renderingintent(uint32_t value);
  public:

  // .cmsPlatformSignatureProto platform = 10;
  void clear_platform();
  ::cmsPlatformSignatureProto platform() const;
  void set_platform(::cmsPlatformSignatureProto value);
  private:
  ::cmsPlatformSignatureProto _internal_platform() const;
  void _internal_set_platform(::cmsPlatformSignatureProto value);
  public:

  // uint32 flags = 11;
  void clear_flags();
  uint32_t flags() const;
  void set_flags(uint32_t value);
  private:
  uint32_t _internal_flags() const;
  void _internal_set_flags(uint32_t value);
  public:

  // uint32 manufacturer = 12;
  void clear_manufacturer();
  uint32_t manufacturer() const;
  void set_manufacturer(uint32_t value);
  private:
  uint32_t _internal_manufacturer() const;
  void _internal_set_manufacturer(uint32_t value);
  public:

  // uint32 model = 13;
  void clear_model();
  uint32_t model() const;
  void set_model(uint32_t value);
  private:
  uint32_t _internal_model() const;
  void _internal_set_model(uint32_t value);
  public:

  // uint64 attributes = 14;
  void clear_attributes();
  uint64_t attributes() const;
  void set_attributes(uint64_t value);
  private:
  uint64_t _internal_attributes() const;
  void _internal_set_attributes(uint64_t value);
  public:

  // uint32 creator = 15;
  void clear_creator();
  uint32_t creator() const;
  void set_creator(uint32_t value);
  private:
  uint32_t _internal_creator() const;
  void _internal_set_creator(uint32_t value);
  public:

  // uint32 TagCount = 17;
  void clear_tagcount();
  uint32_t tagcount() const;
  void set_tagcount(uint32_t value);
  private:
  uint32_t _internal_tagcount() const;
  void _internal_set_tagcount(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:cmsICCPROFILEProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> tagnames_;
  mutable std::atomic<int> _tagnames_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> taglinked_;
  mutable std::atomic<int> _taglinked_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > tagsizes_;
  mutable std::atomic<int> _tagsizes_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > tagoffsets_;
  mutable std::atomic<int> _tagoffsets_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > tagsaveasraw_;
  mutable std::atomic<int> _tagsaveasraw_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> tag_ptrs_;
  ::tmStructProto* created_;
  ::cmsProfileIDProto* profileid_;
  uint32_t cmm_;
  uint32_t version_;
  int deviceclass_;
  int colorspace_;
  int pcs_;
  uint32_t renderingintent_;
  int platform_;
  uint32_t flags_;
  uint32_t manufacturer_;
  uint32_t model_;
  uint64_t attributes_;
  uint32_t creator_;
  uint32_t tagcount_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_lcms_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// tmStructProto

// int32 tm_sec = 1;
inline void tmStructProto::clear_tm_sec() {
  tm_sec_ = 0;
}
inline int32_t tmStructProto::_internal_tm_sec() const {
  return tm_sec_;
}
inline int32_t tmStructProto::tm_sec() const {
  // @@protoc_insertion_point(field_get:tmStructProto.tm_sec)
  return _internal_tm_sec();
}
inline void tmStructProto::_internal_set_tm_sec(int32_t value) {
  
  tm_sec_ = value;
}
inline void tmStructProto::set_tm_sec(int32_t value) {
  _internal_set_tm_sec(value);
  // @@protoc_insertion_point(field_set:tmStructProto.tm_sec)
}

// int32 tm_min = 2;
inline void tmStructProto::clear_tm_min() {
  tm_min_ = 0;
}
inline int32_t tmStructProto::_internal_tm_min() const {
  return tm_min_;
}
inline int32_t tmStructProto::tm_min() const {
  // @@protoc_insertion_point(field_get:tmStructProto.tm_min)
  return _internal_tm_min();
}
inline void tmStructProto::_internal_set_tm_min(int32_t value) {
  
  tm_min_ = value;
}
inline void tmStructProto::set_tm_min(int32_t value) {
  _internal_set_tm_min(value);
  // @@protoc_insertion_point(field_set:tmStructProto.tm_min)
}

// int32 tm_hour = 3;
inline void tmStructProto::clear_tm_hour() {
  tm_hour_ = 0;
}
inline int32_t tmStructProto::_internal_tm_hour() const {
  return tm_hour_;
}
inline int32_t tmStructProto::tm_hour() const {
  // @@protoc_insertion_point(field_get:tmStructProto.tm_hour)
  return _internal_tm_hour();
}
inline void tmStructProto::_internal_set_tm_hour(int32_t value) {
  
  tm_hour_ = value;
}
inline void tmStructProto::set_tm_hour(int32_t value) {
  _internal_set_tm_hour(value);
  // @@protoc_insertion_point(field_set:tmStructProto.tm_hour)
}

// int32 tm_mday = 4;
inline void tmStructProto::clear_tm_mday() {
  tm_mday_ = 0;
}
inline int32_t tmStructProto::_internal_tm_mday() const {
  return tm_mday_;
}
inline int32_t tmStructProto::tm_mday() const {
  // @@protoc_insertion_point(field_get:tmStructProto.tm_mday)
  return _internal_tm_mday();
}
inline void tmStructProto::_internal_set_tm_mday(int32_t value) {
  
  tm_mday_ = value;
}
inline void tmStructProto::set_tm_mday(int32_t value) {
  _internal_set_tm_mday(value);
  // @@protoc_insertion_point(field_set:tmStructProto.tm_mday)
}

// int32 tm_mon = 5;
inline void tmStructProto::clear_tm_mon() {
  tm_mon_ = 0;
}
inline int32_t tmStructProto::_internal_tm_mon() const {
  return tm_mon_;
}
inline int32_t tmStructProto::tm_mon() const {
  // @@protoc_insertion_point(field_get:tmStructProto.tm_mon)
  return _internal_tm_mon();
}
inline void tmStructProto::_internal_set_tm_mon(int32_t value) {
  
  tm_mon_ = value;
}
inline void tmStructProto::set_tm_mon(int32_t value) {
  _internal_set_tm_mon(value);
  // @@protoc_insertion_point(field_set:tmStructProto.tm_mon)
}

// int32 tm_year = 6;
inline void tmStructProto::clear_tm_year() {
  tm_year_ = 0;
}
inline int32_t tmStructProto::_internal_tm_year() const {
  return tm_year_;
}
inline int32_t tmStructProto::tm_year() const {
  // @@protoc_insertion_point(field_get:tmStructProto.tm_year)
  return _internal_tm_year();
}
inline void tmStructProto::_internal_set_tm_year(int32_t value) {
  
  tm_year_ = value;
}
inline void tmStructProto::set_tm_year(int32_t value) {
  _internal_set_tm_year(value);
  // @@protoc_insertion_point(field_set:tmStructProto.tm_year)
}

// int32 tm_wday = 7;
inline void tmStructProto::clear_tm_wday() {
  tm_wday_ = 0;
}
inline int32_t tmStructProto::_internal_tm_wday() const {
  return tm_wday_;
}
inline int32_t tmStructProto::tm_wday() const {
  // @@protoc_insertion_point(field_get:tmStructProto.tm_wday)
  return _internal_tm_wday();
}
inline void tmStructProto::_internal_set_tm_wday(int32_t value) {
  
  tm_wday_ = value;
}
inline void tmStructProto::set_tm_wday(int32_t value) {
  _internal_set_tm_wday(value);
  // @@protoc_insertion_point(field_set:tmStructProto.tm_wday)
}

// int32 tm_yday = 8;
inline void tmStructProto::clear_tm_yday() {
  tm_yday_ = 0;
}
inline int32_t tmStructProto::_internal_tm_yday() const {
  return tm_yday_;
}
inline int32_t tmStructProto::tm_yday() const {
  // @@protoc_insertion_point(field_get:tmStructProto.tm_yday)
  return _internal_tm_yday();
}
inline void tmStructProto::_internal_set_tm_yday(int32_t value) {
  
  tm_yday_ = value;
}
inline void tmStructProto::set_tm_yday(int32_t value) {
  _internal_set_tm_yday(value);
  // @@protoc_insertion_point(field_set:tmStructProto.tm_yday)
}

// int32 tm_isdst = 9;
inline void tmStructProto::clear_tm_isdst() {
  tm_isdst_ = 0;
}
inline int32_t tmStructProto::_internal_tm_isdst() const {
  return tm_isdst_;
}
inline int32_t tmStructProto::tm_isdst() const {
  // @@protoc_insertion_point(field_get:tmStructProto.tm_isdst)
  return _internal_tm_isdst();
}
inline void tmStructProto::_internal_set_tm_isdst(int32_t value) {
  
  tm_isdst_ = value;
}
inline void tmStructProto::set_tm_isdst(int32_t value) {
  _internal_set_tm_isdst(value);
  // @@protoc_insertion_point(field_set:tmStructProto.tm_isdst)
}

// -------------------------------------------------------------------

// cmsProfileIDProto

// repeated uint32 id32 = 1;
inline int cmsProfileIDProto::_internal_id32_size() const {
  return id32_.size();
}
inline int cmsProfileIDProto::id32_size() const {
  return _internal_id32_size();
}
inline void cmsProfileIDProto::clear_id32() {
  id32_.Clear();
}
inline uint32_t cmsProfileIDProto::_internal_id32(int index) const {
  return id32_.Get(index);
}
inline uint32_t cmsProfileIDProto::id32(int index) const {
  // @@protoc_insertion_point(field_get:cmsProfileIDProto.id32)
  return _internal_id32(index);
}
inline void cmsProfileIDProto::set_id32(int index, uint32_t value) {
  id32_.Set(index, value);
  // @@protoc_insertion_point(field_set:cmsProfileIDProto.id32)
}
inline void cmsProfileIDProto::_internal_add_id32(uint32_t value) {
  id32_.Add(value);
}
inline void cmsProfileIDProto::add_id32(uint32_t value) {
  _internal_add_id32(value);
  // @@protoc_insertion_point(field_add:cmsProfileIDProto.id32)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
cmsProfileIDProto::_internal_id32() const {
  return id32_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
cmsProfileIDProto::id32() const {
  // @@protoc_insertion_point(field_list:cmsProfileIDProto.id32)
  return _internal_id32();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
cmsProfileIDProto::_internal_mutable_id32() {
  return &id32_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
cmsProfileIDProto::mutable_id32() {
  // @@protoc_insertion_point(field_mutable_list:cmsProfileIDProto.id32)
  return _internal_mutable_id32();
}

// -------------------------------------------------------------------

// cmsICCPROFILEProto

// .tmStructProto Created = 3;
inline bool cmsICCPROFILEProto::_internal_has_created() const {
  return this != internal_default_instance() && created_ != nullptr;
}
inline bool cmsICCPROFILEProto::has_created() const {
  return _internal_has_created();
}
inline void cmsICCPROFILEProto::clear_created() {
  if (GetArenaForAllocation() == nullptr && created_ != nullptr) {
    delete created_;
  }
  created_ = nullptr;
}
inline const ::tmStructProto& cmsICCPROFILEProto::_internal_created() const {
  const ::tmStructProto* p = created_;
  return p != nullptr ? *p : reinterpret_cast<const ::tmStructProto&>(
      ::_tmStructProto_default_instance_);
}
inline const ::tmStructProto& cmsICCPROFILEProto::created() const {
  // @@protoc_insertion_point(field_get:cmsICCPROFILEProto.Created)
  return _internal_created();
}
inline void cmsICCPROFILEProto::unsafe_arena_set_allocated_created(
    ::tmStructProto* created) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(created_);
  }
  created_ = created;
  if (created) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmsICCPROFILEProto.Created)
}
inline ::tmStructProto* cmsICCPROFILEProto::release_created() {
  
  ::tmStructProto* temp = created_;
  created_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::tmStructProto* cmsICCPROFILEProto::unsafe_arena_release_created() {
  // @@protoc_insertion_point(field_release:cmsICCPROFILEProto.Created)
  
  ::tmStructProto* temp = created_;
  created_ = nullptr;
  return temp;
}
inline ::tmStructProto* cmsICCPROFILEProto::_internal_mutable_created() {
  
  if (created_ == nullptr) {
    auto* p = CreateMaybeMessage<::tmStructProto>(GetArenaForAllocation());
    created_ = p;
  }
  return created_;
}
inline ::tmStructProto* cmsICCPROFILEProto::mutable_created() {
  ::tmStructProto* _msg = _internal_mutable_created();
  // @@protoc_insertion_point(field_mutable:cmsICCPROFILEProto.Created)
  return _msg;
}
inline void cmsICCPROFILEProto::set_allocated_created(::tmStructProto* created) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete created_;
  }
  if (created) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(created);
    if (message_arena != submessage_arena) {
      created = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, created, submessage_arena);
    }
    
  } else {
    
  }
  created_ = created;
  // @@protoc_insertion_point(field_set_allocated:cmsICCPROFILEProto.Created)
}

// uint32 CMM = 4;
inline void cmsICCPROFILEProto::clear_cmm() {
  cmm_ = 0u;
}
inline uint32_t cmsICCPROFILEProto::_internal_cmm() const {
  return cmm_;
}
inline uint32_t cmsICCPROFILEProto::cmm() const {
  // @@protoc_insertion_point(field_get:cmsICCPROFILEProto.CMM)
  return _internal_cmm();
}
inline void cmsICCPROFILEProto::_internal_set_cmm(uint32_t value) {
  
  cmm_ = value;
}
inline void cmsICCPROFILEProto::set_cmm(uint32_t value) {
  _internal_set_cmm(value);
  // @@protoc_insertion_point(field_set:cmsICCPROFILEProto.CMM)
}

// uint32 Version = 5;
inline void cmsICCPROFILEProto::clear_version() {
  version_ = 0u;
}
inline uint32_t cmsICCPROFILEProto::_internal_version() const {
  return version_;
}
inline uint32_t cmsICCPROFILEProto::version() const {
  // @@protoc_insertion_point(field_get:cmsICCPROFILEProto.Version)
  return _internal_version();
}
inline void cmsICCPROFILEProto::_internal_set_version(uint32_t value) {
  
  version_ = value;
}
inline void cmsICCPROFILEProto::set_version(uint32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:cmsICCPROFILEProto.Version)
}

// .cmsProfileClassSignatureProto DeviceClass = 6;
inline void cmsICCPROFILEProto::clear_deviceclass() {
  deviceclass_ = 0;
}
inline ::cmsProfileClassSignatureProto cmsICCPROFILEProto::_internal_deviceclass() const {
  return static_cast< ::cmsProfileClassSignatureProto >(deviceclass_);
}
inline ::cmsProfileClassSignatureProto cmsICCPROFILEProto::deviceclass() const {
  // @@protoc_insertion_point(field_get:cmsICCPROFILEProto.DeviceClass)
  return _internal_deviceclass();
}
inline void cmsICCPROFILEProto::_internal_set_deviceclass(::cmsProfileClassSignatureProto value) {
  
  deviceclass_ = value;
}
inline void cmsICCPROFILEProto::set_deviceclass(::cmsProfileClassSignatureProto value) {
  _internal_set_deviceclass(value);
  // @@protoc_insertion_point(field_set:cmsICCPROFILEProto.DeviceClass)
}

// .cmsColorSpaceSignatureProto ColorSpace = 7;
inline void cmsICCPROFILEProto::clear_colorspace() {
  colorspace_ = 0;
}
inline ::cmsColorSpaceSignatureProto cmsICCPROFILEProto::_internal_colorspace() const {
  return static_cast< ::cmsColorSpaceSignatureProto >(colorspace_);
}
inline ::cmsColorSpaceSignatureProto cmsICCPROFILEProto::colorspace() const {
  // @@protoc_insertion_point(field_get:cmsICCPROFILEProto.ColorSpace)
  return _internal_colorspace();
}
inline void cmsICCPROFILEProto::_internal_set_colorspace(::cmsColorSpaceSignatureProto value) {
  
  colorspace_ = value;
}
inline void cmsICCPROFILEProto::set_colorspace(::cmsColorSpaceSignatureProto value) {
  _internal_set_colorspace(value);
  // @@protoc_insertion_point(field_set:cmsICCPROFILEProto.ColorSpace)
}

// .cmsColorSpaceSignatureProto PCS = 8;
inline void cmsICCPROFILEProto::clear_pcs() {
  pcs_ = 0;
}
inline ::cmsColorSpaceSignatureProto cmsICCPROFILEProto::_internal_pcs() const {
  return static_cast< ::cmsColorSpaceSignatureProto >(pcs_);
}
inline ::cmsColorSpaceSignatureProto cmsICCPROFILEProto::pcs() const {
  // @@protoc_insertion_point(field_get:cmsICCPROFILEProto.PCS)
  return _internal_pcs();
}
inline void cmsICCPROFILEProto::_internal_set_pcs(::cmsColorSpaceSignatureProto value) {
  
  pcs_ = value;
}
inline void cmsICCPROFILEProto::set_pcs(::cmsColorSpaceSignatureProto value) {
  _internal_set_pcs(value);
  // @@protoc_insertion_point(field_set:cmsICCPROFILEProto.PCS)
}

// uint32 RenderingIntent = 9;
inline void cmsICCPROFILEProto::clear_renderingintent() {
  renderingintent_ = 0u;
}
inline uint32_t cmsICCPROFILEProto::_internal_renderingintent() const {
  return renderingintent_;
}
inline uint32_t cmsICCPROFILEProto::renderingintent() const {
  // @@protoc_insertion_point(field_get:cmsICCPROFILEProto.RenderingIntent)
  return _internal_renderingintent();
}
inline void cmsICCPROFILEProto::_internal_set_renderingintent(uint32_t value) {
  
  renderingintent_ = value;
}
inline void cmsICCPROFILEProto::set_renderingintent(uint32_t value) {
  _internal_set_renderingintent(value);
  // @@protoc_insertion_point(field_set:cmsICCPROFILEProto.RenderingIntent)
}

// .cmsPlatformSignatureProto platform = 10;
inline void cmsICCPROFILEProto::clear_platform() {
  platform_ = 0;
}
inline ::cmsPlatformSignatureProto cmsICCPROFILEProto::_internal_platform() const {
  return static_cast< ::cmsPlatformSignatureProto >(platform_);
}
inline ::cmsPlatformSignatureProto cmsICCPROFILEProto::platform() const {
  // @@protoc_insertion_point(field_get:cmsICCPROFILEProto.platform)
  return _internal_platform();
}
inline void cmsICCPROFILEProto::_internal_set_platform(::cmsPlatformSignatureProto value) {
  
  platform_ = value;
}
inline void cmsICCPROFILEProto::set_platform(::cmsPlatformSignatureProto value) {
  _internal_set_platform(value);
  // @@protoc_insertion_point(field_set:cmsICCPROFILEProto.platform)
}

// uint32 flags = 11;
inline void cmsICCPROFILEProto::clear_flags() {
  flags_ = 0u;
}
inline uint32_t cmsICCPROFILEProto::_internal_flags() const {
  return flags_;
}
inline uint32_t cmsICCPROFILEProto::flags() const {
  // @@protoc_insertion_point(field_get:cmsICCPROFILEProto.flags)
  return _internal_flags();
}
inline void cmsICCPROFILEProto::_internal_set_flags(uint32_t value) {
  
  flags_ = value;
}
inline void cmsICCPROFILEProto::set_flags(uint32_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:cmsICCPROFILEProto.flags)
}

// uint32 manufacturer = 12;
inline void cmsICCPROFILEProto::clear_manufacturer() {
  manufacturer_ = 0u;
}
inline uint32_t cmsICCPROFILEProto::_internal_manufacturer() const {
  return manufacturer_;
}
inline uint32_t cmsICCPROFILEProto::manufacturer() const {
  // @@protoc_insertion_point(field_get:cmsICCPROFILEProto.manufacturer)
  return _internal_manufacturer();
}
inline void cmsICCPROFILEProto::_internal_set_manufacturer(uint32_t value) {
  
  manufacturer_ = value;
}
inline void cmsICCPROFILEProto::set_manufacturer(uint32_t value) {
  _internal_set_manufacturer(value);
  // @@protoc_insertion_point(field_set:cmsICCPROFILEProto.manufacturer)
}

// uint32 model = 13;
inline void cmsICCPROFILEProto::clear_model() {
  model_ = 0u;
}
inline uint32_t cmsICCPROFILEProto::_internal_model() const {
  return model_;
}
inline uint32_t cmsICCPROFILEProto::model() const {
  // @@protoc_insertion_point(field_get:cmsICCPROFILEProto.model)
  return _internal_model();
}
inline void cmsICCPROFILEProto::_internal_set_model(uint32_t value) {
  
  model_ = value;
}
inline void cmsICCPROFILEProto::set_model(uint32_t value) {
  _internal_set_model(value);
  // @@protoc_insertion_point(field_set:cmsICCPROFILEProto.model)
}

// uint64 attributes = 14;
inline void cmsICCPROFILEProto::clear_attributes() {
  attributes_ = uint64_t{0u};
}
inline uint64_t cmsICCPROFILEProto::_internal_attributes() const {
  return attributes_;
}
inline uint64_t cmsICCPROFILEProto::attributes() const {
  // @@protoc_insertion_point(field_get:cmsICCPROFILEProto.attributes)
  return _internal_attributes();
}
inline void cmsICCPROFILEProto::_internal_set_attributes(uint64_t value) {
  
  attributes_ = value;
}
inline void cmsICCPROFILEProto::set_attributes(uint64_t value) {
  _internal_set_attributes(value);
  // @@protoc_insertion_point(field_set:cmsICCPROFILEProto.attributes)
}

// uint32 creator = 15;
inline void cmsICCPROFILEProto::clear_creator() {
  creator_ = 0u;
}
inline uint32_t cmsICCPROFILEProto::_internal_creator() const {
  return creator_;
}
inline uint32_t cmsICCPROFILEProto::creator() const {
  // @@protoc_insertion_point(field_get:cmsICCPROFILEProto.creator)
  return _internal_creator();
}
inline void cmsICCPROFILEProto::_internal_set_creator(uint32_t value) {
  
  creator_ = value;
}
inline void cmsICCPROFILEProto::set_creator(uint32_t value) {
  _internal_set_creator(value);
  // @@protoc_insertion_point(field_set:cmsICCPROFILEProto.creator)
}

// .cmsProfileIDProto ProfileID = 16;
inline bool cmsICCPROFILEProto::_internal_has_profileid() const {
  return this != internal_default_instance() && profileid_ != nullptr;
}
inline bool cmsICCPROFILEProto::has_profileid() const {
  return _internal_has_profileid();
}
inline void cmsICCPROFILEProto::clear_profileid() {
  if (GetArenaForAllocation() == nullptr && profileid_ != nullptr) {
    delete profileid_;
  }
  profileid_ = nullptr;
}
inline const ::cmsProfileIDProto& cmsICCPROFILEProto::_internal_profileid() const {
  const ::cmsProfileIDProto* p = profileid_;
  return p != nullptr ? *p : reinterpret_cast<const ::cmsProfileIDProto&>(
      ::_cmsProfileIDProto_default_instance_);
}
inline const ::cmsProfileIDProto& cmsICCPROFILEProto::profileid() const {
  // @@protoc_insertion_point(field_get:cmsICCPROFILEProto.ProfileID)
  return _internal_profileid();
}
inline void cmsICCPROFILEProto::unsafe_arena_set_allocated_profileid(
    ::cmsProfileIDProto* profileid) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(profileid_);
  }
  profileid_ = profileid;
  if (profileid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmsICCPROFILEProto.ProfileID)
}
inline ::cmsProfileIDProto* cmsICCPROFILEProto::release_profileid() {
  
  ::cmsProfileIDProto* temp = profileid_;
  profileid_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::cmsProfileIDProto* cmsICCPROFILEProto::unsafe_arena_release_profileid() {
  // @@protoc_insertion_point(field_release:cmsICCPROFILEProto.ProfileID)
  
  ::cmsProfileIDProto* temp = profileid_;
  profileid_ = nullptr;
  return temp;
}
inline ::cmsProfileIDProto* cmsICCPROFILEProto::_internal_mutable_profileid() {
  
  if (profileid_ == nullptr) {
    auto* p = CreateMaybeMessage<::cmsProfileIDProto>(GetArenaForAllocation());
    profileid_ = p;
  }
  return profileid_;
}
inline ::cmsProfileIDProto* cmsICCPROFILEProto::mutable_profileid() {
  ::cmsProfileIDProto* _msg = _internal_mutable_profileid();
  // @@protoc_insertion_point(field_mutable:cmsICCPROFILEProto.ProfileID)
  return _msg;
}
inline void cmsICCPROFILEProto::set_allocated_profileid(::cmsProfileIDProto* profileid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete profileid_;
  }
  if (profileid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(profileid);
    if (message_arena != submessage_arena) {
      profileid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, profileid, submessage_arena);
    }
    
  } else {
    
  }
  profileid_ = profileid;
  // @@protoc_insertion_point(field_set_allocated:cmsICCPROFILEProto.ProfileID)
}

// uint32 TagCount = 17;
inline void cmsICCPROFILEProto::clear_tagcount() {
  tagcount_ = 0u;
}
inline uint32_t cmsICCPROFILEProto::_internal_tagcount() const {
  return tagcount_;
}
inline uint32_t cmsICCPROFILEProto::tagcount() const {
  // @@protoc_insertion_point(field_get:cmsICCPROFILEProto.TagCount)
  return _internal_tagcount();
}
inline void cmsICCPROFILEProto::_internal_set_tagcount(uint32_t value) {
  
  tagcount_ = value;
}
inline void cmsICCPROFILEProto::set_tagcount(uint32_t value) {
  _internal_set_tagcount(value);
  // @@protoc_insertion_point(field_set:cmsICCPROFILEProto.TagCount)
}

// repeated .cmsTagSignatureProto TagNames = 18;
inline int cmsICCPROFILEProto::_internal_tagnames_size() const {
  return tagnames_.size();
}
inline int cmsICCPROFILEProto::tagnames_size() const {
  return _internal_tagnames_size();
}
inline void cmsICCPROFILEProto::clear_tagnames() {
  tagnames_.Clear();
}
inline ::cmsTagSignatureProto cmsICCPROFILEProto::_internal_tagnames(int index) const {
  return static_cast< ::cmsTagSignatureProto >(tagnames_.Get(index));
}
inline ::cmsTagSignatureProto cmsICCPROFILEProto::tagnames(int index) const {
  // @@protoc_insertion_point(field_get:cmsICCPROFILEProto.TagNames)
  return _internal_tagnames(index);
}
inline void cmsICCPROFILEProto::set_tagnames(int index, ::cmsTagSignatureProto value) {
  tagnames_.Set(index, value);
  // @@protoc_insertion_point(field_set:cmsICCPROFILEProto.TagNames)
}
inline void cmsICCPROFILEProto::_internal_add_tagnames(::cmsTagSignatureProto value) {
  tagnames_.Add(value);
}
inline void cmsICCPROFILEProto::add_tagnames(::cmsTagSignatureProto value) {
  _internal_add_tagnames(value);
  // @@protoc_insertion_point(field_add:cmsICCPROFILEProto.TagNames)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
cmsICCPROFILEProto::tagnames() const {
  // @@protoc_insertion_point(field_list:cmsICCPROFILEProto.TagNames)
  return tagnames_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
cmsICCPROFILEProto::_internal_mutable_tagnames() {
  return &tagnames_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
cmsICCPROFILEProto::mutable_tagnames() {
  // @@protoc_insertion_point(field_mutable_list:cmsICCPROFILEProto.TagNames)
  return _internal_mutable_tagnames();
}

// repeated .cmsTagSignatureProto TagLinked = 19;
inline int cmsICCPROFILEProto::_internal_taglinked_size() const {
  return taglinked_.size();
}
inline int cmsICCPROFILEProto::taglinked_size() const {
  return _internal_taglinked_size();
}
inline void cmsICCPROFILEProto::clear_taglinked() {
  taglinked_.Clear();
}
inline ::cmsTagSignatureProto cmsICCPROFILEProto::_internal_taglinked(int index) const {
  return static_cast< ::cmsTagSignatureProto >(taglinked_.Get(index));
}
inline ::cmsTagSignatureProto cmsICCPROFILEProto::taglinked(int index) const {
  // @@protoc_insertion_point(field_get:cmsICCPROFILEProto.TagLinked)
  return _internal_taglinked(index);
}
inline void cmsICCPROFILEProto::set_taglinked(int index, ::cmsTagSignatureProto value) {
  taglinked_.Set(index, value);
  // @@protoc_insertion_point(field_set:cmsICCPROFILEProto.TagLinked)
}
inline void cmsICCPROFILEProto::_internal_add_taglinked(::cmsTagSignatureProto value) {
  taglinked_.Add(value);
}
inline void cmsICCPROFILEProto::add_taglinked(::cmsTagSignatureProto value) {
  _internal_add_taglinked(value);
  // @@protoc_insertion_point(field_add:cmsICCPROFILEProto.TagLinked)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
cmsICCPROFILEProto::taglinked() const {
  // @@protoc_insertion_point(field_list:cmsICCPROFILEProto.TagLinked)
  return taglinked_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
cmsICCPROFILEProto::_internal_mutable_taglinked() {
  return &taglinked_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
cmsICCPROFILEProto::mutable_taglinked() {
  // @@protoc_insertion_point(field_mutable_list:cmsICCPROFILEProto.TagLinked)
  return _internal_mutable_taglinked();
}

// repeated uint32 TagSizes = 20;
inline int cmsICCPROFILEProto::_internal_tagsizes_size() const {
  return tagsizes_.size();
}
inline int cmsICCPROFILEProto::tagsizes_size() const {
  return _internal_tagsizes_size();
}
inline void cmsICCPROFILEProto::clear_tagsizes() {
  tagsizes_.Clear();
}
inline uint32_t cmsICCPROFILEProto::_internal_tagsizes(int index) const {
  return tagsizes_.Get(index);
}
inline uint32_t cmsICCPROFILEProto::tagsizes(int index) const {
  // @@protoc_insertion_point(field_get:cmsICCPROFILEProto.TagSizes)
  return _internal_tagsizes(index);
}
inline void cmsICCPROFILEProto::set_tagsizes(int index, uint32_t value) {
  tagsizes_.Set(index, value);
  // @@protoc_insertion_point(field_set:cmsICCPROFILEProto.TagSizes)
}
inline void cmsICCPROFILEProto::_internal_add_tagsizes(uint32_t value) {
  tagsizes_.Add(value);
}
inline void cmsICCPROFILEProto::add_tagsizes(uint32_t value) {
  _internal_add_tagsizes(value);
  // @@protoc_insertion_point(field_add:cmsICCPROFILEProto.TagSizes)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
cmsICCPROFILEProto::_internal_tagsizes() const {
  return tagsizes_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
cmsICCPROFILEProto::tagsizes() const {
  // @@protoc_insertion_point(field_list:cmsICCPROFILEProto.TagSizes)
  return _internal_tagsizes();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
cmsICCPROFILEProto::_internal_mutable_tagsizes() {
  return &tagsizes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
cmsICCPROFILEProto::mutable_tagsizes() {
  // @@protoc_insertion_point(field_mutable_list:cmsICCPROFILEProto.TagSizes)
  return _internal_mutable_tagsizes();
}

// repeated uint32 TagOffsets = 21;
inline int cmsICCPROFILEProto::_internal_tagoffsets_size() const {
  return tagoffsets_.size();
}
inline int cmsICCPROFILEProto::tagoffsets_size() const {
  return _internal_tagoffsets_size();
}
inline void cmsICCPROFILEProto::clear_tagoffsets() {
  tagoffsets_.Clear();
}
inline uint32_t cmsICCPROFILEProto::_internal_tagoffsets(int index) const {
  return tagoffsets_.Get(index);
}
inline uint32_t cmsICCPROFILEProto::tagoffsets(int index) const {
  // @@protoc_insertion_point(field_get:cmsICCPROFILEProto.TagOffsets)
  return _internal_tagoffsets(index);
}
inline void cmsICCPROFILEProto::set_tagoffsets(int index, uint32_t value) {
  tagoffsets_.Set(index, value);
  // @@protoc_insertion_point(field_set:cmsICCPROFILEProto.TagOffsets)
}
inline void cmsICCPROFILEProto::_internal_add_tagoffsets(uint32_t value) {
  tagoffsets_.Add(value);
}
inline void cmsICCPROFILEProto::add_tagoffsets(uint32_t value) {
  _internal_add_tagoffsets(value);
  // @@protoc_insertion_point(field_add:cmsICCPROFILEProto.TagOffsets)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
cmsICCPROFILEProto::_internal_tagoffsets() const {
  return tagoffsets_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
cmsICCPROFILEProto::tagoffsets() const {
  // @@protoc_insertion_point(field_list:cmsICCPROFILEProto.TagOffsets)
  return _internal_tagoffsets();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
cmsICCPROFILEProto::_internal_mutable_tagoffsets() {
  return &tagoffsets_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
cmsICCPROFILEProto::mutable_tagoffsets() {
  // @@protoc_insertion_point(field_mutable_list:cmsICCPROFILEProto.TagOffsets)
  return _internal_mutable_tagoffsets();
}

// repeated int32 TagSaveAsRaw = 22;
inline int cmsICCPROFILEProto::_internal_tagsaveasraw_size() const {
  return tagsaveasraw_.size();
}
inline int cmsICCPROFILEProto::tagsaveasraw_size() const {
  return _internal_tagsaveasraw_size();
}
inline void cmsICCPROFILEProto::clear_tagsaveasraw() {
  tagsaveasraw_.Clear();
}
inline int32_t cmsICCPROFILEProto::_internal_tagsaveasraw(int index) const {
  return tagsaveasraw_.Get(index);
}
inline int32_t cmsICCPROFILEProto::tagsaveasraw(int index) const {
  // @@protoc_insertion_point(field_get:cmsICCPROFILEProto.TagSaveAsRaw)
  return _internal_tagsaveasraw(index);
}
inline void cmsICCPROFILEProto::set_tagsaveasraw(int index, int32_t value) {
  tagsaveasraw_.Set(index, value);
  // @@protoc_insertion_point(field_set:cmsICCPROFILEProto.TagSaveAsRaw)
}
inline void cmsICCPROFILEProto::_internal_add_tagsaveasraw(int32_t value) {
  tagsaveasraw_.Add(value);
}
inline void cmsICCPROFILEProto::add_tagsaveasraw(int32_t value) {
  _internal_add_tagsaveasraw(value);
  // @@protoc_insertion_point(field_add:cmsICCPROFILEProto.TagSaveAsRaw)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
cmsICCPROFILEProto::_internal_tagsaveasraw() const {
  return tagsaveasraw_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
cmsICCPROFILEProto::tagsaveasraw() const {
  // @@protoc_insertion_point(field_list:cmsICCPROFILEProto.TagSaveAsRaw)
  return _internal_tagsaveasraw();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
cmsICCPROFILEProto::_internal_mutable_tagsaveasraw() {
  return &tagsaveasraw_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
cmsICCPROFILEProto::mutable_tagsaveasraw() {
  // @@protoc_insertion_point(field_mutable_list:cmsICCPROFILEProto.TagSaveAsRaw)
  return _internal_mutable_tagsaveasraw();
}

// repeated bytes tag_ptrs = 23;
inline int cmsICCPROFILEProto::_internal_tag_ptrs_size() const {
  return tag_ptrs_.size();
}
inline int cmsICCPROFILEProto::tag_ptrs_size() const {
  return _internal_tag_ptrs_size();
}
inline void cmsICCPROFILEProto::clear_tag_ptrs() {
  tag_ptrs_.Clear();
}
inline std::string* cmsICCPROFILEProto::add_tag_ptrs() {
  std::string* _s = _internal_add_tag_ptrs();
  // @@protoc_insertion_point(field_add_mutable:cmsICCPROFILEProto.tag_ptrs)
  return _s;
}
inline const std::string& cmsICCPROFILEProto::_internal_tag_ptrs(int index) const {
  return tag_ptrs_.Get(index);
}
inline const std::string& cmsICCPROFILEProto::tag_ptrs(int index) const {
  // @@protoc_insertion_point(field_get:cmsICCPROFILEProto.tag_ptrs)
  return _internal_tag_ptrs(index);
}
inline std::string* cmsICCPROFILEProto::mutable_tag_ptrs(int index) {
  // @@protoc_insertion_point(field_mutable:cmsICCPROFILEProto.tag_ptrs)
  return tag_ptrs_.Mutable(index);
}
inline void cmsICCPROFILEProto::set_tag_ptrs(int index, const std::string& value) {
  tag_ptrs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:cmsICCPROFILEProto.tag_ptrs)
}
inline void cmsICCPROFILEProto::set_tag_ptrs(int index, std::string&& value) {
  tag_ptrs_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:cmsICCPROFILEProto.tag_ptrs)
}
inline void cmsICCPROFILEProto::set_tag_ptrs(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  tag_ptrs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:cmsICCPROFILEProto.tag_ptrs)
}
inline void cmsICCPROFILEProto::set_tag_ptrs(int index, const void* value, size_t size) {
  tag_ptrs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cmsICCPROFILEProto.tag_ptrs)
}
inline std::string* cmsICCPROFILEProto::_internal_add_tag_ptrs() {
  return tag_ptrs_.Add();
}
inline void cmsICCPROFILEProto::add_tag_ptrs(const std::string& value) {
  tag_ptrs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:cmsICCPROFILEProto.tag_ptrs)
}
inline void cmsICCPROFILEProto::add_tag_ptrs(std::string&& value) {
  tag_ptrs_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:cmsICCPROFILEProto.tag_ptrs)
}
inline void cmsICCPROFILEProto::add_tag_ptrs(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  tag_ptrs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:cmsICCPROFILEProto.tag_ptrs)
}
inline void cmsICCPROFILEProto::add_tag_ptrs(const void* value, size_t size) {
  tag_ptrs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:cmsICCPROFILEProto.tag_ptrs)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
cmsICCPROFILEProto::tag_ptrs() const {
  // @@protoc_insertion_point(field_list:cmsICCPROFILEProto.tag_ptrs)
  return tag_ptrs_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
cmsICCPROFILEProto::mutable_tag_ptrs() {
  // @@protoc_insertion_point(field_mutable_list:cmsICCPROFILEProto.tag_ptrs)
  return &tag_ptrs_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::cmsTagSignatureProto> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::cmsTagSignatureProto>() {
  return ::cmsTagSignatureProto_descriptor();
}
template <> struct is_proto_enum< ::cmsProfileClassSignatureProto> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::cmsProfileClassSignatureProto>() {
  return ::cmsProfileClassSignatureProto_descriptor();
}
template <> struct is_proto_enum< ::cmsColorSpaceSignatureProto> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::cmsColorSpaceSignatureProto>() {
  return ::cmsColorSpaceSignatureProto_descriptor();
}
template <> struct is_proto_enum< ::cmsPlatformSignatureProto> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::cmsPlatformSignatureProto>() {
  return ::cmsPlatformSignatureProto_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_lcms_2eproto
