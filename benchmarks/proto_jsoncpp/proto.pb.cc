// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto.proto

#include "proto.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR CharReaderBuilder_Proto::CharReaderBuilder_Proto(
    ::_pbi::ConstantInitialized)
  : settings_(nullptr){}
struct CharReaderBuilder_ProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharReaderBuilder_ProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharReaderBuilder_ProtoDefaultTypeInternal() {}
  union {
    CharReaderBuilder_Proto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharReaderBuilder_ProtoDefaultTypeInternal _CharReaderBuilder_Proto_default_instance_;
PROTOBUF_CONSTEXPR ValueProto::ValueProto(
    ::_pbi::ConstantInitialized)
  : bits_(nullptr)
  , comments_(nullptr)
  , start_(int64_t{0})
  , limit_(int64_t{0})
  , _oneof_case_{}{}
struct ValueProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValueProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValueProtoDefaultTypeInternal() {}
  union {
    ValueProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValueProtoDefaultTypeInternal _ValueProto_default_instance_;
PROTOBUF_CONSTEXPR CommentsProto::CommentsProto(
    ::_pbi::ConstantInitialized)
  : array_(nullptr){}
struct CommentsProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommentsProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommentsProtoDefaultTypeInternal() {}
  union {
    CommentsProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommentsProtoDefaultTypeInternal _CommentsProto_default_instance_;
PROTOBUF_CONSTEXPR ArrayProto::ArrayProto(
    ::_pbi::ConstantInitialized)
  : values_(){}
struct ArrayProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArrayProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArrayProtoDefaultTypeInternal() {}
  union {
    ArrayProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArrayProtoDefaultTypeInternal _ArrayProto_default_instance_;
PROTOBUF_CONSTEXPR BitsProto::BitsProto(
    ::_pbi::ConstantInitialized)
  : value_type_(0u)
  , allocated_(0u){}
struct BitsProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BitsProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BitsProtoDefaultTypeInternal() {}
  union {
    BitsProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BitsProtoDefaultTypeInternal _BitsProto_default_instance_;
PROTOBUF_CONSTEXPR ObjectValuesProto_ValuesEntry_DoNotUse::ObjectValuesProto_ValuesEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct ObjectValuesProto_ValuesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ObjectValuesProto_ValuesEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ObjectValuesProto_ValuesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ObjectValuesProto_ValuesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ObjectValuesProto_ValuesEntry_DoNotUseDefaultTypeInternal _ObjectValuesProto_ValuesEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ObjectValuesProto::ObjectValuesProto(
    ::_pbi::ConstantInitialized)
  : values_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct ObjectValuesProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ObjectValuesProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ObjectValuesProtoDefaultTypeInternal() {}
  union {
    ObjectValuesProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ObjectValuesProtoDefaultTypeInternal _ObjectValuesProto_default_instance_;
PROTOBUF_CONSTEXPR LargestIntProto::LargestIntProto(
    ::_pbi::ConstantInitialized)
  : value_(int64_t{0}){}
struct LargestIntProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LargestIntProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LargestIntProtoDefaultTypeInternal() {}
  union {
    LargestIntProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LargestIntProtoDefaultTypeInternal _LargestIntProto_default_instance_;
PROTOBUF_CONSTEXPR LargestUIntProto::LargestUIntProto(
    ::_pbi::ConstantInitialized)
  : value_(uint64_t{0u}){}
struct LargestUIntProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LargestUIntProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LargestUIntProtoDefaultTypeInternal() {}
  union {
    LargestUIntProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LargestUIntProtoDefaultTypeInternal _LargestUIntProto_default_instance_;
static ::_pb::Metadata file_level_metadata_proto_2eproto[9];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_proto_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_proto_2eproto = nullptr;

const uint32_t TableStruct_proto_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CharReaderBuilder_Proto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CharReaderBuilder_Proto, settings_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ValueProto, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ValueProto, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ValueProto, bits_),
  PROTOBUF_FIELD_OFFSET(::ValueProto, comments_),
  PROTOBUF_FIELD_OFFSET(::ValueProto, start_),
  PROTOBUF_FIELD_OFFSET(::ValueProto, limit_),
  PROTOBUF_FIELD_OFFSET(::ValueProto, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CommentsProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CommentsProto, array_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ArrayProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ArrayProto, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BitsProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::BitsProto, value_type_),
  PROTOBUF_FIELD_OFFSET(::BitsProto, allocated_),
  PROTOBUF_FIELD_OFFSET(::ObjectValuesProto_ValuesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ObjectValuesProto_ValuesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ObjectValuesProto_ValuesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::ObjectValuesProto_ValuesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ObjectValuesProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ObjectValuesProto, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LargestIntProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::LargestIntProto, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LargestUIntProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::LargestUIntProto, value_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::CharReaderBuilder_Proto)},
  { 7, -1, -1, sizeof(::ValueProto)},
  { 24, -1, -1, sizeof(::CommentsProto)},
  { 31, -1, -1, sizeof(::ArrayProto)},
  { 38, -1, -1, sizeof(::BitsProto)},
  { 46, 54, -1, sizeof(::ObjectValuesProto_ValuesEntry_DoNotUse)},
  { 56, -1, -1, sizeof(::ObjectValuesProto)},
  { 63, -1, -1, sizeof(::LargestIntProto)},
  { 70, -1, -1, sizeof(::LargestUIntProto)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_CharReaderBuilder_Proto_default_instance_._instance,
  &::_ValueProto_default_instance_._instance,
  &::_CommentsProto_default_instance_._instance,
  &::_ArrayProto_default_instance_._instance,
  &::_BitsProto_default_instance_._instance,
  &::_ObjectValuesProto_ValuesEntry_DoNotUse_default_instance_._instance,
  &::_ObjectValuesProto_default_instance_._instance,
  &::_LargestIntProto_default_instance_._instance,
  &::_LargestUIntProto_default_instance_._instance,
};

const char descriptor_table_protodef_proto_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013proto.proto\"8\n\027CharReaderBuilder_Proto"
  "\022\035\n\010settings\030\001 \001(\0132\013.ValueProto\"\254\002\n\nValu"
  "eProto\022%\n\tint_value\030\001 \001(\0132\020.LargestIntPr"
  "otoH\000\022\'\n\nuint_value\030\002 \001(\0132\021.LargestUIntP"
  "rotoH\000\022\024\n\nreal_value\030\003 \001(\001H\000\022\024\n\nbool_val"
  "ue\030\004 \001(\010H\000\022\026\n\014string_value\030\005 \001(\tH\000\022\'\n\tma"
  "p_value\030\006 \001(\0132\022.ObjectValuesProtoH\000\022\030\n\004b"
  "its\030\007 \001(\0132\n.BitsProto\022 \n\010comments\030\010 \001(\0132"
  "\016.CommentsProto\022\r\n\005start\030\t \001(\003\022\r\n\005limit\030"
  "\n \001(\003B\007\n\005value\"+\n\rCommentsProto\022\032\n\005array"
  "\030\001 \001(\0132\013.ArrayProto\")\n\nArrayProto\022\033\n\006val"
  "ues\030\001 \003(\0132\013.ValueProto\"2\n\tBitsProto\022\022\n\nv"
  "alue_type\030\001 \001(\r\022\021\n\tallocated\030\002 \001(\r\"\177\n\021Ob"
  "jectValuesProto\022.\n\006values\030\001 \003(\0132\036.Object"
  "ValuesProto.ValuesEntry\032:\n\013ValuesEntry\022\013"
  "\n\003key\030\001 \001(\t\022\032\n\005value\030\002 \001(\0132\013.ValueProto:"
  "\0028\001\" \n\017LargestIntProto\022\r\n\005value\030\001 \001(\003\"!\n"
  "\020LargestUIntProto\022\r\n\005value\030\001 \001(\004b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_proto_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_proto_2eproto = {
    false, false, 720, descriptor_table_protodef_proto_2eproto,
    "proto.proto",
    &descriptor_table_proto_2eproto_once, nullptr, 0, 9,
    schemas, file_default_instances, TableStruct_proto_2eproto::offsets,
    file_level_metadata_proto_2eproto, file_level_enum_descriptors_proto_2eproto,
    file_level_service_descriptors_proto_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_proto_2eproto_getter() {
  return &descriptor_table_proto_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_proto_2eproto(&descriptor_table_proto_2eproto);

// ===================================================================

class CharReaderBuilder_Proto::_Internal {
 public:
  static const ::ValueProto& settings(const CharReaderBuilder_Proto* msg);
};

const ::ValueProto&
CharReaderBuilder_Proto::_Internal::settings(const CharReaderBuilder_Proto* msg) {
  return *msg->settings_;
}
CharReaderBuilder_Proto::CharReaderBuilder_Proto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:CharReaderBuilder_Proto)
}
CharReaderBuilder_Proto::CharReaderBuilder_Proto(const CharReaderBuilder_Proto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_settings()) {
    settings_ = new ::ValueProto(*from.settings_);
  } else {
    settings_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:CharReaderBuilder_Proto)
}

inline void CharReaderBuilder_Proto::SharedCtor() {
settings_ = nullptr;
}

CharReaderBuilder_Proto::~CharReaderBuilder_Proto() {
  // @@protoc_insertion_point(destructor:CharReaderBuilder_Proto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CharReaderBuilder_Proto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete settings_;
}

void CharReaderBuilder_Proto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CharReaderBuilder_Proto::Clear() {
// @@protoc_insertion_point(message_clear_start:CharReaderBuilder_Proto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && settings_ != nullptr) {
    delete settings_;
  }
  settings_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharReaderBuilder_Proto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ValueProto settings = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_settings(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CharReaderBuilder_Proto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CharReaderBuilder_Proto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ValueProto settings = 1;
  if (this->_internal_has_settings()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::settings(this),
        _Internal::settings(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CharReaderBuilder_Proto)
  return target;
}

size_t CharReaderBuilder_Proto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CharReaderBuilder_Proto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ValueProto settings = 1;
  if (this->_internal_has_settings()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *settings_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CharReaderBuilder_Proto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CharReaderBuilder_Proto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CharReaderBuilder_Proto::GetClassData() const { return &_class_data_; }

void CharReaderBuilder_Proto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CharReaderBuilder_Proto *>(to)->MergeFrom(
      static_cast<const CharReaderBuilder_Proto &>(from));
}


void CharReaderBuilder_Proto::MergeFrom(const CharReaderBuilder_Proto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CharReaderBuilder_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_settings()) {
    _internal_mutable_settings()->::ValueProto::MergeFrom(from._internal_settings());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CharReaderBuilder_Proto::CopyFrom(const CharReaderBuilder_Proto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CharReaderBuilder_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharReaderBuilder_Proto::IsInitialized() const {
  return true;
}

void CharReaderBuilder_Proto::InternalSwap(CharReaderBuilder_Proto* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(settings_, other->settings_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CharReaderBuilder_Proto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2eproto_getter, &descriptor_table_proto_2eproto_once,
      file_level_metadata_proto_2eproto[0]);
}

// ===================================================================

class ValueProto::_Internal {
 public:
  static const ::LargestIntProto& int_value(const ValueProto* msg);
  static const ::LargestUIntProto& uint_value(const ValueProto* msg);
  static const ::ObjectValuesProto& map_value(const ValueProto* msg);
  static const ::BitsProto& bits(const ValueProto* msg);
  static const ::CommentsProto& comments(const ValueProto* msg);
};

const ::LargestIntProto&
ValueProto::_Internal::int_value(const ValueProto* msg) {
  return *msg->value_.int_value_;
}
const ::LargestUIntProto&
ValueProto::_Internal::uint_value(const ValueProto* msg) {
  return *msg->value_.uint_value_;
}
const ::ObjectValuesProto&
ValueProto::_Internal::map_value(const ValueProto* msg) {
  return *msg->value_.map_value_;
}
const ::BitsProto&
ValueProto::_Internal::bits(const ValueProto* msg) {
  return *msg->bits_;
}
const ::CommentsProto&
ValueProto::_Internal::comments(const ValueProto* msg) {
  return *msg->comments_;
}
void ValueProto::set_allocated_int_value(::LargestIntProto* int_value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (int_value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(int_value);
    if (message_arena != submessage_arena) {
      int_value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, int_value, submessage_arena);
    }
    set_has_int_value();
    value_.int_value_ = int_value;
  }
  // @@protoc_insertion_point(field_set_allocated:ValueProto.int_value)
}
void ValueProto::set_allocated_uint_value(::LargestUIntProto* uint_value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (uint_value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(uint_value);
    if (message_arena != submessage_arena) {
      uint_value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, uint_value, submessage_arena);
    }
    set_has_uint_value();
    value_.uint_value_ = uint_value;
  }
  // @@protoc_insertion_point(field_set_allocated:ValueProto.uint_value)
}
void ValueProto::set_allocated_map_value(::ObjectValuesProto* map_value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (map_value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(map_value);
    if (message_arena != submessage_arena) {
      map_value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, map_value, submessage_arena);
    }
    set_has_map_value();
    value_.map_value_ = map_value;
  }
  // @@protoc_insertion_point(field_set_allocated:ValueProto.map_value)
}
ValueProto::ValueProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ValueProto)
}
ValueProto::ValueProto(const ValueProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_bits()) {
    bits_ = new ::BitsProto(*from.bits_);
  } else {
    bits_ = nullptr;
  }
  if (from._internal_has_comments()) {
    comments_ = new ::CommentsProto(*from.comments_);
  } else {
    comments_ = nullptr;
  }
  ::memcpy(&start_, &from.start_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&start_)) + sizeof(limit_));
  clear_has_value();
  switch (from.value_case()) {
    case kIntValue: {
      _internal_mutable_int_value()->::LargestIntProto::MergeFrom(from._internal_int_value());
      break;
    }
    case kUintValue: {
      _internal_mutable_uint_value()->::LargestUIntProto::MergeFrom(from._internal_uint_value());
      break;
    }
    case kRealValue: {
      _internal_set_real_value(from._internal_real_value());
      break;
    }
    case kBoolValue: {
      _internal_set_bool_value(from._internal_bool_value());
      break;
    }
    case kStringValue: {
      _internal_set_string_value(from._internal_string_value());
      break;
    }
    case kMapValue: {
      _internal_mutable_map_value()->::ObjectValuesProto::MergeFrom(from._internal_map_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ValueProto)
}

inline void ValueProto::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&bits_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&bits_)) + sizeof(limit_));
clear_has_value();
}

ValueProto::~ValueProto() {
  // @@protoc_insertion_point(destructor:ValueProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ValueProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete bits_;
  if (this != internal_default_instance()) delete comments_;
  if (has_value()) {
    clear_value();
  }
}

void ValueProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ValueProto::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:ValueProto)
  switch (value_case()) {
    case kIntValue: {
      if (GetArenaForAllocation() == nullptr) {
        delete value_.int_value_;
      }
      break;
    }
    case kUintValue: {
      if (GetArenaForAllocation() == nullptr) {
        delete value_.uint_value_;
      }
      break;
    }
    case kRealValue: {
      // No need to clear
      break;
    }
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kStringValue: {
      value_.string_value_.Destroy();
      break;
    }
    case kMapValue: {
      if (GetArenaForAllocation() == nullptr) {
        delete value_.map_value_;
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void ValueProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ValueProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && bits_ != nullptr) {
    delete bits_;
  }
  bits_ = nullptr;
  if (GetArenaForAllocation() == nullptr && comments_ != nullptr) {
    delete comments_;
  }
  comments_ = nullptr;
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&start_)) + sizeof(limit_));
  clear_value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ValueProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .LargestIntProto int_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_int_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .LargestUIntProto uint_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_uint_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double real_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          _internal_set_real_value(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // bool bool_value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _internal_set_bool_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string string_value = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_string_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ValueProto.string_value"));
        } else
          goto handle_unusual;
        continue;
      // .ObjectValuesProto map_value = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_map_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .BitsProto bits = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_bits(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .CommentsProto comments = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_comments(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 start = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          start_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 limit = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ValueProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ValueProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .LargestIntProto int_value = 1;
  if (_internal_has_int_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::int_value(this),
        _Internal::int_value(this).GetCachedSize(), target, stream);
  }

  // .LargestUIntProto uint_value = 2;
  if (_internal_has_uint_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::uint_value(this),
        _Internal::uint_value(this).GetCachedSize(), target, stream);
  }

  // double real_value = 3;
  if (_internal_has_real_value()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_real_value(), target);
  }

  // bool bool_value = 4;
  if (_internal_has_bool_value()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_bool_value(), target);
  }

  // string string_value = 5;
  if (_internal_has_string_value()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string_value().data(), static_cast<int>(this->_internal_string_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ValueProto.string_value");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_string_value(), target);
  }

  // .ObjectValuesProto map_value = 6;
  if (_internal_has_map_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::map_value(this),
        _Internal::map_value(this).GetCachedSize(), target, stream);
  }

  // .BitsProto bits = 7;
  if (this->_internal_has_bits()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::bits(this),
        _Internal::bits(this).GetCachedSize(), target, stream);
  }

  // .CommentsProto comments = 8;
  if (this->_internal_has_comments()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::comments(this),
        _Internal::comments(this).GetCachedSize(), target, stream);
  }

  // int64 start = 9;
  if (this->_internal_start() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(9, this->_internal_start(), target);
  }

  // int64 limit = 10;
  if (this->_internal_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(10, this->_internal_limit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ValueProto)
  return target;
}

size_t ValueProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ValueProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .BitsProto bits = 7;
  if (this->_internal_has_bits()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bits_);
  }

  // .CommentsProto comments = 8;
  if (this->_internal_has_comments()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *comments_);
  }

  // int64 start = 9;
  if (this->_internal_start() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_start());
  }

  // int64 limit = 10;
  if (this->_internal_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_limit());
  }

  switch (value_case()) {
    // .LargestIntProto int_value = 1;
    case kIntValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.int_value_);
      break;
    }
    // .LargestUIntProto uint_value = 2;
    case kUintValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.uint_value_);
      break;
    }
    // double real_value = 3;
    case kRealValue: {
      total_size += 1 + 8;
      break;
    }
    // bool bool_value = 4;
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    // string string_value = 5;
    case kStringValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_string_value());
      break;
    }
    // .ObjectValuesProto map_value = 6;
    case kMapValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.map_value_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ValueProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ValueProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ValueProto::GetClassData() const { return &_class_data_; }

void ValueProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ValueProto *>(to)->MergeFrom(
      static_cast<const ValueProto &>(from));
}


void ValueProto::MergeFrom(const ValueProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ValueProto)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_bits()) {
    _internal_mutable_bits()->::BitsProto::MergeFrom(from._internal_bits());
  }
  if (from._internal_has_comments()) {
    _internal_mutable_comments()->::CommentsProto::MergeFrom(from._internal_comments());
  }
  if (from._internal_start() != 0) {
    _internal_set_start(from._internal_start());
  }
  if (from._internal_limit() != 0) {
    _internal_set_limit(from._internal_limit());
  }
  switch (from.value_case()) {
    case kIntValue: {
      _internal_mutable_int_value()->::LargestIntProto::MergeFrom(from._internal_int_value());
      break;
    }
    case kUintValue: {
      _internal_mutable_uint_value()->::LargestUIntProto::MergeFrom(from._internal_uint_value());
      break;
    }
    case kRealValue: {
      _internal_set_real_value(from._internal_real_value());
      break;
    }
    case kBoolValue: {
      _internal_set_bool_value(from._internal_bool_value());
      break;
    }
    case kStringValue: {
      _internal_set_string_value(from._internal_string_value());
      break;
    }
    case kMapValue: {
      _internal_mutable_map_value()->::ObjectValuesProto::MergeFrom(from._internal_map_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ValueProto::CopyFrom(const ValueProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ValueProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValueProto::IsInitialized() const {
  return true;
}

void ValueProto::InternalSwap(ValueProto* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ValueProto, limit_)
      + sizeof(ValueProto::limit_)
      - PROTOBUF_FIELD_OFFSET(ValueProto, bits_)>(
          reinterpret_cast<char*>(&bits_),
          reinterpret_cast<char*>(&other->bits_));
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ValueProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2eproto_getter, &descriptor_table_proto_2eproto_once,
      file_level_metadata_proto_2eproto[1]);
}

// ===================================================================

class CommentsProto::_Internal {
 public:
  static const ::ArrayProto& array(const CommentsProto* msg);
};

const ::ArrayProto&
CommentsProto::_Internal::array(const CommentsProto* msg) {
  return *msg->array_;
}
CommentsProto::CommentsProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:CommentsProto)
}
CommentsProto::CommentsProto(const CommentsProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_array()) {
    array_ = new ::ArrayProto(*from.array_);
  } else {
    array_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:CommentsProto)
}

inline void CommentsProto::SharedCtor() {
array_ = nullptr;
}

CommentsProto::~CommentsProto() {
  // @@protoc_insertion_point(destructor:CommentsProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CommentsProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete array_;
}

void CommentsProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CommentsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:CommentsProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && array_ != nullptr) {
    delete array_;
  }
  array_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommentsProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ArrayProto array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_array(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CommentsProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CommentsProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ArrayProto array = 1;
  if (this->_internal_has_array()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::array(this),
        _Internal::array(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CommentsProto)
  return target;
}

size_t CommentsProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CommentsProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ArrayProto array = 1;
  if (this->_internal_has_array()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *array_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CommentsProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CommentsProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CommentsProto::GetClassData() const { return &_class_data_; }

void CommentsProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CommentsProto *>(to)->MergeFrom(
      static_cast<const CommentsProto &>(from));
}


void CommentsProto::MergeFrom(const CommentsProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CommentsProto)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_array()) {
    _internal_mutable_array()->::ArrayProto::MergeFrom(from._internal_array());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CommentsProto::CopyFrom(const CommentsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CommentsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommentsProto::IsInitialized() const {
  return true;
}

void CommentsProto::InternalSwap(CommentsProto* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(array_, other->array_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CommentsProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2eproto_getter, &descriptor_table_proto_2eproto_once,
      file_level_metadata_proto_2eproto[2]);
}

// ===================================================================

class ArrayProto::_Internal {
 public:
};

ArrayProto::ArrayProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  values_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:ArrayProto)
}
ArrayProto::ArrayProto(const ArrayProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      values_(from.values_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ArrayProto)
}

inline void ArrayProto::SharedCtor() {
}

ArrayProto::~ArrayProto() {
  // @@protoc_insertion_point(destructor:ArrayProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ArrayProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ArrayProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ArrayProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ArrayProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ArrayProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ValueProto values = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_values(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ArrayProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ArrayProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ValueProto values = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_values_size()); i < n; i++) {
    const auto& repfield = this->_internal_values(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ArrayProto)
  return target;
}

size_t ArrayProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ArrayProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ValueProto values = 1;
  total_size += 1UL * this->_internal_values_size();
  for (const auto& msg : this->values_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ArrayProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ArrayProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ArrayProto::GetClassData() const { return &_class_data_; }

void ArrayProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ArrayProto *>(to)->MergeFrom(
      static_cast<const ArrayProto &>(from));
}


void ArrayProto::MergeFrom(const ArrayProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ArrayProto)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ArrayProto::CopyFrom(const ArrayProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ArrayProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArrayProto::IsInitialized() const {
  return true;
}

void ArrayProto::InternalSwap(ArrayProto* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  values_.InternalSwap(&other->values_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ArrayProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2eproto_getter, &descriptor_table_proto_2eproto_once,
      file_level_metadata_proto_2eproto[3]);
}

// ===================================================================

class BitsProto::_Internal {
 public:
};

BitsProto::BitsProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:BitsProto)
}
BitsProto::BitsProto(const BitsProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&value_type_, &from.value_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&allocated_) -
    reinterpret_cast<char*>(&value_type_)) + sizeof(allocated_));
  // @@protoc_insertion_point(copy_constructor:BitsProto)
}

inline void BitsProto::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&value_type_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&allocated_) -
    reinterpret_cast<char*>(&value_type_)) + sizeof(allocated_));
}

BitsProto::~BitsProto() {
  // @@protoc_insertion_point(destructor:BitsProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BitsProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BitsProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BitsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:BitsProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&value_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allocated_) -
      reinterpret_cast<char*>(&value_type_)) + sizeof(allocated_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BitsProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 value_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          value_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 allocated = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          allocated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BitsProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:BitsProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 value_type = 1;
  if (this->_internal_value_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_value_type(), target);
  }

  // uint32 allocated = 2;
  if (this->_internal_allocated() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_allocated(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BitsProto)
  return target;
}

size_t BitsProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BitsProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 value_type = 1;
  if (this->_internal_value_type() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_value_type());
  }

  // uint32 allocated = 2;
  if (this->_internal_allocated() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_allocated());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BitsProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BitsProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BitsProto::GetClassData() const { return &_class_data_; }

void BitsProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BitsProto *>(to)->MergeFrom(
      static_cast<const BitsProto &>(from));
}


void BitsProto::MergeFrom(const BitsProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BitsProto)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value_type() != 0) {
    _internal_set_value_type(from._internal_value_type());
  }
  if (from._internal_allocated() != 0) {
    _internal_set_allocated(from._internal_allocated());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BitsProto::CopyFrom(const BitsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BitsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BitsProto::IsInitialized() const {
  return true;
}

void BitsProto::InternalSwap(BitsProto* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BitsProto, allocated_)
      + sizeof(BitsProto::allocated_)
      - PROTOBUF_FIELD_OFFSET(BitsProto, value_type_)>(
          reinterpret_cast<char*>(&value_type_),
          reinterpret_cast<char*>(&other->value_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BitsProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2eproto_getter, &descriptor_table_proto_2eproto_once,
      file_level_metadata_proto_2eproto[4]);
}

// ===================================================================

ObjectValuesProto_ValuesEntry_DoNotUse::ObjectValuesProto_ValuesEntry_DoNotUse() {}
ObjectValuesProto_ValuesEntry_DoNotUse::ObjectValuesProto_ValuesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ObjectValuesProto_ValuesEntry_DoNotUse::MergeFrom(const ObjectValuesProto_ValuesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ObjectValuesProto_ValuesEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2eproto_getter, &descriptor_table_proto_2eproto_once,
      file_level_metadata_proto_2eproto[5]);
}

// ===================================================================

class ObjectValuesProto::_Internal {
 public:
};

ObjectValuesProto::ObjectValuesProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  values_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &ObjectValuesProto::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:ObjectValuesProto)
}
ObjectValuesProto::ObjectValuesProto(const ObjectValuesProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  values_.MergeFrom(from.values_);
  // @@protoc_insertion_point(copy_constructor:ObjectValuesProto)
}

inline void ObjectValuesProto::SharedCtor() {
}

ObjectValuesProto::~ObjectValuesProto() {
  // @@protoc_insertion_point(destructor:ObjectValuesProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void ObjectValuesProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  values_.Destruct();
}

void ObjectValuesProto::ArenaDtor(void* object) {
  ObjectValuesProto* _this = reinterpret_cast< ObjectValuesProto* >(object);
  _this->values_.Destruct();
}
void ObjectValuesProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ObjectValuesProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ObjectValuesProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjectValuesProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .ValueProto> values = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&values_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ObjectValuesProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ObjectValuesProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .ValueProto> values = 1;
  if (!this->_internal_values().empty()) {
    using MapType = ::_pb::Map<std::string, ::ValueProto>;
    using WireHelper = ObjectValuesProto_ValuesEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_values();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "ObjectValuesProto.ValuesEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ObjectValuesProto)
  return target;
}

size_t ObjectValuesProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ObjectValuesProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .ValueProto> values = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_values_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ValueProto >::const_iterator
      it = this->_internal_values().begin();
      it != this->_internal_values().end(); ++it) {
    total_size += ObjectValuesProto_ValuesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ObjectValuesProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ObjectValuesProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ObjectValuesProto::GetClassData() const { return &_class_data_; }

void ObjectValuesProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ObjectValuesProto *>(to)->MergeFrom(
      static_cast<const ObjectValuesProto &>(from));
}


void ObjectValuesProto::MergeFrom(const ObjectValuesProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ObjectValuesProto)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ObjectValuesProto::CopyFrom(const ObjectValuesProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ObjectValuesProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectValuesProto::IsInitialized() const {
  return true;
}

void ObjectValuesProto::InternalSwap(ObjectValuesProto* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  values_.InternalSwap(&other->values_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectValuesProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2eproto_getter, &descriptor_table_proto_2eproto_once,
      file_level_metadata_proto_2eproto[6]);
}

// ===================================================================

class LargestIntProto::_Internal {
 public:
};

LargestIntProto::LargestIntProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:LargestIntProto)
}
LargestIntProto::LargestIntProto(const LargestIntProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:LargestIntProto)
}

inline void LargestIntProto::SharedCtor() {
value_ = int64_t{0};
}

LargestIntProto::~LargestIntProto() {
  // @@protoc_insertion_point(destructor:LargestIntProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LargestIntProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void LargestIntProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LargestIntProto::Clear() {
// @@protoc_insertion_point(message_clear_start:LargestIntProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LargestIntProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LargestIntProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LargestIntProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value = 1;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LargestIntProto)
  return target;
}

size_t LargestIntProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LargestIntProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 value = 1;
  if (this->_internal_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LargestIntProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LargestIntProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LargestIntProto::GetClassData() const { return &_class_data_; }

void LargestIntProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LargestIntProto *>(to)->MergeFrom(
      static_cast<const LargestIntProto &>(from));
}


void LargestIntProto::MergeFrom(const LargestIntProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LargestIntProto)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LargestIntProto::CopyFrom(const LargestIntProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LargestIntProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LargestIntProto::IsInitialized() const {
  return true;
}

void LargestIntProto::InternalSwap(LargestIntProto* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LargestIntProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2eproto_getter, &descriptor_table_proto_2eproto_once,
      file_level_metadata_proto_2eproto[7]);
}

// ===================================================================

class LargestUIntProto::_Internal {
 public:
};

LargestUIntProto::LargestUIntProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:LargestUIntProto)
}
LargestUIntProto::LargestUIntProto(const LargestUIntProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:LargestUIntProto)
}

inline void LargestUIntProto::SharedCtor() {
value_ = uint64_t{0u};
}

LargestUIntProto::~LargestUIntProto() {
  // @@protoc_insertion_point(destructor:LargestUIntProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LargestUIntProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void LargestUIntProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LargestUIntProto::Clear() {
// @@protoc_insertion_point(message_clear_start:LargestUIntProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LargestUIntProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LargestUIntProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LargestUIntProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value = 1;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LargestUIntProto)
  return target;
}

size_t LargestUIntProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LargestUIntProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 value = 1;
  if (this->_internal_value() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LargestUIntProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LargestUIntProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LargestUIntProto::GetClassData() const { return &_class_data_; }

void LargestUIntProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LargestUIntProto *>(to)->MergeFrom(
      static_cast<const LargestUIntProto &>(from));
}


void LargestUIntProto::MergeFrom(const LargestUIntProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LargestUIntProto)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LargestUIntProto::CopyFrom(const LargestUIntProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LargestUIntProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LargestUIntProto::IsInitialized() const {
  return true;
}

void LargestUIntProto::InternalSwap(LargestUIntProto* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LargestUIntProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2eproto_getter, &descriptor_table_proto_2eproto_once,
      file_level_metadata_proto_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CharReaderBuilder_Proto*
Arena::CreateMaybeMessage< ::CharReaderBuilder_Proto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CharReaderBuilder_Proto >(arena);
}
template<> PROTOBUF_NOINLINE ::ValueProto*
Arena::CreateMaybeMessage< ::ValueProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ValueProto >(arena);
}
template<> PROTOBUF_NOINLINE ::CommentsProto*
Arena::CreateMaybeMessage< ::CommentsProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CommentsProto >(arena);
}
template<> PROTOBUF_NOINLINE ::ArrayProto*
Arena::CreateMaybeMessage< ::ArrayProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ArrayProto >(arena);
}
template<> PROTOBUF_NOINLINE ::BitsProto*
Arena::CreateMaybeMessage< ::BitsProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::BitsProto >(arena);
}
template<> PROTOBUF_NOINLINE ::ObjectValuesProto_ValuesEntry_DoNotUse*
Arena::CreateMaybeMessage< ::ObjectValuesProto_ValuesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ObjectValuesProto_ValuesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::ObjectValuesProto*
Arena::CreateMaybeMessage< ::ObjectValuesProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ObjectValuesProto >(arena);
}
template<> PROTOBUF_NOINLINE ::LargestIntProto*
Arena::CreateMaybeMessage< ::LargestIntProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::LargestIntProto >(arena);
}
template<> PROTOBUF_NOINLINE ::LargestUIntProto*
Arena::CreateMaybeMessage< ::LargestUIntProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::LargestUIntProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
