// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: woff2.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_woff2_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_woff2_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_woff2_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_woff2_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_woff2_2eproto;
class BufferProto;
struct BufferProtoDefaultTypeInternal;
extern BufferProtoDefaultTypeInternal _BufferProto_default_instance_;
class ContourVecProto;
struct ContourVecProtoDefaultTypeInternal;
extern ContourVecProtoDefaultTypeInternal _ContourVecProto_default_instance_;
class FontCollectionProto;
struct FontCollectionProtoDefaultTypeInternal;
extern FontCollectionProtoDefaultTypeInternal _FontCollectionProto_default_instance_;
class FontCollectionProto_TablesProtoEntry_DoNotUse;
struct FontCollectionProto_TablesProtoEntry_DoNotUseDefaultTypeInternal;
extern FontCollectionProto_TablesProtoEntry_DoNotUseDefaultTypeInternal _FontCollectionProto_TablesProtoEntry_DoNotUse_default_instance_;
class FontProto;
struct FontProtoDefaultTypeInternal;
extern FontProtoDefaultTypeInternal _FontProto_default_instance_;
class FontProto_TablesProtoEntry_DoNotUse;
struct FontProto_TablesProtoEntry_DoNotUseDefaultTypeInternal;
extern FontProto_TablesProtoEntry_DoNotUseDefaultTypeInternal _FontProto_TablesProtoEntry_DoNotUse_default_instance_;
class FontTableProto;
struct FontTableProtoDefaultTypeInternal;
extern FontTableProtoDefaultTypeInternal _FontTableProto_default_instance_;
class GlyfEncoderProto;
struct GlyfEncoderProtoDefaultTypeInternal;
extern GlyfEncoderProtoDefaultTypeInternal _GlyfEncoderProto_default_instance_;
class GlyphPointProto;
struct GlyphPointProtoDefaultTypeInternal;
extern GlyphPointProtoDefaultTypeInternal _GlyphPointProto_default_instance_;
class GlyphProto;
struct GlyphProtoDefaultTypeInternal;
extern GlyphProtoDefaultTypeInternal _GlyphProto_default_instance_;
class PointProto;
struct PointProtoDefaultTypeInternal;
extern PointProtoDefaultTypeInternal _PointProto_default_instance_;
class RebuildMetadataProto;
struct RebuildMetadataProtoDefaultTypeInternal;
extern RebuildMetadataProtoDefaultTypeInternal _RebuildMetadataProto_default_instance_;
class RebuildMetadataProto_ChecksumsProtoEntry_DoNotUse;
struct RebuildMetadataProto_ChecksumsProtoEntry_DoNotUseDefaultTypeInternal;
extern RebuildMetadataProto_ChecksumsProtoEntry_DoNotUseDefaultTypeInternal _RebuildMetadataProto_ChecksumsProtoEntry_DoNotUse_default_instance_;
class TableProto;
struct TableProtoDefaultTypeInternal;
extern TableProtoDefaultTypeInternal _TableProto_default_instance_;
class TtcFontProto;
struct TtcFontProtoDefaultTypeInternal;
extern TtcFontProtoDefaultTypeInternal _TtcFontProto_default_instance_;
class WOFF2FontInfoProto;
struct WOFF2FontInfoProtoDefaultTypeInternal;
extern WOFF2FontInfoProtoDefaultTypeInternal _WOFF2FontInfoProto_default_instance_;
class WOFF2FontInfoProto_TableEntryByTagProtoEntry_DoNotUse;
struct WOFF2FontInfoProto_TableEntryByTagProtoEntry_DoNotUseDefaultTypeInternal;
extern WOFF2FontInfoProto_TableEntryByTagProtoEntry_DoNotUseDefaultTypeInternal _WOFF2FontInfoProto_TableEntryByTagProtoEntry_DoNotUse_default_instance_;
class WOFF2HeaderProto;
struct WOFF2HeaderProtoDefaultTypeInternal;
extern WOFF2HeaderProtoDefaultTypeInternal _WOFF2HeaderProto_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::BufferProto* Arena::CreateMaybeMessage<::BufferProto>(Arena*);
template<> ::ContourVecProto* Arena::CreateMaybeMessage<::ContourVecProto>(Arena*);
template<> ::FontCollectionProto* Arena::CreateMaybeMessage<::FontCollectionProto>(Arena*);
template<> ::FontCollectionProto_TablesProtoEntry_DoNotUse* Arena::CreateMaybeMessage<::FontCollectionProto_TablesProtoEntry_DoNotUse>(Arena*);
template<> ::FontProto* Arena::CreateMaybeMessage<::FontProto>(Arena*);
template<> ::FontProto_TablesProtoEntry_DoNotUse* Arena::CreateMaybeMessage<::FontProto_TablesProtoEntry_DoNotUse>(Arena*);
template<> ::FontTableProto* Arena::CreateMaybeMessage<::FontTableProto>(Arena*);
template<> ::GlyfEncoderProto* Arena::CreateMaybeMessage<::GlyfEncoderProto>(Arena*);
template<> ::GlyphPointProto* Arena::CreateMaybeMessage<::GlyphPointProto>(Arena*);
template<> ::GlyphProto* Arena::CreateMaybeMessage<::GlyphProto>(Arena*);
template<> ::PointProto* Arena::CreateMaybeMessage<::PointProto>(Arena*);
template<> ::RebuildMetadataProto* Arena::CreateMaybeMessage<::RebuildMetadataProto>(Arena*);
template<> ::RebuildMetadataProto_ChecksumsProtoEntry_DoNotUse* Arena::CreateMaybeMessage<::RebuildMetadataProto_ChecksumsProtoEntry_DoNotUse>(Arena*);
template<> ::TableProto* Arena::CreateMaybeMessage<::TableProto>(Arena*);
template<> ::TtcFontProto* Arena::CreateMaybeMessage<::TtcFontProto>(Arena*);
template<> ::WOFF2FontInfoProto* Arena::CreateMaybeMessage<::WOFF2FontInfoProto>(Arena*);
template<> ::WOFF2FontInfoProto_TableEntryByTagProtoEntry_DoNotUse* Arena::CreateMaybeMessage<::WOFF2FontInfoProto_TableEntryByTagProtoEntry_DoNotUse>(Arena*);
template<> ::WOFF2HeaderProto* Arena::CreateMaybeMessage<::WOFF2HeaderProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class FontCollectionProto_TablesProtoEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<FontCollectionProto_TablesProtoEntry_DoNotUse, 
    uint32_t, ::FontTableProto,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<FontCollectionProto_TablesProtoEntry_DoNotUse, 
    uint32_t, ::FontTableProto,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  FontCollectionProto_TablesProtoEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR FontCollectionProto_TablesProtoEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit FontCollectionProto_TablesProtoEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const FontCollectionProto_TablesProtoEntry_DoNotUse& other);
  static const FontCollectionProto_TablesProtoEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const FontCollectionProto_TablesProtoEntry_DoNotUse*>(&_FontCollectionProto_TablesProtoEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_woff2_2eproto;
};

// -------------------------------------------------------------------

class FontCollectionProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:FontCollectionProto) */ {
 public:
  inline FontCollectionProto() : FontCollectionProto(nullptr) {}
  ~FontCollectionProto() override;
  explicit PROTOBUF_CONSTEXPR FontCollectionProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FontCollectionProto(const FontCollectionProto& from);
  FontCollectionProto(FontCollectionProto&& from) noexcept
    : FontCollectionProto() {
    *this = ::std::move(from);
  }

  inline FontCollectionProto& operator=(const FontCollectionProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline FontCollectionProto& operator=(FontCollectionProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FontCollectionProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const FontCollectionProto* internal_default_instance() {
    return reinterpret_cast<const FontCollectionProto*>(
               &_FontCollectionProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(FontCollectionProto& a, FontCollectionProto& b) {
    a.Swap(&b);
  }
  inline void Swap(FontCollectionProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FontCollectionProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FontCollectionProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FontCollectionProto>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const FontCollectionProto& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const FontCollectionProto& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FontCollectionProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "FontCollectionProto";
  }
  protected:
  explicit FontCollectionProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kTablesProtoFieldNumber = 3,
    kFontsProtoFieldNumber = 4,
    kFlavorProtoFieldNumber = 1,
    kHeaderVersionProtoFieldNumber = 2,
  };
  // map<uint32, .FontTableProto> tables_proto = 3;
  int tables_proto_size() const;
  private:
  int _internal_tables_proto_size() const;
  public:
  void clear_tables_proto();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, ::FontTableProto >&
      _internal_tables_proto() const;
  ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, ::FontTableProto >*
      _internal_mutable_tables_proto();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, ::FontTableProto >&
      tables_proto() const;
  ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, ::FontTableProto >*
      mutable_tables_proto();

  // repeated .FontProto fonts_proto = 4;
  int fonts_proto_size() const;
  private:
  int _internal_fonts_proto_size() const;
  public:
  void clear_fonts_proto();
  ::FontProto* mutable_fonts_proto(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::FontProto >*
      mutable_fonts_proto();
  private:
  const ::FontProto& _internal_fonts_proto(int index) const;
  ::FontProto* _internal_add_fonts_proto();
  public:
  const ::FontProto& fonts_proto(int index) const;
  ::FontProto* add_fonts_proto();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::FontProto >&
      fonts_proto() const;

  // uint32 flavor_proto = 1;
  void clear_flavor_proto();
  uint32_t flavor_proto() const;
  void set_flavor_proto(uint32_t value);
  private:
  uint32_t _internal_flavor_proto() const;
  void _internal_set_flavor_proto(uint32_t value);
  public:

  // uint32 header_version_proto = 2;
  void clear_header_version_proto();
  uint32_t header_version_proto() const;
  void set_header_version_proto(uint32_t value);
  private:
  uint32_t _internal_header_version_proto() const;
  void _internal_set_header_version_proto(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:FontCollectionProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      FontCollectionProto_TablesProtoEntry_DoNotUse,
      uint32_t, ::FontTableProto,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> tables_proto_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::FontProto > fonts_proto_;
  uint32_t flavor_proto_;
  uint32_t header_version_proto_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_woff2_2eproto;
};
// -------------------------------------------------------------------

class GlyphProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GlyphProto) */ {
 public:
  inline GlyphProto() : GlyphProto(nullptr) {}
  ~GlyphProto() override;
  explicit PROTOBUF_CONSTEXPR GlyphProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GlyphProto(const GlyphProto& from);
  GlyphProto(GlyphProto&& from) noexcept
    : GlyphProto() {
    *this = ::std::move(from);
  }

  inline GlyphProto& operator=(const GlyphProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline GlyphProto& operator=(GlyphProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GlyphProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const GlyphProto* internal_default_instance() {
    return reinterpret_cast<const GlyphProto*>(
               &_GlyphProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GlyphProto& a, GlyphProto& b) {
    a.Swap(&b);
  }
  inline void Swap(GlyphProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GlyphProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GlyphProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GlyphProto>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GlyphProto& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GlyphProto& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GlyphProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GlyphProto";
  }
  protected:
  explicit GlyphProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContoursProtoFieldNumber = 8,
    kInstructionsDataProtoFieldNumber = 6,
    kCompositeDataProtoFieldNumber = 9,
    kXMinProtoFieldNumber = 1,
    kXMaxProtoFieldNumber = 2,
    kYMinProtoFieldNumber = 3,
    kYMaxProtoFieldNumber = 4,
    kInstructionsSizeProtoFieldNumber = 5,
    kOverlapSimpleFlagSetProtoFieldNumber = 7,
    kHaveInstructionsProtoFieldNumber = 11,
    kCompositeDataSizeProtoFieldNumber = 10,
  };
  // repeated .ContourVecProto contours_proto = 8;
  int contours_proto_size() const;
  private:
  int _internal_contours_proto_size() const;
  public:
  void clear_contours_proto();
  ::ContourVecProto* mutable_contours_proto(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ContourVecProto >*
      mutable_contours_proto();
  private:
  const ::ContourVecProto& _internal_contours_proto(int index) const;
  ::ContourVecProto* _internal_add_contours_proto();
  public:
  const ::ContourVecProto& contours_proto(int index) const;
  ::ContourVecProto* add_contours_proto();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ContourVecProto >&
      contours_proto() const;

  // bytes instructions_data_proto = 6;
  void clear_instructions_data_proto();
  const std::string& instructions_data_proto() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_instructions_data_proto(ArgT0&& arg0, ArgT... args);
  std::string* mutable_instructions_data_proto();
  PROTOBUF_NODISCARD std::string* release_instructions_data_proto();
  void set_allocated_instructions_data_proto(std::string* instructions_data_proto);
  private:
  const std::string& _internal_instructions_data_proto() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instructions_data_proto(const std::string& value);
  std::string* _internal_mutable_instructions_data_proto();
  public:

  // bytes composite_data_proto = 9;
  void clear_composite_data_proto();
  const std::string& composite_data_proto() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_composite_data_proto(ArgT0&& arg0, ArgT... args);
  std::string* mutable_composite_data_proto();
  PROTOBUF_NODISCARD std::string* release_composite_data_proto();
  void set_allocated_composite_data_proto(std::string* composite_data_proto);
  private:
  const std::string& _internal_composite_data_proto() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_composite_data_proto(const std::string& value);
  std::string* _internal_mutable_composite_data_proto();
  public:

  // int32 x_min_proto = 1;
  void clear_x_min_proto();
  int32_t x_min_proto() const;
  void set_x_min_proto(int32_t value);
  private:
  int32_t _internal_x_min_proto() const;
  void _internal_set_x_min_proto(int32_t value);
  public:

  // int32 x_max_proto = 2;
  void clear_x_max_proto();
  int32_t x_max_proto() const;
  void set_x_max_proto(int32_t value);
  private:
  int32_t _internal_x_max_proto() const;
  void _internal_set_x_max_proto(int32_t value);
  public:

  // int32 y_min_proto = 3;
  void clear_y_min_proto();
  int32_t y_min_proto() const;
  void set_y_min_proto(int32_t value);
  private:
  int32_t _internal_y_min_proto() const;
  void _internal_set_y_min_proto(int32_t value);
  public:

  // int32 y_max_proto = 4;
  void clear_y_max_proto();
  int32_t y_max_proto() const;
  void set_y_max_proto(int32_t value);
  private:
  int32_t _internal_y_max_proto() const;
  void _internal_set_y_max_proto(int32_t value);
  public:

  // uint32 instructions_size_proto = 5;
  void clear_instructions_size_proto();
  uint32_t instructions_size_proto() const;
  void set_instructions_size_proto(uint32_t value);
  private:
  uint32_t _internal_instructions_size_proto() const;
  void _internal_set_instructions_size_proto(uint32_t value);
  public:

  // bool overlap_simple_flag_set_proto = 7;
  void clear_overlap_simple_flag_set_proto();
  bool overlap_simple_flag_set_proto() const;
  void set_overlap_simple_flag_set_proto(bool value);
  private:
  bool _internal_overlap_simple_flag_set_proto() const;
  void _internal_set_overlap_simple_flag_set_proto(bool value);
  public:

  // bool have_instructions_proto = 11;
  void clear_have_instructions_proto();
  bool have_instructions_proto() const;
  void set_have_instructions_proto(bool value);
  private:
  bool _internal_have_instructions_proto() const;
  void _internal_set_have_instructions_proto(bool value);
  public:

  // uint32 composite_data_size_proto = 10;
  void clear_composite_data_size_proto();
  uint32_t composite_data_size_proto() const;
  void set_composite_data_size_proto(uint32_t value);
  private:
  uint32_t _internal_composite_data_size_proto() const;
  void _internal_set_composite_data_size_proto(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:GlyphProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ContourVecProto > contours_proto_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr instructions_data_proto_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr composite_data_proto_;
  int32_t x_min_proto_;
  int32_t x_max_proto_;
  int32_t y_min_proto_;
  int32_t y_max_proto_;
  uint32_t instructions_size_proto_;
  bool overlap_simple_flag_set_proto_;
  bool have_instructions_proto_;
  uint32_t composite_data_size_proto_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_woff2_2eproto;
};
// -------------------------------------------------------------------

class RebuildMetadataProto_ChecksumsProtoEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<RebuildMetadataProto_ChecksumsProtoEntry_DoNotUse, 
    uint64_t, uint32_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<RebuildMetadataProto_ChecksumsProtoEntry_DoNotUse, 
    uint64_t, uint32_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32> SuperType;
  RebuildMetadataProto_ChecksumsProtoEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR RebuildMetadataProto_ChecksumsProtoEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit RebuildMetadataProto_ChecksumsProtoEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const RebuildMetadataProto_ChecksumsProtoEntry_DoNotUse& other);
  static const RebuildMetadataProto_ChecksumsProtoEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const RebuildMetadataProto_ChecksumsProtoEntry_DoNotUse*>(&_RebuildMetadataProto_ChecksumsProtoEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_woff2_2eproto;
};

// -------------------------------------------------------------------

class RebuildMetadataProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RebuildMetadataProto) */ {
 public:
  inline RebuildMetadataProto() : RebuildMetadataProto(nullptr) {}
  ~RebuildMetadataProto() override;
  explicit PROTOBUF_CONSTEXPR RebuildMetadataProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RebuildMetadataProto(const RebuildMetadataProto& from);
  RebuildMetadataProto(RebuildMetadataProto&& from) noexcept
    : RebuildMetadataProto() {
    *this = ::std::move(from);
  }

  inline RebuildMetadataProto& operator=(const RebuildMetadataProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline RebuildMetadataProto& operator=(RebuildMetadataProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RebuildMetadataProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const RebuildMetadataProto* internal_default_instance() {
    return reinterpret_cast<const RebuildMetadataProto*>(
               &_RebuildMetadataProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(RebuildMetadataProto& a, RebuildMetadataProto& b) {
    a.Swap(&b);
  }
  inline void Swap(RebuildMetadataProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RebuildMetadataProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RebuildMetadataProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RebuildMetadataProto>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RebuildMetadataProto& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const RebuildMetadataProto& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RebuildMetadataProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RebuildMetadataProto";
  }
  protected:
  explicit RebuildMetadataProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kFontInfosProtoFieldNumber = 2,
    kChecksumsProtoFieldNumber = 3,
    kHeaderChecksumProtoFieldNumber = 1,
  };
  // repeated .WOFF2FontInfoProto font_infos_proto = 2;
  int font_infos_proto_size() const;
  private:
  int _internal_font_infos_proto_size() const;
  public:
  void clear_font_infos_proto();
  ::WOFF2FontInfoProto* mutable_font_infos_proto(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WOFF2FontInfoProto >*
      mutable_font_infos_proto();
  private:
  const ::WOFF2FontInfoProto& _internal_font_infos_proto(int index) const;
  ::WOFF2FontInfoProto* _internal_add_font_infos_proto();
  public:
  const ::WOFF2FontInfoProto& font_infos_proto(int index) const;
  ::WOFF2FontInfoProto* add_font_infos_proto();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WOFF2FontInfoProto >&
      font_infos_proto() const;

  // map<uint64, uint32> checksums_proto = 3;
  int checksums_proto_size() const;
  private:
  int _internal_checksums_proto_size() const;
  public:
  void clear_checksums_proto();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint32_t >&
      _internal_checksums_proto() const;
  ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint32_t >*
      _internal_mutable_checksums_proto();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint32_t >&
      checksums_proto() const;
  ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint32_t >*
      mutable_checksums_proto();

  // uint32 header_checksum_proto = 1;
  void clear_header_checksum_proto();
  uint32_t header_checksum_proto() const;
  void set_header_checksum_proto(uint32_t value);
  private:
  uint32_t _internal_header_checksum_proto() const;
  void _internal_set_header_checksum_proto(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:RebuildMetadataProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WOFF2FontInfoProto > font_infos_proto_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      RebuildMetadataProto_ChecksumsProtoEntry_DoNotUse,
      uint64_t, uint32_t,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32> checksums_proto_;
  uint32_t header_checksum_proto_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_woff2_2eproto;
};
// -------------------------------------------------------------------

class FontProto_TablesProtoEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<FontProto_TablesProtoEntry_DoNotUse, 
    uint32_t, ::FontTableProto,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<FontProto_TablesProtoEntry_DoNotUse, 
    uint32_t, ::FontTableProto,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  FontProto_TablesProtoEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR FontProto_TablesProtoEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit FontProto_TablesProtoEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const FontProto_TablesProtoEntry_DoNotUse& other);
  static const FontProto_TablesProtoEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const FontProto_TablesProtoEntry_DoNotUse*>(&_FontProto_TablesProtoEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_woff2_2eproto;
};

// -------------------------------------------------------------------

class FontProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:FontProto) */ {
 public:
  inline FontProto() : FontProto(nullptr) {}
  ~FontProto() override;
  explicit PROTOBUF_CONSTEXPR FontProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FontProto(const FontProto& from);
  FontProto(FontProto&& from) noexcept
    : FontProto() {
    *this = ::std::move(from);
  }

  inline FontProto& operator=(const FontProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline FontProto& operator=(FontProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FontProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const FontProto* internal_default_instance() {
    return reinterpret_cast<const FontProto*>(
               &_FontProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(FontProto& a, FontProto& b) {
    a.Swap(&b);
  }
  inline void Swap(FontProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FontProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FontProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FontProto>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const FontProto& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const FontProto& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FontProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "FontProto";
  }
  protected:
  explicit FontProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kTablesProtoFieldNumber = 3,
    kFlavorProtoFieldNumber = 1,
    kNumTablesProtoFieldNumber = 2,
  };
  // map<uint32, .FontTableProto> tables_proto = 3;
  int tables_proto_size() const;
  private:
  int _internal_tables_proto_size() const;
  public:
  void clear_tables_proto();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, ::FontTableProto >&
      _internal_tables_proto() const;
  ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, ::FontTableProto >*
      _internal_mutable_tables_proto();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, ::FontTableProto >&
      tables_proto() const;
  ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, ::FontTableProto >*
      mutable_tables_proto();

  // uint32 flavor_proto = 1;
  void clear_flavor_proto();
  uint32_t flavor_proto() const;
  void set_flavor_proto(uint32_t value);
  private:
  uint32_t _internal_flavor_proto() const;
  void _internal_set_flavor_proto(uint32_t value);
  public:

  // uint32 num_tables_proto = 2;
  void clear_num_tables_proto();
  uint32_t num_tables_proto() const;
  void set_num_tables_proto(uint32_t value);
  private:
  uint32_t _internal_num_tables_proto() const;
  void _internal_set_num_tables_proto(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:FontProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      FontProto_TablesProtoEntry_DoNotUse,
      uint32_t, ::FontTableProto,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> tables_proto_;
  uint32_t flavor_proto_;
  uint32_t num_tables_proto_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_woff2_2eproto;
};
// -------------------------------------------------------------------

class PointProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PointProto) */ {
 public:
  inline PointProto() : PointProto(nullptr) {}
  ~PointProto() override;
  explicit PROTOBUF_CONSTEXPR PointProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PointProto(const PointProto& from);
  PointProto(PointProto&& from) noexcept
    : PointProto() {
    *this = ::std::move(from);
  }

  inline PointProto& operator=(const PointProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline PointProto& operator=(PointProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PointProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const PointProto* internal_default_instance() {
    return reinterpret_cast<const PointProto*>(
               &_PointProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(PointProto& a, PointProto& b) {
    a.Swap(&b);
  }
  inline void Swap(PointProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PointProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PointProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PointProto>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PointProto& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PointProto& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PointProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PointProto";
  }
  protected:
  explicit PointProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXProtoFieldNumber = 1,
    kYProtoFieldNumber = 2,
    kOnCurveProtoFieldNumber = 3,
  };
  // int32 x_proto = 1;
  void clear_x_proto();
  int32_t x_proto() const;
  void set_x_proto(int32_t value);
  private:
  int32_t _internal_x_proto() const;
  void _internal_set_x_proto(int32_t value);
  public:

  // int32 y_proto = 2;
  void clear_y_proto();
  int32_t y_proto() const;
  void set_y_proto(int32_t value);
  private:
  int32_t _internal_y_proto() const;
  void _internal_set_y_proto(int32_t value);
  public:

  // bool on_curve_proto = 3;
  void clear_on_curve_proto();
  bool on_curve_proto() const;
  void set_on_curve_proto(bool value);
  private:
  bool _internal_on_curve_proto() const;
  void _internal_set_on_curve_proto(bool value);
  public:

  // @@protoc_insertion_point(class_scope:PointProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t x_proto_;
  int32_t y_proto_;
  bool on_curve_proto_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_woff2_2eproto;
};
// -------------------------------------------------------------------

class TtcFontProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TtcFontProto) */ {
 public:
  inline TtcFontProto() : TtcFontProto(nullptr) {}
  ~TtcFontProto() override;
  explicit PROTOBUF_CONSTEXPR TtcFontProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TtcFontProto(const TtcFontProto& from);
  TtcFontProto(TtcFontProto&& from) noexcept
    : TtcFontProto() {
    *this = ::std::move(from);
  }

  inline TtcFontProto& operator=(const TtcFontProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline TtcFontProto& operator=(TtcFontProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TtcFontProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const TtcFontProto* internal_default_instance() {
    return reinterpret_cast<const TtcFontProto*>(
               &_TtcFontProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(TtcFontProto& a, TtcFontProto& b) {
    a.Swap(&b);
  }
  inline void Swap(TtcFontProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TtcFontProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TtcFontProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TtcFontProto>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TtcFontProto& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const TtcFontProto& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TtcFontProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TtcFontProto";
  }
  protected:
  explicit TtcFontProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTableIndicesProtoFieldNumber = 4,
    kFlavorProtoFieldNumber = 1,
    kDstOffsetProtoFieldNumber = 2,
    kHeaderChecksumProtoFieldNumber = 3,
  };
  // repeated uint32 table_indices_proto = 4;
  int table_indices_proto_size() const;
  private:
  int _internal_table_indices_proto_size() const;
  public:
  void clear_table_indices_proto();
  private:
  uint32_t _internal_table_indices_proto(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_table_indices_proto() const;
  void _internal_add_table_indices_proto(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_table_indices_proto();
  public:
  uint32_t table_indices_proto(int index) const;
  void set_table_indices_proto(int index, uint32_t value);
  void add_table_indices_proto(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      table_indices_proto() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_table_indices_proto();

  // uint32 flavor_proto = 1;
  void clear_flavor_proto();
  uint32_t flavor_proto() const;
  void set_flavor_proto(uint32_t value);
  private:
  uint32_t _internal_flavor_proto() const;
  void _internal_set_flavor_proto(uint32_t value);
  public:

  // uint32 dst_offset_proto = 2;
  void clear_dst_offset_proto();
  uint32_t dst_offset_proto() const;
  void set_dst_offset_proto(uint32_t value);
  private:
  uint32_t _internal_dst_offset_proto() const;
  void _internal_set_dst_offset_proto(uint32_t value);
  public:

  // uint32 header_checksum_proto = 3;
  void clear_header_checksum_proto();
  uint32_t header_checksum_proto() const;
  void set_header_checksum_proto(uint32_t value);
  private:
  uint32_t _internal_header_checksum_proto() const;
  void _internal_set_header_checksum_proto(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:TtcFontProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > table_indices_proto_;
  mutable std::atomic<int> _table_indices_proto_cached_byte_size_;
  uint32_t flavor_proto_;
  uint32_t dst_offset_proto_;
  uint32_t header_checksum_proto_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_woff2_2eproto;
};
// -------------------------------------------------------------------

class BufferProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:BufferProto) */ {
 public:
  inline BufferProto() : BufferProto(nullptr) {}
  ~BufferProto() override;
  explicit PROTOBUF_CONSTEXPR BufferProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BufferProto(const BufferProto& from);
  BufferProto(BufferProto&& from) noexcept
    : BufferProto() {
    *this = ::std::move(from);
  }

  inline BufferProto& operator=(const BufferProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline BufferProto& operator=(BufferProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BufferProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const BufferProto* internal_default_instance() {
    return reinterpret_cast<const BufferProto*>(
               &_BufferProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(BufferProto& a, BufferProto& b) {
    a.Swap(&b);
  }
  inline void Swap(BufferProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BufferProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BufferProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BufferProto>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BufferProto& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const BufferProto& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BufferProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "BufferProto";
  }
  protected:
  explicit BufferProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBufferProtoFieldNumber = 1,
    kLengthProtoFieldNumber = 2,
    kOffsetProtoFieldNumber = 3,
  };
  // bytes buffer_proto = 1;
  void clear_buffer_proto();
  const std::string& buffer_proto() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_buffer_proto(ArgT0&& arg0, ArgT... args);
  std::string* mutable_buffer_proto();
  PROTOBUF_NODISCARD std::string* release_buffer_proto();
  void set_allocated_buffer_proto(std::string* buffer_proto);
  private:
  const std::string& _internal_buffer_proto() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_buffer_proto(const std::string& value);
  std::string* _internal_mutable_buffer_proto();
  public:

  // uint64 length_proto = 2;
  void clear_length_proto();
  uint64_t length_proto() const;
  void set_length_proto(uint64_t value);
  private:
  uint64_t _internal_length_proto() const;
  void _internal_set_length_proto(uint64_t value);
  public:

  // uint64 offset_proto = 3;
  void clear_offset_proto();
  uint64_t offset_proto() const;
  void set_offset_proto(uint64_t value);
  private:
  uint64_t _internal_offset_proto() const;
  void _internal_set_offset_proto(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:BufferProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr buffer_proto_;
  uint64_t length_proto_;
  uint64_t offset_proto_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_woff2_2eproto;
};
// -------------------------------------------------------------------

class WOFF2FontInfoProto_TableEntryByTagProtoEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<WOFF2FontInfoProto_TableEntryByTagProtoEntry_DoNotUse, 
    uint32_t, uint32_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<WOFF2FontInfoProto_TableEntryByTagProtoEntry_DoNotUse, 
    uint32_t, uint32_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32> SuperType;
  WOFF2FontInfoProto_TableEntryByTagProtoEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR WOFF2FontInfoProto_TableEntryByTagProtoEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit WOFF2FontInfoProto_TableEntryByTagProtoEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const WOFF2FontInfoProto_TableEntryByTagProtoEntry_DoNotUse& other);
  static const WOFF2FontInfoProto_TableEntryByTagProtoEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const WOFF2FontInfoProto_TableEntryByTagProtoEntry_DoNotUse*>(&_WOFF2FontInfoProto_TableEntryByTagProtoEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_woff2_2eproto;
};

// -------------------------------------------------------------------

class WOFF2FontInfoProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:WOFF2FontInfoProto) */ {
 public:
  inline WOFF2FontInfoProto() : WOFF2FontInfoProto(nullptr) {}
  ~WOFF2FontInfoProto() override;
  explicit PROTOBUF_CONSTEXPR WOFF2FontInfoProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  WOFF2FontInfoProto(const WOFF2FontInfoProto& from);
  WOFF2FontInfoProto(WOFF2FontInfoProto&& from) noexcept
    : WOFF2FontInfoProto() {
    *this = ::std::move(from);
  }

  inline WOFF2FontInfoProto& operator=(const WOFF2FontInfoProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline WOFF2FontInfoProto& operator=(WOFF2FontInfoProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WOFF2FontInfoProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const WOFF2FontInfoProto* internal_default_instance() {
    return reinterpret_cast<const WOFF2FontInfoProto*>(
               &_WOFF2FontInfoProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(WOFF2FontInfoProto& a, WOFF2FontInfoProto& b) {
    a.Swap(&b);
  }
  inline void Swap(WOFF2FontInfoProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WOFF2FontInfoProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WOFF2FontInfoProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WOFF2FontInfoProto>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const WOFF2FontInfoProto& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const WOFF2FontInfoProto& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WOFF2FontInfoProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "WOFF2FontInfoProto";
  }
  protected:
  explicit WOFF2FontInfoProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kXMinsProtoFieldNumber = 4,
    kTableEntryByTagProtoFieldNumber = 5,
    kNumGlyphsProtoFieldNumber = 1,
    kIndexFormatProtoFieldNumber = 2,
    kNumHmetricsProtoFieldNumber = 3,
  };
  // repeated int32 x_mins_proto = 4;
  int x_mins_proto_size() const;
  private:
  int _internal_x_mins_proto_size() const;
  public:
  void clear_x_mins_proto();
  private:
  int32_t _internal_x_mins_proto(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_x_mins_proto() const;
  void _internal_add_x_mins_proto(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_x_mins_proto();
  public:
  int32_t x_mins_proto(int index) const;
  void set_x_mins_proto(int index, int32_t value);
  void add_x_mins_proto(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      x_mins_proto() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_x_mins_proto();

  // map<uint32, uint32> table_entry_by_tag_proto = 5;
  int table_entry_by_tag_proto_size() const;
  private:
  int _internal_table_entry_by_tag_proto_size() const;
  public:
  void clear_table_entry_by_tag_proto();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >&
      _internal_table_entry_by_tag_proto() const;
  ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >*
      _internal_mutable_table_entry_by_tag_proto();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >&
      table_entry_by_tag_proto() const;
  ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >*
      mutable_table_entry_by_tag_proto();

  // uint32 num_glyphs_proto = 1;
  void clear_num_glyphs_proto();
  uint32_t num_glyphs_proto() const;
  void set_num_glyphs_proto(uint32_t value);
  private:
  uint32_t _internal_num_glyphs_proto() const;
  void _internal_set_num_glyphs_proto(uint32_t value);
  public:

  // uint32 index_format_proto = 2;
  void clear_index_format_proto();
  uint32_t index_format_proto() const;
  void set_index_format_proto(uint32_t value);
  private:
  uint32_t _internal_index_format_proto() const;
  void _internal_set_index_format_proto(uint32_t value);
  public:

  // uint32 num_hmetrics_proto = 3;
  void clear_num_hmetrics_proto();
  uint32_t num_hmetrics_proto() const;
  void set_num_hmetrics_proto(uint32_t value);
  private:
  uint32_t _internal_num_hmetrics_proto() const;
  void _internal_set_num_hmetrics_proto(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:WOFF2FontInfoProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > x_mins_proto_;
  mutable std::atomic<int> _x_mins_proto_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      WOFF2FontInfoProto_TableEntryByTagProtoEntry_DoNotUse,
      uint32_t, uint32_t,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32> table_entry_by_tag_proto_;
  uint32_t num_glyphs_proto_;
  uint32_t index_format_proto_;
  uint32_t num_hmetrics_proto_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_woff2_2eproto;
};
// -------------------------------------------------------------------

class FontTableProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:FontTableProto) */ {
 public:
  inline FontTableProto() : FontTableProto(nullptr) {}
  ~FontTableProto() override;
  explicit PROTOBUF_CONSTEXPR FontTableProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FontTableProto(const FontTableProto& from);
  FontTableProto(FontTableProto&& from) noexcept
    : FontTableProto() {
    *this = ::std::move(from);
  }

  inline FontTableProto& operator=(const FontTableProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline FontTableProto& operator=(FontTableProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FontTableProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const FontTableProto* internal_default_instance() {
    return reinterpret_cast<const FontTableProto*>(
               &_FontTableProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(FontTableProto& a, FontTableProto& b) {
    a.Swap(&b);
  }
  inline void Swap(FontTableProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FontTableProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FontTableProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FontTableProto>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const FontTableProto& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const FontTableProto& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FontTableProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "FontTableProto";
  }
  protected:
  explicit FontTableProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBufferProtoFieldNumber = 6,
    kDataProtoFieldNumber = 5,
    kReuseOfProtoFieldNumber = 7,
    kTagProtoFieldNumber = 1,
    kChecksumProtoFieldNumber = 2,
    kOffsetProtoFieldNumber = 3,
    kLengthProtoFieldNumber = 4,
    kFlagByteProtoFieldNumber = 8,
  };
  // repeated uint32 buffer_proto = 6;
  int buffer_proto_size() const;
  private:
  int _internal_buffer_proto_size() const;
  public:
  void clear_buffer_proto();
  private:
  uint32_t _internal_buffer_proto(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_buffer_proto() const;
  void _internal_add_buffer_proto(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_buffer_proto();
  public:
  uint32_t buffer_proto(int index) const;
  void set_buffer_proto(int index, uint32_t value);
  void add_buffer_proto(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      buffer_proto() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_buffer_proto();

  // bytes data_proto = 5;
  void clear_data_proto();
  const std::string& data_proto() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_data_proto(ArgT0&& arg0, ArgT... args);
  std::string* mutable_data_proto();
  PROTOBUF_NODISCARD std::string* release_data_proto();
  void set_allocated_data_proto(std::string* data_proto);
  private:
  const std::string& _internal_data_proto() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data_proto(const std::string& value);
  std::string* _internal_mutable_data_proto();
  public:

  // .FontTableProto reuse_of_proto = 7;
  bool has_reuse_of_proto() const;
  private:
  bool _internal_has_reuse_of_proto() const;
  public:
  void clear_reuse_of_proto();
  const ::FontTableProto& reuse_of_proto() const;
  PROTOBUF_NODISCARD ::FontTableProto* release_reuse_of_proto();
  ::FontTableProto* mutable_reuse_of_proto();
  void set_allocated_reuse_of_proto(::FontTableProto* reuse_of_proto);
  private:
  const ::FontTableProto& _internal_reuse_of_proto() const;
  ::FontTableProto* _internal_mutable_reuse_of_proto();
  public:
  void unsafe_arena_set_allocated_reuse_of_proto(
      ::FontTableProto* reuse_of_proto);
  ::FontTableProto* unsafe_arena_release_reuse_of_proto();

  // uint32 tag_proto = 1;
  void clear_tag_proto();
  uint32_t tag_proto() const;
  void set_tag_proto(uint32_t value);
  private:
  uint32_t _internal_tag_proto() const;
  void _internal_set_tag_proto(uint32_t value);
  public:

  // uint32 checksum_proto = 2;
  void clear_checksum_proto();
  uint32_t checksum_proto() const;
  void set_checksum_proto(uint32_t value);
  private:
  uint32_t _internal_checksum_proto() const;
  void _internal_set_checksum_proto(uint32_t value);
  public:

  // uint32 offset_proto = 3;
  void clear_offset_proto();
  uint32_t offset_proto() const;
  void set_offset_proto(uint32_t value);
  private:
  uint32_t _internal_offset_proto() const;
  void _internal_set_offset_proto(uint32_t value);
  public:

  // uint32 length_proto = 4;
  void clear_length_proto();
  uint32_t length_proto() const;
  void set_length_proto(uint32_t value);
  private:
  uint32_t _internal_length_proto() const;
  void _internal_set_length_proto(uint32_t value);
  public:

  // uint32 flag_byte_proto = 8;
  void clear_flag_byte_proto();
  uint32_t flag_byte_proto() const;
  void set_flag_byte_proto(uint32_t value);
  private:
  uint32_t _internal_flag_byte_proto() const;
  void _internal_set_flag_byte_proto(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:FontTableProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > buffer_proto_;
  mutable std::atomic<int> _buffer_proto_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_proto_;
  ::FontTableProto* reuse_of_proto_;
  uint32_t tag_proto_;
  uint32_t checksum_proto_;
  uint32_t offset_proto_;
  uint32_t length_proto_;
  uint32_t flag_byte_proto_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_woff2_2eproto;
};
// -------------------------------------------------------------------

class GlyphPointProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GlyphPointProto) */ {
 public:
  inline GlyphPointProto() : GlyphPointProto(nullptr) {}
  ~GlyphPointProto() override;
  explicit PROTOBUF_CONSTEXPR GlyphPointProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GlyphPointProto(const GlyphPointProto& from);
  GlyphPointProto(GlyphPointProto&& from) noexcept
    : GlyphPointProto() {
    *this = ::std::move(from);
  }

  inline GlyphPointProto& operator=(const GlyphPointProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline GlyphPointProto& operator=(GlyphPointProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GlyphPointProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const GlyphPointProto* internal_default_instance() {
    return reinterpret_cast<const GlyphPointProto*>(
               &_GlyphPointProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(GlyphPointProto& a, GlyphPointProto& b) {
    a.Swap(&b);
  }
  inline void Swap(GlyphPointProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GlyphPointProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GlyphPointProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GlyphPointProto>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GlyphPointProto& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GlyphPointProto& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GlyphPointProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GlyphPointProto";
  }
  protected:
  explicit GlyphPointProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXProtoFieldNumber = 1,
    kYProtoFieldNumber = 2,
    kOnCurveProtoFieldNumber = 3,
  };
  // int32 x_proto = 1;
  void clear_x_proto();
  int32_t x_proto() const;
  void set_x_proto(int32_t value);
  private:
  int32_t _internal_x_proto() const;
  void _internal_set_x_proto(int32_t value);
  public:

  // int32 y_proto = 2;
  void clear_y_proto();
  int32_t y_proto() const;
  void set_y_proto(int32_t value);
  private:
  int32_t _internal_y_proto() const;
  void _internal_set_y_proto(int32_t value);
  public:

  // bool on_curve_proto = 3;
  void clear_on_curve_proto();
  bool on_curve_proto() const;
  void set_on_curve_proto(bool value);
  private:
  bool _internal_on_curve_proto() const;
  void _internal_set_on_curve_proto(bool value);
  public:

  // @@protoc_insertion_point(class_scope:GlyphPointProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t x_proto_;
  int32_t y_proto_;
  bool on_curve_proto_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_woff2_2eproto;
};
// -------------------------------------------------------------------

class WOFF2HeaderProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:WOFF2HeaderProto) */ {
 public:
  inline WOFF2HeaderProto() : WOFF2HeaderProto(nullptr) {}
  ~WOFF2HeaderProto() override;
  explicit PROTOBUF_CONSTEXPR WOFF2HeaderProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  WOFF2HeaderProto(const WOFF2HeaderProto& from);
  WOFF2HeaderProto(WOFF2HeaderProto&& from) noexcept
    : WOFF2HeaderProto() {
    *this = ::std::move(from);
  }

  inline WOFF2HeaderProto& operator=(const WOFF2HeaderProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline WOFF2HeaderProto& operator=(WOFF2HeaderProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WOFF2HeaderProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const WOFF2HeaderProto* internal_default_instance() {
    return reinterpret_cast<const WOFF2HeaderProto*>(
               &_WOFF2HeaderProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(WOFF2HeaderProto& a, WOFF2HeaderProto& b) {
    a.Swap(&b);
  }
  inline void Swap(WOFF2HeaderProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WOFF2HeaderProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WOFF2HeaderProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WOFF2HeaderProto>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const WOFF2HeaderProto& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const WOFF2HeaderProto& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WOFF2HeaderProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "WOFF2HeaderProto";
  }
  protected:
  explicit WOFF2HeaderProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTablesProtoFieldNumber = 7,
    kTtcFontsProtoFieldNumber = 8,
    kFlavorProtoFieldNumber = 1,
    kHeaderVersionProtoFieldNumber = 2,
    kCompressedOffsetProtoFieldNumber = 4,
    kNumTablesProtoFieldNumber = 3,
    kCompressedLengthProtoFieldNumber = 5,
    kUncompressedSizeProtoFieldNumber = 6,
  };
  // repeated .TableProto tables_proto = 7;
  int tables_proto_size() const;
  private:
  int _internal_tables_proto_size() const;
  public:
  void clear_tables_proto();
  ::TableProto* mutable_tables_proto(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TableProto >*
      mutable_tables_proto();
  private:
  const ::TableProto& _internal_tables_proto(int index) const;
  ::TableProto* _internal_add_tables_proto();
  public:
  const ::TableProto& tables_proto(int index) const;
  ::TableProto* add_tables_proto();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TableProto >&
      tables_proto() const;

  // repeated .TtcFontProto ttc_fonts_proto = 8;
  int ttc_fonts_proto_size() const;
  private:
  int _internal_ttc_fonts_proto_size() const;
  public:
  void clear_ttc_fonts_proto();
  ::TtcFontProto* mutable_ttc_fonts_proto(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TtcFontProto >*
      mutable_ttc_fonts_proto();
  private:
  const ::TtcFontProto& _internal_ttc_fonts_proto(int index) const;
  ::TtcFontProto* _internal_add_ttc_fonts_proto();
  public:
  const ::TtcFontProto& ttc_fonts_proto(int index) const;
  ::TtcFontProto* add_ttc_fonts_proto();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TtcFontProto >&
      ttc_fonts_proto() const;

  // uint32 flavor_proto = 1;
  void clear_flavor_proto();
  uint32_t flavor_proto() const;
  void set_flavor_proto(uint32_t value);
  private:
  uint32_t _internal_flavor_proto() const;
  void _internal_set_flavor_proto(uint32_t value);
  public:

  // uint32 header_version_proto = 2;
  void clear_header_version_proto();
  uint32_t header_version_proto() const;
  void set_header_version_proto(uint32_t value);
  private:
  uint32_t _internal_header_version_proto() const;
  void _internal_set_header_version_proto(uint32_t value);
  public:

  // uint64 compressed_offset_proto = 4;
  void clear_compressed_offset_proto();
  uint64_t compressed_offset_proto() const;
  void set_compressed_offset_proto(uint64_t value);
  private:
  uint64_t _internal_compressed_offset_proto() const;
  void _internal_set_compressed_offset_proto(uint64_t value);
  public:

  // uint32 num_tables_proto = 3;
  void clear_num_tables_proto();
  uint32_t num_tables_proto() const;
  void set_num_tables_proto(uint32_t value);
  private:
  uint32_t _internal_num_tables_proto() const;
  void _internal_set_num_tables_proto(uint32_t value);
  public:

  // uint32 compressed_length_proto = 5;
  void clear_compressed_length_proto();
  uint32_t compressed_length_proto() const;
  void set_compressed_length_proto(uint32_t value);
  private:
  uint32_t _internal_compressed_length_proto() const;
  void _internal_set_compressed_length_proto(uint32_t value);
  public:

  // uint32 uncompressed_size_proto = 6;
  void clear_uncompressed_size_proto();
  uint32_t uncompressed_size_proto() const;
  void set_uncompressed_size_proto(uint32_t value);
  private:
  uint32_t _internal_uncompressed_size_proto() const;
  void _internal_set_uncompressed_size_proto(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:WOFF2HeaderProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TableProto > tables_proto_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TtcFontProto > ttc_fonts_proto_;
  uint32_t flavor_proto_;
  uint32_t header_version_proto_;
  uint64_t compressed_offset_proto_;
  uint32_t num_tables_proto_;
  uint32_t compressed_length_proto_;
  uint32_t uncompressed_size_proto_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_woff2_2eproto;
};
// -------------------------------------------------------------------

class TableProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TableProto) */ {
 public:
  inline TableProto() : TableProto(nullptr) {}
  ~TableProto() override;
  explicit PROTOBUF_CONSTEXPR TableProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TableProto(const TableProto& from);
  TableProto(TableProto&& from) noexcept
    : TableProto() {
    *this = ::std::move(from);
  }

  inline TableProto& operator=(const TableProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline TableProto& operator=(TableProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TableProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const TableProto* internal_default_instance() {
    return reinterpret_cast<const TableProto*>(
               &_TableProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(TableProto& a, TableProto& b) {
    a.Swap(&b);
  }
  inline void Swap(TableProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TableProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TableProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TableProto>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TableProto& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const TableProto& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TableProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TableProto";
  }
  protected:
  explicit TableProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDstDataProtoFieldNumber = 8,
    kTagProtoFieldNumber = 1,
    kFlagsProtoFieldNumber = 2,
    kSrcOffsetProtoFieldNumber = 3,
    kSrcLengthProtoFieldNumber = 4,
    kTransformLengthProtoFieldNumber = 5,
    kDstOffsetProtoFieldNumber = 6,
    kDstLengthProtoFieldNumber = 7,
  };
  // bytes dst_data_proto = 8;
  void clear_dst_data_proto();
  const std::string& dst_data_proto() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_dst_data_proto(ArgT0&& arg0, ArgT... args);
  std::string* mutable_dst_data_proto();
  PROTOBUF_NODISCARD std::string* release_dst_data_proto();
  void set_allocated_dst_data_proto(std::string* dst_data_proto);
  private:
  const std::string& _internal_dst_data_proto() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dst_data_proto(const std::string& value);
  std::string* _internal_mutable_dst_data_proto();
  public:

  // uint32 tag_proto = 1;
  void clear_tag_proto();
  uint32_t tag_proto() const;
  void set_tag_proto(uint32_t value);
  private:
  uint32_t _internal_tag_proto() const;
  void _internal_set_tag_proto(uint32_t value);
  public:

  // uint32 flags_proto = 2;
  void clear_flags_proto();
  uint32_t flags_proto() const;
  void set_flags_proto(uint32_t value);
  private:
  uint32_t _internal_flags_proto() const;
  void _internal_set_flags_proto(uint32_t value);
  public:

  // uint32 src_offset_proto = 3;
  void clear_src_offset_proto();
  uint32_t src_offset_proto() const;
  void set_src_offset_proto(uint32_t value);
  private:
  uint32_t _internal_src_offset_proto() const;
  void _internal_set_src_offset_proto(uint32_t value);
  public:

  // uint32 src_length_proto = 4;
  void clear_src_length_proto();
  uint32_t src_length_proto() const;
  void set_src_length_proto(uint32_t value);
  private:
  uint32_t _internal_src_length_proto() const;
  void _internal_set_src_length_proto(uint32_t value);
  public:

  // uint32 transform_length_proto = 5;
  void clear_transform_length_proto();
  uint32_t transform_length_proto() const;
  void set_transform_length_proto(uint32_t value);
  private:
  uint32_t _internal_transform_length_proto() const;
  void _internal_set_transform_length_proto(uint32_t value);
  public:

  // uint32 dst_offset_proto = 6;
  void clear_dst_offset_proto();
  uint32_t dst_offset_proto() const;
  void set_dst_offset_proto(uint32_t value);
  private:
  uint32_t _internal_dst_offset_proto() const;
  void _internal_set_dst_offset_proto(uint32_t value);
  public:

  // uint32 dst_length_proto = 7;
  void clear_dst_length_proto();
  uint32_t dst_length_proto() const;
  void set_dst_length_proto(uint32_t value);
  private:
  uint32_t _internal_dst_length_proto() const;
  void _internal_set_dst_length_proto(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:TableProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dst_data_proto_;
  uint32_t tag_proto_;
  uint32_t flags_proto_;
  uint32_t src_offset_proto_;
  uint32_t src_length_proto_;
  uint32_t transform_length_proto_;
  uint32_t dst_offset_proto_;
  uint32_t dst_length_proto_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_woff2_2eproto;
};
// -------------------------------------------------------------------

class GlyfEncoderProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GlyfEncoderProto) */ {
 public:
  inline GlyfEncoderProto() : GlyfEncoderProto(nullptr) {}
  ~GlyfEncoderProto() override;
  explicit PROTOBUF_CONSTEXPR GlyfEncoderProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GlyfEncoderProto(const GlyfEncoderProto& from);
  GlyfEncoderProto(GlyfEncoderProto&& from) noexcept
    : GlyfEncoderProto() {
    *this = ::std::move(from);
  }

  inline GlyfEncoderProto& operator=(const GlyfEncoderProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline GlyfEncoderProto& operator=(GlyfEncoderProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GlyfEncoderProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const GlyfEncoderProto* internal_default_instance() {
    return reinterpret_cast<const GlyfEncoderProto*>(
               &_GlyfEncoderProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(GlyfEncoderProto& a, GlyfEncoderProto& b) {
    a.Swap(&b);
  }
  inline void Swap(GlyfEncoderProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GlyfEncoderProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GlyfEncoderProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GlyfEncoderProto>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GlyfEncoderProto& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GlyfEncoderProto& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GlyfEncoderProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GlyfEncoderProto";
  }
  protected:
  explicit GlyfEncoderProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNContourStreamProtoFieldNumber = 1,
    kNPointsStreamProtoFieldNumber = 2,
    kFlagByteStreamProtoFieldNumber = 3,
    kCompositeStreamProtoFieldNumber = 4,
    kBboxBitmapProtoFieldNumber = 5,
    kBboxStreamProtoFieldNumber = 6,
    kGlyphStreamProtoFieldNumber = 7,
    kInstructionStreamProtoFieldNumber = 8,
    kOverlapBitmapProtoFieldNumber = 9,
    kNGlyphsProtoFieldNumber = 10,
  };
  // repeated uint32 n_contour_stream_proto = 1;
  int n_contour_stream_proto_size() const;
  private:
  int _internal_n_contour_stream_proto_size() const;
  public:
  void clear_n_contour_stream_proto();
  private:
  uint32_t _internal_n_contour_stream_proto(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_n_contour_stream_proto() const;
  void _internal_add_n_contour_stream_proto(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_n_contour_stream_proto();
  public:
  uint32_t n_contour_stream_proto(int index) const;
  void set_n_contour_stream_proto(int index, uint32_t value);
  void add_n_contour_stream_proto(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      n_contour_stream_proto() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_n_contour_stream_proto();

  // repeated uint32 n_points_stream_proto = 2;
  int n_points_stream_proto_size() const;
  private:
  int _internal_n_points_stream_proto_size() const;
  public:
  void clear_n_points_stream_proto();
  private:
  uint32_t _internal_n_points_stream_proto(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_n_points_stream_proto() const;
  void _internal_add_n_points_stream_proto(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_n_points_stream_proto();
  public:
  uint32_t n_points_stream_proto(int index) const;
  void set_n_points_stream_proto(int index, uint32_t value);
  void add_n_points_stream_proto(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      n_points_stream_proto() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_n_points_stream_proto();

  // repeated uint32 flag_byte_stream_proto = 3;
  int flag_byte_stream_proto_size() const;
  private:
  int _internal_flag_byte_stream_proto_size() const;
  public:
  void clear_flag_byte_stream_proto();
  private:
  uint32_t _internal_flag_byte_stream_proto(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_flag_byte_stream_proto() const;
  void _internal_add_flag_byte_stream_proto(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_flag_byte_stream_proto();
  public:
  uint32_t flag_byte_stream_proto(int index) const;
  void set_flag_byte_stream_proto(int index, uint32_t value);
  void add_flag_byte_stream_proto(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      flag_byte_stream_proto() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_flag_byte_stream_proto();

  // repeated uint32 composite_stream_proto = 4;
  int composite_stream_proto_size() const;
  private:
  int _internal_composite_stream_proto_size() const;
  public:
  void clear_composite_stream_proto();
  private:
  uint32_t _internal_composite_stream_proto(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_composite_stream_proto() const;
  void _internal_add_composite_stream_proto(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_composite_stream_proto();
  public:
  uint32_t composite_stream_proto(int index) const;
  void set_composite_stream_proto(int index, uint32_t value);
  void add_composite_stream_proto(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      composite_stream_proto() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_composite_stream_proto();

  // repeated uint32 bbox_bitmap_proto = 5;
  int bbox_bitmap_proto_size() const;
  private:
  int _internal_bbox_bitmap_proto_size() const;
  public:
  void clear_bbox_bitmap_proto();
  private:
  uint32_t _internal_bbox_bitmap_proto(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_bbox_bitmap_proto() const;
  void _internal_add_bbox_bitmap_proto(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_bbox_bitmap_proto();
  public:
  uint32_t bbox_bitmap_proto(int index) const;
  void set_bbox_bitmap_proto(int index, uint32_t value);
  void add_bbox_bitmap_proto(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      bbox_bitmap_proto() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_bbox_bitmap_proto();

  // repeated uint32 bbox_stream_proto = 6;
  int bbox_stream_proto_size() const;
  private:
  int _internal_bbox_stream_proto_size() const;
  public:
  void clear_bbox_stream_proto();
  private:
  uint32_t _internal_bbox_stream_proto(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_bbox_stream_proto() const;
  void _internal_add_bbox_stream_proto(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_bbox_stream_proto();
  public:
  uint32_t bbox_stream_proto(int index) const;
  void set_bbox_stream_proto(int index, uint32_t value);
  void add_bbox_stream_proto(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      bbox_stream_proto() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_bbox_stream_proto();

  // repeated uint32 glyph_stream_proto = 7;
  int glyph_stream_proto_size() const;
  private:
  int _internal_glyph_stream_proto_size() const;
  public:
  void clear_glyph_stream_proto();
  private:
  uint32_t _internal_glyph_stream_proto(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_glyph_stream_proto() const;
  void _internal_add_glyph_stream_proto(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_glyph_stream_proto();
  public:
  uint32_t glyph_stream_proto(int index) const;
  void set_glyph_stream_proto(int index, uint32_t value);
  void add_glyph_stream_proto(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      glyph_stream_proto() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_glyph_stream_proto();

  // repeated uint32 instruction_stream_proto = 8;
  int instruction_stream_proto_size() const;
  private:
  int _internal_instruction_stream_proto_size() const;
  public:
  void clear_instruction_stream_proto();
  private:
  uint32_t _internal_instruction_stream_proto(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_instruction_stream_proto() const;
  void _internal_add_instruction_stream_proto(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_instruction_stream_proto();
  public:
  uint32_t instruction_stream_proto(int index) const;
  void set_instruction_stream_proto(int index, uint32_t value);
  void add_instruction_stream_proto(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      instruction_stream_proto() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_instruction_stream_proto();

  // repeated uint32 overlap_bitmap_proto = 9;
  int overlap_bitmap_proto_size() const;
  private:
  int _internal_overlap_bitmap_proto_size() const;
  public:
  void clear_overlap_bitmap_proto();
  private:
  uint32_t _internal_overlap_bitmap_proto(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_overlap_bitmap_proto() const;
  void _internal_add_overlap_bitmap_proto(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_overlap_bitmap_proto();
  public:
  uint32_t overlap_bitmap_proto(int index) const;
  void set_overlap_bitmap_proto(int index, uint32_t value);
  void add_overlap_bitmap_proto(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      overlap_bitmap_proto() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_overlap_bitmap_proto();

  // int32 n_glyphs_proto = 10;
  void clear_n_glyphs_proto();
  int32_t n_glyphs_proto() const;
  void set_n_glyphs_proto(int32_t value);
  private:
  int32_t _internal_n_glyphs_proto() const;
  void _internal_set_n_glyphs_proto(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:GlyfEncoderProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > n_contour_stream_proto_;
  mutable std::atomic<int> _n_contour_stream_proto_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > n_points_stream_proto_;
  mutable std::atomic<int> _n_points_stream_proto_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > flag_byte_stream_proto_;
  mutable std::atomic<int> _flag_byte_stream_proto_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > composite_stream_proto_;
  mutable std::atomic<int> _composite_stream_proto_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > bbox_bitmap_proto_;
  mutable std::atomic<int> _bbox_bitmap_proto_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > bbox_stream_proto_;
  mutable std::atomic<int> _bbox_stream_proto_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > glyph_stream_proto_;
  mutable std::atomic<int> _glyph_stream_proto_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > instruction_stream_proto_;
  mutable std::atomic<int> _instruction_stream_proto_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > overlap_bitmap_proto_;
  mutable std::atomic<int> _overlap_bitmap_proto_cached_byte_size_;
  int32_t n_glyphs_proto_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_woff2_2eproto;
};
// -------------------------------------------------------------------

class ContourVecProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ContourVecProto) */ {
 public:
  inline ContourVecProto() : ContourVecProto(nullptr) {}
  ~ContourVecProto() override;
  explicit PROTOBUF_CONSTEXPR ContourVecProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ContourVecProto(const ContourVecProto& from);
  ContourVecProto(ContourVecProto&& from) noexcept
    : ContourVecProto() {
    *this = ::std::move(from);
  }

  inline ContourVecProto& operator=(const ContourVecProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ContourVecProto& operator=(ContourVecProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ContourVecProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const ContourVecProto* internal_default_instance() {
    return reinterpret_cast<const ContourVecProto*>(
               &_ContourVecProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(ContourVecProto& a, ContourVecProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ContourVecProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ContourVecProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ContourVecProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ContourVecProto>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ContourVecProto& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ContourVecProto& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ContourVecProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ContourVecProto";
  }
  protected:
  explicit ContourVecProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPointsProtoFieldNumber = 1,
  };
  // repeated .GlyphPointProto points_proto = 1;
  int points_proto_size() const;
  private:
  int _internal_points_proto_size() const;
  public:
  void clear_points_proto();
  ::GlyphPointProto* mutable_points_proto(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::GlyphPointProto >*
      mutable_points_proto();
  private:
  const ::GlyphPointProto& _internal_points_proto(int index) const;
  ::GlyphPointProto* _internal_add_points_proto();
  public:
  const ::GlyphPointProto& points_proto(int index) const;
  ::GlyphPointProto* add_points_proto();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::GlyphPointProto >&
      points_proto() const;

  // @@protoc_insertion_point(class_scope:ContourVecProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::GlyphPointProto > points_proto_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_woff2_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// FontCollectionProto

// uint32 flavor_proto = 1;
inline void FontCollectionProto::clear_flavor_proto() {
  flavor_proto_ = 0u;
}
inline uint32_t FontCollectionProto::_internal_flavor_proto() const {
  return flavor_proto_;
}
inline uint32_t FontCollectionProto::flavor_proto() const {
  // @@protoc_insertion_point(field_get:FontCollectionProto.flavor_proto)
  return _internal_flavor_proto();
}
inline void FontCollectionProto::_internal_set_flavor_proto(uint32_t value) {
  
  flavor_proto_ = value;
}
inline void FontCollectionProto::set_flavor_proto(uint32_t value) {
  _internal_set_flavor_proto(value);
  // @@protoc_insertion_point(field_set:FontCollectionProto.flavor_proto)
}

// uint32 header_version_proto = 2;
inline void FontCollectionProto::clear_header_version_proto() {
  header_version_proto_ = 0u;
}
inline uint32_t FontCollectionProto::_internal_header_version_proto() const {
  return header_version_proto_;
}
inline uint32_t FontCollectionProto::header_version_proto() const {
  // @@protoc_insertion_point(field_get:FontCollectionProto.header_version_proto)
  return _internal_header_version_proto();
}
inline void FontCollectionProto::_internal_set_header_version_proto(uint32_t value) {
  
  header_version_proto_ = value;
}
inline void FontCollectionProto::set_header_version_proto(uint32_t value) {
  _internal_set_header_version_proto(value);
  // @@protoc_insertion_point(field_set:FontCollectionProto.header_version_proto)
}

// map<uint32, .FontTableProto> tables_proto = 3;
inline int FontCollectionProto::_internal_tables_proto_size() const {
  return tables_proto_.size();
}
inline int FontCollectionProto::tables_proto_size() const {
  return _internal_tables_proto_size();
}
inline void FontCollectionProto::clear_tables_proto() {
  tables_proto_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, ::FontTableProto >&
FontCollectionProto::_internal_tables_proto() const {
  return tables_proto_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, ::FontTableProto >&
FontCollectionProto::tables_proto() const {
  // @@protoc_insertion_point(field_map:FontCollectionProto.tables_proto)
  return _internal_tables_proto();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, ::FontTableProto >*
FontCollectionProto::_internal_mutable_tables_proto() {
  return tables_proto_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, ::FontTableProto >*
FontCollectionProto::mutable_tables_proto() {
  // @@protoc_insertion_point(field_mutable_map:FontCollectionProto.tables_proto)
  return _internal_mutable_tables_proto();
}

// repeated .FontProto fonts_proto = 4;
inline int FontCollectionProto::_internal_fonts_proto_size() const {
  return fonts_proto_.size();
}
inline int FontCollectionProto::fonts_proto_size() const {
  return _internal_fonts_proto_size();
}
inline void FontCollectionProto::clear_fonts_proto() {
  fonts_proto_.Clear();
}
inline ::FontProto* FontCollectionProto::mutable_fonts_proto(int index) {
  // @@protoc_insertion_point(field_mutable:FontCollectionProto.fonts_proto)
  return fonts_proto_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::FontProto >*
FontCollectionProto::mutable_fonts_proto() {
  // @@protoc_insertion_point(field_mutable_list:FontCollectionProto.fonts_proto)
  return &fonts_proto_;
}
inline const ::FontProto& FontCollectionProto::_internal_fonts_proto(int index) const {
  return fonts_proto_.Get(index);
}
inline const ::FontProto& FontCollectionProto::fonts_proto(int index) const {
  // @@protoc_insertion_point(field_get:FontCollectionProto.fonts_proto)
  return _internal_fonts_proto(index);
}
inline ::FontProto* FontCollectionProto::_internal_add_fonts_proto() {
  return fonts_proto_.Add();
}
inline ::FontProto* FontCollectionProto::add_fonts_proto() {
  ::FontProto* _add = _internal_add_fonts_proto();
  // @@protoc_insertion_point(field_add:FontCollectionProto.fonts_proto)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::FontProto >&
FontCollectionProto::fonts_proto() const {
  // @@protoc_insertion_point(field_list:FontCollectionProto.fonts_proto)
  return fonts_proto_;
}

// -------------------------------------------------------------------

// GlyphProto

// int32 x_min_proto = 1;
inline void GlyphProto::clear_x_min_proto() {
  x_min_proto_ = 0;
}
inline int32_t GlyphProto::_internal_x_min_proto() const {
  return x_min_proto_;
}
inline int32_t GlyphProto::x_min_proto() const {
  // @@protoc_insertion_point(field_get:GlyphProto.x_min_proto)
  return _internal_x_min_proto();
}
inline void GlyphProto::_internal_set_x_min_proto(int32_t value) {
  
  x_min_proto_ = value;
}
inline void GlyphProto::set_x_min_proto(int32_t value) {
  _internal_set_x_min_proto(value);
  // @@protoc_insertion_point(field_set:GlyphProto.x_min_proto)
}

// int32 x_max_proto = 2;
inline void GlyphProto::clear_x_max_proto() {
  x_max_proto_ = 0;
}
inline int32_t GlyphProto::_internal_x_max_proto() const {
  return x_max_proto_;
}
inline int32_t GlyphProto::x_max_proto() const {
  // @@protoc_insertion_point(field_get:GlyphProto.x_max_proto)
  return _internal_x_max_proto();
}
inline void GlyphProto::_internal_set_x_max_proto(int32_t value) {
  
  x_max_proto_ = value;
}
inline void GlyphProto::set_x_max_proto(int32_t value) {
  _internal_set_x_max_proto(value);
  // @@protoc_insertion_point(field_set:GlyphProto.x_max_proto)
}

// int32 y_min_proto = 3;
inline void GlyphProto::clear_y_min_proto() {
  y_min_proto_ = 0;
}
inline int32_t GlyphProto::_internal_y_min_proto() const {
  return y_min_proto_;
}
inline int32_t GlyphProto::y_min_proto() const {
  // @@protoc_insertion_point(field_get:GlyphProto.y_min_proto)
  return _internal_y_min_proto();
}
inline void GlyphProto::_internal_set_y_min_proto(int32_t value) {
  
  y_min_proto_ = value;
}
inline void GlyphProto::set_y_min_proto(int32_t value) {
  _internal_set_y_min_proto(value);
  // @@protoc_insertion_point(field_set:GlyphProto.y_min_proto)
}

// int32 y_max_proto = 4;
inline void GlyphProto::clear_y_max_proto() {
  y_max_proto_ = 0;
}
inline int32_t GlyphProto::_internal_y_max_proto() const {
  return y_max_proto_;
}
inline int32_t GlyphProto::y_max_proto() const {
  // @@protoc_insertion_point(field_get:GlyphProto.y_max_proto)
  return _internal_y_max_proto();
}
inline void GlyphProto::_internal_set_y_max_proto(int32_t value) {
  
  y_max_proto_ = value;
}
inline void GlyphProto::set_y_max_proto(int32_t value) {
  _internal_set_y_max_proto(value);
  // @@protoc_insertion_point(field_set:GlyphProto.y_max_proto)
}

// uint32 instructions_size_proto = 5;
inline void GlyphProto::clear_instructions_size_proto() {
  instructions_size_proto_ = 0u;
}
inline uint32_t GlyphProto::_internal_instructions_size_proto() const {
  return instructions_size_proto_;
}
inline uint32_t GlyphProto::instructions_size_proto() const {
  // @@protoc_insertion_point(field_get:GlyphProto.instructions_size_proto)
  return _internal_instructions_size_proto();
}
inline void GlyphProto::_internal_set_instructions_size_proto(uint32_t value) {
  
  instructions_size_proto_ = value;
}
inline void GlyphProto::set_instructions_size_proto(uint32_t value) {
  _internal_set_instructions_size_proto(value);
  // @@protoc_insertion_point(field_set:GlyphProto.instructions_size_proto)
}

// bytes instructions_data_proto = 6;
inline void GlyphProto::clear_instructions_data_proto() {
  instructions_data_proto_.ClearToEmpty();
}
inline const std::string& GlyphProto::instructions_data_proto() const {
  // @@protoc_insertion_point(field_get:GlyphProto.instructions_data_proto)
  return _internal_instructions_data_proto();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GlyphProto::set_instructions_data_proto(ArgT0&& arg0, ArgT... args) {
 
 instructions_data_proto_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:GlyphProto.instructions_data_proto)
}
inline std::string* GlyphProto::mutable_instructions_data_proto() {
  std::string* _s = _internal_mutable_instructions_data_proto();
  // @@protoc_insertion_point(field_mutable:GlyphProto.instructions_data_proto)
  return _s;
}
inline const std::string& GlyphProto::_internal_instructions_data_proto() const {
  return instructions_data_proto_.Get();
}
inline void GlyphProto::_internal_set_instructions_data_proto(const std::string& value) {
  
  instructions_data_proto_.Set(value, GetArenaForAllocation());
}
inline std::string* GlyphProto::_internal_mutable_instructions_data_proto() {
  
  return instructions_data_proto_.Mutable(GetArenaForAllocation());
}
inline std::string* GlyphProto::release_instructions_data_proto() {
  // @@protoc_insertion_point(field_release:GlyphProto.instructions_data_proto)
  return instructions_data_proto_.Release();
}
inline void GlyphProto::set_allocated_instructions_data_proto(std::string* instructions_data_proto) {
  if (instructions_data_proto != nullptr) {
    
  } else {
    
  }
  instructions_data_proto_.SetAllocated(instructions_data_proto, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (instructions_data_proto_.IsDefault()) {
    instructions_data_proto_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:GlyphProto.instructions_data_proto)
}

// bool overlap_simple_flag_set_proto = 7;
inline void GlyphProto::clear_overlap_simple_flag_set_proto() {
  overlap_simple_flag_set_proto_ = false;
}
inline bool GlyphProto::_internal_overlap_simple_flag_set_proto() const {
  return overlap_simple_flag_set_proto_;
}
inline bool GlyphProto::overlap_simple_flag_set_proto() const {
  // @@protoc_insertion_point(field_get:GlyphProto.overlap_simple_flag_set_proto)
  return _internal_overlap_simple_flag_set_proto();
}
inline void GlyphProto::_internal_set_overlap_simple_flag_set_proto(bool value) {
  
  overlap_simple_flag_set_proto_ = value;
}
inline void GlyphProto::set_overlap_simple_flag_set_proto(bool value) {
  _internal_set_overlap_simple_flag_set_proto(value);
  // @@protoc_insertion_point(field_set:GlyphProto.overlap_simple_flag_set_proto)
}

// repeated .ContourVecProto contours_proto = 8;
inline int GlyphProto::_internal_contours_proto_size() const {
  return contours_proto_.size();
}
inline int GlyphProto::contours_proto_size() const {
  return _internal_contours_proto_size();
}
inline void GlyphProto::clear_contours_proto() {
  contours_proto_.Clear();
}
inline ::ContourVecProto* GlyphProto::mutable_contours_proto(int index) {
  // @@protoc_insertion_point(field_mutable:GlyphProto.contours_proto)
  return contours_proto_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ContourVecProto >*
GlyphProto::mutable_contours_proto() {
  // @@protoc_insertion_point(field_mutable_list:GlyphProto.contours_proto)
  return &contours_proto_;
}
inline const ::ContourVecProto& GlyphProto::_internal_contours_proto(int index) const {
  return contours_proto_.Get(index);
}
inline const ::ContourVecProto& GlyphProto::contours_proto(int index) const {
  // @@protoc_insertion_point(field_get:GlyphProto.contours_proto)
  return _internal_contours_proto(index);
}
inline ::ContourVecProto* GlyphProto::_internal_add_contours_proto() {
  return contours_proto_.Add();
}
inline ::ContourVecProto* GlyphProto::add_contours_proto() {
  ::ContourVecProto* _add = _internal_add_contours_proto();
  // @@protoc_insertion_point(field_add:GlyphProto.contours_proto)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ContourVecProto >&
GlyphProto::contours_proto() const {
  // @@protoc_insertion_point(field_list:GlyphProto.contours_proto)
  return contours_proto_;
}

// bytes composite_data_proto = 9;
inline void GlyphProto::clear_composite_data_proto() {
  composite_data_proto_.ClearToEmpty();
}
inline const std::string& GlyphProto::composite_data_proto() const {
  // @@protoc_insertion_point(field_get:GlyphProto.composite_data_proto)
  return _internal_composite_data_proto();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GlyphProto::set_composite_data_proto(ArgT0&& arg0, ArgT... args) {
 
 composite_data_proto_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:GlyphProto.composite_data_proto)
}
inline std::string* GlyphProto::mutable_composite_data_proto() {
  std::string* _s = _internal_mutable_composite_data_proto();
  // @@protoc_insertion_point(field_mutable:GlyphProto.composite_data_proto)
  return _s;
}
inline const std::string& GlyphProto::_internal_composite_data_proto() const {
  return composite_data_proto_.Get();
}
inline void GlyphProto::_internal_set_composite_data_proto(const std::string& value) {
  
  composite_data_proto_.Set(value, GetArenaForAllocation());
}
inline std::string* GlyphProto::_internal_mutable_composite_data_proto() {
  
  return composite_data_proto_.Mutable(GetArenaForAllocation());
}
inline std::string* GlyphProto::release_composite_data_proto() {
  // @@protoc_insertion_point(field_release:GlyphProto.composite_data_proto)
  return composite_data_proto_.Release();
}
inline void GlyphProto::set_allocated_composite_data_proto(std::string* composite_data_proto) {
  if (composite_data_proto != nullptr) {
    
  } else {
    
  }
  composite_data_proto_.SetAllocated(composite_data_proto, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (composite_data_proto_.IsDefault()) {
    composite_data_proto_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:GlyphProto.composite_data_proto)
}

// uint32 composite_data_size_proto = 10;
inline void GlyphProto::clear_composite_data_size_proto() {
  composite_data_size_proto_ = 0u;
}
inline uint32_t GlyphProto::_internal_composite_data_size_proto() const {
  return composite_data_size_proto_;
}
inline uint32_t GlyphProto::composite_data_size_proto() const {
  // @@protoc_insertion_point(field_get:GlyphProto.composite_data_size_proto)
  return _internal_composite_data_size_proto();
}
inline void GlyphProto::_internal_set_composite_data_size_proto(uint32_t value) {
  
  composite_data_size_proto_ = value;
}
inline void GlyphProto::set_composite_data_size_proto(uint32_t value) {
  _internal_set_composite_data_size_proto(value);
  // @@protoc_insertion_point(field_set:GlyphProto.composite_data_size_proto)
}

// bool have_instructions_proto = 11;
inline void GlyphProto::clear_have_instructions_proto() {
  have_instructions_proto_ = false;
}
inline bool GlyphProto::_internal_have_instructions_proto() const {
  return have_instructions_proto_;
}
inline bool GlyphProto::have_instructions_proto() const {
  // @@protoc_insertion_point(field_get:GlyphProto.have_instructions_proto)
  return _internal_have_instructions_proto();
}
inline void GlyphProto::_internal_set_have_instructions_proto(bool value) {
  
  have_instructions_proto_ = value;
}
inline void GlyphProto::set_have_instructions_proto(bool value) {
  _internal_set_have_instructions_proto(value);
  // @@protoc_insertion_point(field_set:GlyphProto.have_instructions_proto)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// RebuildMetadataProto

// uint32 header_checksum_proto = 1;
inline void RebuildMetadataProto::clear_header_checksum_proto() {
  header_checksum_proto_ = 0u;
}
inline uint32_t RebuildMetadataProto::_internal_header_checksum_proto() const {
  return header_checksum_proto_;
}
inline uint32_t RebuildMetadataProto::header_checksum_proto() const {
  // @@protoc_insertion_point(field_get:RebuildMetadataProto.header_checksum_proto)
  return _internal_header_checksum_proto();
}
inline void RebuildMetadataProto::_internal_set_header_checksum_proto(uint32_t value) {
  
  header_checksum_proto_ = value;
}
inline void RebuildMetadataProto::set_header_checksum_proto(uint32_t value) {
  _internal_set_header_checksum_proto(value);
  // @@protoc_insertion_point(field_set:RebuildMetadataProto.header_checksum_proto)
}

// repeated .WOFF2FontInfoProto font_infos_proto = 2;
inline int RebuildMetadataProto::_internal_font_infos_proto_size() const {
  return font_infos_proto_.size();
}
inline int RebuildMetadataProto::font_infos_proto_size() const {
  return _internal_font_infos_proto_size();
}
inline void RebuildMetadataProto::clear_font_infos_proto() {
  font_infos_proto_.Clear();
}
inline ::WOFF2FontInfoProto* RebuildMetadataProto::mutable_font_infos_proto(int index) {
  // @@protoc_insertion_point(field_mutable:RebuildMetadataProto.font_infos_proto)
  return font_infos_proto_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WOFF2FontInfoProto >*
RebuildMetadataProto::mutable_font_infos_proto() {
  // @@protoc_insertion_point(field_mutable_list:RebuildMetadataProto.font_infos_proto)
  return &font_infos_proto_;
}
inline const ::WOFF2FontInfoProto& RebuildMetadataProto::_internal_font_infos_proto(int index) const {
  return font_infos_proto_.Get(index);
}
inline const ::WOFF2FontInfoProto& RebuildMetadataProto::font_infos_proto(int index) const {
  // @@protoc_insertion_point(field_get:RebuildMetadataProto.font_infos_proto)
  return _internal_font_infos_proto(index);
}
inline ::WOFF2FontInfoProto* RebuildMetadataProto::_internal_add_font_infos_proto() {
  return font_infos_proto_.Add();
}
inline ::WOFF2FontInfoProto* RebuildMetadataProto::add_font_infos_proto() {
  ::WOFF2FontInfoProto* _add = _internal_add_font_infos_proto();
  // @@protoc_insertion_point(field_add:RebuildMetadataProto.font_infos_proto)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WOFF2FontInfoProto >&
RebuildMetadataProto::font_infos_proto() const {
  // @@protoc_insertion_point(field_list:RebuildMetadataProto.font_infos_proto)
  return font_infos_proto_;
}

// map<uint64, uint32> checksums_proto = 3;
inline int RebuildMetadataProto::_internal_checksums_proto_size() const {
  return checksums_proto_.size();
}
inline int RebuildMetadataProto::checksums_proto_size() const {
  return _internal_checksums_proto_size();
}
inline void RebuildMetadataProto::clear_checksums_proto() {
  checksums_proto_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint32_t >&
RebuildMetadataProto::_internal_checksums_proto() const {
  return checksums_proto_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint32_t >&
RebuildMetadataProto::checksums_proto() const {
  // @@protoc_insertion_point(field_map:RebuildMetadataProto.checksums_proto)
  return _internal_checksums_proto();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint32_t >*
RebuildMetadataProto::_internal_mutable_checksums_proto() {
  return checksums_proto_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< uint64_t, uint32_t >*
RebuildMetadataProto::mutable_checksums_proto() {
  // @@protoc_insertion_point(field_mutable_map:RebuildMetadataProto.checksums_proto)
  return _internal_mutable_checksums_proto();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// FontProto

// uint32 flavor_proto = 1;
inline void FontProto::clear_flavor_proto() {
  flavor_proto_ = 0u;
}
inline uint32_t FontProto::_internal_flavor_proto() const {
  return flavor_proto_;
}
inline uint32_t FontProto::flavor_proto() const {
  // @@protoc_insertion_point(field_get:FontProto.flavor_proto)
  return _internal_flavor_proto();
}
inline void FontProto::_internal_set_flavor_proto(uint32_t value) {
  
  flavor_proto_ = value;
}
inline void FontProto::set_flavor_proto(uint32_t value) {
  _internal_set_flavor_proto(value);
  // @@protoc_insertion_point(field_set:FontProto.flavor_proto)
}

// uint32 num_tables_proto = 2;
inline void FontProto::clear_num_tables_proto() {
  num_tables_proto_ = 0u;
}
inline uint32_t FontProto::_internal_num_tables_proto() const {
  return num_tables_proto_;
}
inline uint32_t FontProto::num_tables_proto() const {
  // @@protoc_insertion_point(field_get:FontProto.num_tables_proto)
  return _internal_num_tables_proto();
}
inline void FontProto::_internal_set_num_tables_proto(uint32_t value) {
  
  num_tables_proto_ = value;
}
inline void FontProto::set_num_tables_proto(uint32_t value) {
  _internal_set_num_tables_proto(value);
  // @@protoc_insertion_point(field_set:FontProto.num_tables_proto)
}

// map<uint32, .FontTableProto> tables_proto = 3;
inline int FontProto::_internal_tables_proto_size() const {
  return tables_proto_.size();
}
inline int FontProto::tables_proto_size() const {
  return _internal_tables_proto_size();
}
inline void FontProto::clear_tables_proto() {
  tables_proto_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, ::FontTableProto >&
FontProto::_internal_tables_proto() const {
  return tables_proto_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, ::FontTableProto >&
FontProto::tables_proto() const {
  // @@protoc_insertion_point(field_map:FontProto.tables_proto)
  return _internal_tables_proto();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, ::FontTableProto >*
FontProto::_internal_mutable_tables_proto() {
  return tables_proto_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, ::FontTableProto >*
FontProto::mutable_tables_proto() {
  // @@protoc_insertion_point(field_mutable_map:FontProto.tables_proto)
  return _internal_mutable_tables_proto();
}

// -------------------------------------------------------------------

// PointProto

// int32 x_proto = 1;
inline void PointProto::clear_x_proto() {
  x_proto_ = 0;
}
inline int32_t PointProto::_internal_x_proto() const {
  return x_proto_;
}
inline int32_t PointProto::x_proto() const {
  // @@protoc_insertion_point(field_get:PointProto.x_proto)
  return _internal_x_proto();
}
inline void PointProto::_internal_set_x_proto(int32_t value) {
  
  x_proto_ = value;
}
inline void PointProto::set_x_proto(int32_t value) {
  _internal_set_x_proto(value);
  // @@protoc_insertion_point(field_set:PointProto.x_proto)
}

// int32 y_proto = 2;
inline void PointProto::clear_y_proto() {
  y_proto_ = 0;
}
inline int32_t PointProto::_internal_y_proto() const {
  return y_proto_;
}
inline int32_t PointProto::y_proto() const {
  // @@protoc_insertion_point(field_get:PointProto.y_proto)
  return _internal_y_proto();
}
inline void PointProto::_internal_set_y_proto(int32_t value) {
  
  y_proto_ = value;
}
inline void PointProto::set_y_proto(int32_t value) {
  _internal_set_y_proto(value);
  // @@protoc_insertion_point(field_set:PointProto.y_proto)
}

// bool on_curve_proto = 3;
inline void PointProto::clear_on_curve_proto() {
  on_curve_proto_ = false;
}
inline bool PointProto::_internal_on_curve_proto() const {
  return on_curve_proto_;
}
inline bool PointProto::on_curve_proto() const {
  // @@protoc_insertion_point(field_get:PointProto.on_curve_proto)
  return _internal_on_curve_proto();
}
inline void PointProto::_internal_set_on_curve_proto(bool value) {
  
  on_curve_proto_ = value;
}
inline void PointProto::set_on_curve_proto(bool value) {
  _internal_set_on_curve_proto(value);
  // @@protoc_insertion_point(field_set:PointProto.on_curve_proto)
}

// -------------------------------------------------------------------

// TtcFontProto

// uint32 flavor_proto = 1;
inline void TtcFontProto::clear_flavor_proto() {
  flavor_proto_ = 0u;
}
inline uint32_t TtcFontProto::_internal_flavor_proto() const {
  return flavor_proto_;
}
inline uint32_t TtcFontProto::flavor_proto() const {
  // @@protoc_insertion_point(field_get:TtcFontProto.flavor_proto)
  return _internal_flavor_proto();
}
inline void TtcFontProto::_internal_set_flavor_proto(uint32_t value) {
  
  flavor_proto_ = value;
}
inline void TtcFontProto::set_flavor_proto(uint32_t value) {
  _internal_set_flavor_proto(value);
  // @@protoc_insertion_point(field_set:TtcFontProto.flavor_proto)
}

// uint32 dst_offset_proto = 2;
inline void TtcFontProto::clear_dst_offset_proto() {
  dst_offset_proto_ = 0u;
}
inline uint32_t TtcFontProto::_internal_dst_offset_proto() const {
  return dst_offset_proto_;
}
inline uint32_t TtcFontProto::dst_offset_proto() const {
  // @@protoc_insertion_point(field_get:TtcFontProto.dst_offset_proto)
  return _internal_dst_offset_proto();
}
inline void TtcFontProto::_internal_set_dst_offset_proto(uint32_t value) {
  
  dst_offset_proto_ = value;
}
inline void TtcFontProto::set_dst_offset_proto(uint32_t value) {
  _internal_set_dst_offset_proto(value);
  // @@protoc_insertion_point(field_set:TtcFontProto.dst_offset_proto)
}

// uint32 header_checksum_proto = 3;
inline void TtcFontProto::clear_header_checksum_proto() {
  header_checksum_proto_ = 0u;
}
inline uint32_t TtcFontProto::_internal_header_checksum_proto() const {
  return header_checksum_proto_;
}
inline uint32_t TtcFontProto::header_checksum_proto() const {
  // @@protoc_insertion_point(field_get:TtcFontProto.header_checksum_proto)
  return _internal_header_checksum_proto();
}
inline void TtcFontProto::_internal_set_header_checksum_proto(uint32_t value) {
  
  header_checksum_proto_ = value;
}
inline void TtcFontProto::set_header_checksum_proto(uint32_t value) {
  _internal_set_header_checksum_proto(value);
  // @@protoc_insertion_point(field_set:TtcFontProto.header_checksum_proto)
}

// repeated uint32 table_indices_proto = 4;
inline int TtcFontProto::_internal_table_indices_proto_size() const {
  return table_indices_proto_.size();
}
inline int TtcFontProto::table_indices_proto_size() const {
  return _internal_table_indices_proto_size();
}
inline void TtcFontProto::clear_table_indices_proto() {
  table_indices_proto_.Clear();
}
inline uint32_t TtcFontProto::_internal_table_indices_proto(int index) const {
  return table_indices_proto_.Get(index);
}
inline uint32_t TtcFontProto::table_indices_proto(int index) const {
  // @@protoc_insertion_point(field_get:TtcFontProto.table_indices_proto)
  return _internal_table_indices_proto(index);
}
inline void TtcFontProto::set_table_indices_proto(int index, uint32_t value) {
  table_indices_proto_.Set(index, value);
  // @@protoc_insertion_point(field_set:TtcFontProto.table_indices_proto)
}
inline void TtcFontProto::_internal_add_table_indices_proto(uint32_t value) {
  table_indices_proto_.Add(value);
}
inline void TtcFontProto::add_table_indices_proto(uint32_t value) {
  _internal_add_table_indices_proto(value);
  // @@protoc_insertion_point(field_add:TtcFontProto.table_indices_proto)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
TtcFontProto::_internal_table_indices_proto() const {
  return table_indices_proto_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
TtcFontProto::table_indices_proto() const {
  // @@protoc_insertion_point(field_list:TtcFontProto.table_indices_proto)
  return _internal_table_indices_proto();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
TtcFontProto::_internal_mutable_table_indices_proto() {
  return &table_indices_proto_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
TtcFontProto::mutable_table_indices_proto() {
  // @@protoc_insertion_point(field_mutable_list:TtcFontProto.table_indices_proto)
  return _internal_mutable_table_indices_proto();
}

// -------------------------------------------------------------------

// BufferProto

// bytes buffer_proto = 1;
inline void BufferProto::clear_buffer_proto() {
  buffer_proto_.ClearToEmpty();
}
inline const std::string& BufferProto::buffer_proto() const {
  // @@protoc_insertion_point(field_get:BufferProto.buffer_proto)
  return _internal_buffer_proto();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void BufferProto::set_buffer_proto(ArgT0&& arg0, ArgT... args) {
 
 buffer_proto_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:BufferProto.buffer_proto)
}
inline std::string* BufferProto::mutable_buffer_proto() {
  std::string* _s = _internal_mutable_buffer_proto();
  // @@protoc_insertion_point(field_mutable:BufferProto.buffer_proto)
  return _s;
}
inline const std::string& BufferProto::_internal_buffer_proto() const {
  return buffer_proto_.Get();
}
inline void BufferProto::_internal_set_buffer_proto(const std::string& value) {
  
  buffer_proto_.Set(value, GetArenaForAllocation());
}
inline std::string* BufferProto::_internal_mutable_buffer_proto() {
  
  return buffer_proto_.Mutable(GetArenaForAllocation());
}
inline std::string* BufferProto::release_buffer_proto() {
  // @@protoc_insertion_point(field_release:BufferProto.buffer_proto)
  return buffer_proto_.Release();
}
inline void BufferProto::set_allocated_buffer_proto(std::string* buffer_proto) {
  if (buffer_proto != nullptr) {
    
  } else {
    
  }
  buffer_proto_.SetAllocated(buffer_proto, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (buffer_proto_.IsDefault()) {
    buffer_proto_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BufferProto.buffer_proto)
}

// uint64 length_proto = 2;
inline void BufferProto::clear_length_proto() {
  length_proto_ = uint64_t{0u};
}
inline uint64_t BufferProto::_internal_length_proto() const {
  return length_proto_;
}
inline uint64_t BufferProto::length_proto() const {
  // @@protoc_insertion_point(field_get:BufferProto.length_proto)
  return _internal_length_proto();
}
inline void BufferProto::_internal_set_length_proto(uint64_t value) {
  
  length_proto_ = value;
}
inline void BufferProto::set_length_proto(uint64_t value) {
  _internal_set_length_proto(value);
  // @@protoc_insertion_point(field_set:BufferProto.length_proto)
}

// uint64 offset_proto = 3;
inline void BufferProto::clear_offset_proto() {
  offset_proto_ = uint64_t{0u};
}
inline uint64_t BufferProto::_internal_offset_proto() const {
  return offset_proto_;
}
inline uint64_t BufferProto::offset_proto() const {
  // @@protoc_insertion_point(field_get:BufferProto.offset_proto)
  return _internal_offset_proto();
}
inline void BufferProto::_internal_set_offset_proto(uint64_t value) {
  
  offset_proto_ = value;
}
inline void BufferProto::set_offset_proto(uint64_t value) {
  _internal_set_offset_proto(value);
  // @@protoc_insertion_point(field_set:BufferProto.offset_proto)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// WOFF2FontInfoProto

// uint32 num_glyphs_proto = 1;
inline void WOFF2FontInfoProto::clear_num_glyphs_proto() {
  num_glyphs_proto_ = 0u;
}
inline uint32_t WOFF2FontInfoProto::_internal_num_glyphs_proto() const {
  return num_glyphs_proto_;
}
inline uint32_t WOFF2FontInfoProto::num_glyphs_proto() const {
  // @@protoc_insertion_point(field_get:WOFF2FontInfoProto.num_glyphs_proto)
  return _internal_num_glyphs_proto();
}
inline void WOFF2FontInfoProto::_internal_set_num_glyphs_proto(uint32_t value) {
  
  num_glyphs_proto_ = value;
}
inline void WOFF2FontInfoProto::set_num_glyphs_proto(uint32_t value) {
  _internal_set_num_glyphs_proto(value);
  // @@protoc_insertion_point(field_set:WOFF2FontInfoProto.num_glyphs_proto)
}

// uint32 index_format_proto = 2;
inline void WOFF2FontInfoProto::clear_index_format_proto() {
  index_format_proto_ = 0u;
}
inline uint32_t WOFF2FontInfoProto::_internal_index_format_proto() const {
  return index_format_proto_;
}
inline uint32_t WOFF2FontInfoProto::index_format_proto() const {
  // @@protoc_insertion_point(field_get:WOFF2FontInfoProto.index_format_proto)
  return _internal_index_format_proto();
}
inline void WOFF2FontInfoProto::_internal_set_index_format_proto(uint32_t value) {
  
  index_format_proto_ = value;
}
inline void WOFF2FontInfoProto::set_index_format_proto(uint32_t value) {
  _internal_set_index_format_proto(value);
  // @@protoc_insertion_point(field_set:WOFF2FontInfoProto.index_format_proto)
}

// uint32 num_hmetrics_proto = 3;
inline void WOFF2FontInfoProto::clear_num_hmetrics_proto() {
  num_hmetrics_proto_ = 0u;
}
inline uint32_t WOFF2FontInfoProto::_internal_num_hmetrics_proto() const {
  return num_hmetrics_proto_;
}
inline uint32_t WOFF2FontInfoProto::num_hmetrics_proto() const {
  // @@protoc_insertion_point(field_get:WOFF2FontInfoProto.num_hmetrics_proto)
  return _internal_num_hmetrics_proto();
}
inline void WOFF2FontInfoProto::_internal_set_num_hmetrics_proto(uint32_t value) {
  
  num_hmetrics_proto_ = value;
}
inline void WOFF2FontInfoProto::set_num_hmetrics_proto(uint32_t value) {
  _internal_set_num_hmetrics_proto(value);
  // @@protoc_insertion_point(field_set:WOFF2FontInfoProto.num_hmetrics_proto)
}

// repeated int32 x_mins_proto = 4;
inline int WOFF2FontInfoProto::_internal_x_mins_proto_size() const {
  return x_mins_proto_.size();
}
inline int WOFF2FontInfoProto::x_mins_proto_size() const {
  return _internal_x_mins_proto_size();
}
inline void WOFF2FontInfoProto::clear_x_mins_proto() {
  x_mins_proto_.Clear();
}
inline int32_t WOFF2FontInfoProto::_internal_x_mins_proto(int index) const {
  return x_mins_proto_.Get(index);
}
inline int32_t WOFF2FontInfoProto::x_mins_proto(int index) const {
  // @@protoc_insertion_point(field_get:WOFF2FontInfoProto.x_mins_proto)
  return _internal_x_mins_proto(index);
}
inline void WOFF2FontInfoProto::set_x_mins_proto(int index, int32_t value) {
  x_mins_proto_.Set(index, value);
  // @@protoc_insertion_point(field_set:WOFF2FontInfoProto.x_mins_proto)
}
inline void WOFF2FontInfoProto::_internal_add_x_mins_proto(int32_t value) {
  x_mins_proto_.Add(value);
}
inline void WOFF2FontInfoProto::add_x_mins_proto(int32_t value) {
  _internal_add_x_mins_proto(value);
  // @@protoc_insertion_point(field_add:WOFF2FontInfoProto.x_mins_proto)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
WOFF2FontInfoProto::_internal_x_mins_proto() const {
  return x_mins_proto_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
WOFF2FontInfoProto::x_mins_proto() const {
  // @@protoc_insertion_point(field_list:WOFF2FontInfoProto.x_mins_proto)
  return _internal_x_mins_proto();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
WOFF2FontInfoProto::_internal_mutable_x_mins_proto() {
  return &x_mins_proto_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
WOFF2FontInfoProto::mutable_x_mins_proto() {
  // @@protoc_insertion_point(field_mutable_list:WOFF2FontInfoProto.x_mins_proto)
  return _internal_mutable_x_mins_proto();
}

// map<uint32, uint32> table_entry_by_tag_proto = 5;
inline int WOFF2FontInfoProto::_internal_table_entry_by_tag_proto_size() const {
  return table_entry_by_tag_proto_.size();
}
inline int WOFF2FontInfoProto::table_entry_by_tag_proto_size() const {
  return _internal_table_entry_by_tag_proto_size();
}
inline void WOFF2FontInfoProto::clear_table_entry_by_tag_proto() {
  table_entry_by_tag_proto_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >&
WOFF2FontInfoProto::_internal_table_entry_by_tag_proto() const {
  return table_entry_by_tag_proto_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >&
WOFF2FontInfoProto::table_entry_by_tag_proto() const {
  // @@protoc_insertion_point(field_map:WOFF2FontInfoProto.table_entry_by_tag_proto)
  return _internal_table_entry_by_tag_proto();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >*
WOFF2FontInfoProto::_internal_mutable_table_entry_by_tag_proto() {
  return table_entry_by_tag_proto_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< uint32_t, uint32_t >*
WOFF2FontInfoProto::mutable_table_entry_by_tag_proto() {
  // @@protoc_insertion_point(field_mutable_map:WOFF2FontInfoProto.table_entry_by_tag_proto)
  return _internal_mutable_table_entry_by_tag_proto();
}

// -------------------------------------------------------------------

// FontTableProto

// uint32 tag_proto = 1;
inline void FontTableProto::clear_tag_proto() {
  tag_proto_ = 0u;
}
inline uint32_t FontTableProto::_internal_tag_proto() const {
  return tag_proto_;
}
inline uint32_t FontTableProto::tag_proto() const {
  // @@protoc_insertion_point(field_get:FontTableProto.tag_proto)
  return _internal_tag_proto();
}
inline void FontTableProto::_internal_set_tag_proto(uint32_t value) {
  
  tag_proto_ = value;
}
inline void FontTableProto::set_tag_proto(uint32_t value) {
  _internal_set_tag_proto(value);
  // @@protoc_insertion_point(field_set:FontTableProto.tag_proto)
}

// uint32 checksum_proto = 2;
inline void FontTableProto::clear_checksum_proto() {
  checksum_proto_ = 0u;
}
inline uint32_t FontTableProto::_internal_checksum_proto() const {
  return checksum_proto_;
}
inline uint32_t FontTableProto::checksum_proto() const {
  // @@protoc_insertion_point(field_get:FontTableProto.checksum_proto)
  return _internal_checksum_proto();
}
inline void FontTableProto::_internal_set_checksum_proto(uint32_t value) {
  
  checksum_proto_ = value;
}
inline void FontTableProto::set_checksum_proto(uint32_t value) {
  _internal_set_checksum_proto(value);
  // @@protoc_insertion_point(field_set:FontTableProto.checksum_proto)
}

// uint32 offset_proto = 3;
inline void FontTableProto::clear_offset_proto() {
  offset_proto_ = 0u;
}
inline uint32_t FontTableProto::_internal_offset_proto() const {
  return offset_proto_;
}
inline uint32_t FontTableProto::offset_proto() const {
  // @@protoc_insertion_point(field_get:FontTableProto.offset_proto)
  return _internal_offset_proto();
}
inline void FontTableProto::_internal_set_offset_proto(uint32_t value) {
  
  offset_proto_ = value;
}
inline void FontTableProto::set_offset_proto(uint32_t value) {
  _internal_set_offset_proto(value);
  // @@protoc_insertion_point(field_set:FontTableProto.offset_proto)
}

// uint32 length_proto = 4;
inline void FontTableProto::clear_length_proto() {
  length_proto_ = 0u;
}
inline uint32_t FontTableProto::_internal_length_proto() const {
  return length_proto_;
}
inline uint32_t FontTableProto::length_proto() const {
  // @@protoc_insertion_point(field_get:FontTableProto.length_proto)
  return _internal_length_proto();
}
inline void FontTableProto::_internal_set_length_proto(uint32_t value) {
  
  length_proto_ = value;
}
inline void FontTableProto::set_length_proto(uint32_t value) {
  _internal_set_length_proto(value);
  // @@protoc_insertion_point(field_set:FontTableProto.length_proto)
}

// bytes data_proto = 5;
inline void FontTableProto::clear_data_proto() {
  data_proto_.ClearToEmpty();
}
inline const std::string& FontTableProto::data_proto() const {
  // @@protoc_insertion_point(field_get:FontTableProto.data_proto)
  return _internal_data_proto();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void FontTableProto::set_data_proto(ArgT0&& arg0, ArgT... args) {
 
 data_proto_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:FontTableProto.data_proto)
}
inline std::string* FontTableProto::mutable_data_proto() {
  std::string* _s = _internal_mutable_data_proto();
  // @@protoc_insertion_point(field_mutable:FontTableProto.data_proto)
  return _s;
}
inline const std::string& FontTableProto::_internal_data_proto() const {
  return data_proto_.Get();
}
inline void FontTableProto::_internal_set_data_proto(const std::string& value) {
  
  data_proto_.Set(value, GetArenaForAllocation());
}
inline std::string* FontTableProto::_internal_mutable_data_proto() {
  
  return data_proto_.Mutable(GetArenaForAllocation());
}
inline std::string* FontTableProto::release_data_proto() {
  // @@protoc_insertion_point(field_release:FontTableProto.data_proto)
  return data_proto_.Release();
}
inline void FontTableProto::set_allocated_data_proto(std::string* data_proto) {
  if (data_proto != nullptr) {
    
  } else {
    
  }
  data_proto_.SetAllocated(data_proto, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (data_proto_.IsDefault()) {
    data_proto_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:FontTableProto.data_proto)
}

// repeated uint32 buffer_proto = 6;
inline int FontTableProto::_internal_buffer_proto_size() const {
  return buffer_proto_.size();
}
inline int FontTableProto::buffer_proto_size() const {
  return _internal_buffer_proto_size();
}
inline void FontTableProto::clear_buffer_proto() {
  buffer_proto_.Clear();
}
inline uint32_t FontTableProto::_internal_buffer_proto(int index) const {
  return buffer_proto_.Get(index);
}
inline uint32_t FontTableProto::buffer_proto(int index) const {
  // @@protoc_insertion_point(field_get:FontTableProto.buffer_proto)
  return _internal_buffer_proto(index);
}
inline void FontTableProto::set_buffer_proto(int index, uint32_t value) {
  buffer_proto_.Set(index, value);
  // @@protoc_insertion_point(field_set:FontTableProto.buffer_proto)
}
inline void FontTableProto::_internal_add_buffer_proto(uint32_t value) {
  buffer_proto_.Add(value);
}
inline void FontTableProto::add_buffer_proto(uint32_t value) {
  _internal_add_buffer_proto(value);
  // @@protoc_insertion_point(field_add:FontTableProto.buffer_proto)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
FontTableProto::_internal_buffer_proto() const {
  return buffer_proto_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
FontTableProto::buffer_proto() const {
  // @@protoc_insertion_point(field_list:FontTableProto.buffer_proto)
  return _internal_buffer_proto();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
FontTableProto::_internal_mutable_buffer_proto() {
  return &buffer_proto_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
FontTableProto::mutable_buffer_proto() {
  // @@protoc_insertion_point(field_mutable_list:FontTableProto.buffer_proto)
  return _internal_mutable_buffer_proto();
}

// .FontTableProto reuse_of_proto = 7;
inline bool FontTableProto::_internal_has_reuse_of_proto() const {
  return this != internal_default_instance() && reuse_of_proto_ != nullptr;
}
inline bool FontTableProto::has_reuse_of_proto() const {
  return _internal_has_reuse_of_proto();
}
inline void FontTableProto::clear_reuse_of_proto() {
  if (GetArenaForAllocation() == nullptr && reuse_of_proto_ != nullptr) {
    delete reuse_of_proto_;
  }
  reuse_of_proto_ = nullptr;
}
inline const ::FontTableProto& FontTableProto::_internal_reuse_of_proto() const {
  const ::FontTableProto* p = reuse_of_proto_;
  return p != nullptr ? *p : reinterpret_cast<const ::FontTableProto&>(
      ::_FontTableProto_default_instance_);
}
inline const ::FontTableProto& FontTableProto::reuse_of_proto() const {
  // @@protoc_insertion_point(field_get:FontTableProto.reuse_of_proto)
  return _internal_reuse_of_proto();
}
inline void FontTableProto::unsafe_arena_set_allocated_reuse_of_proto(
    ::FontTableProto* reuse_of_proto) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reuse_of_proto_);
  }
  reuse_of_proto_ = reuse_of_proto;
  if (reuse_of_proto) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:FontTableProto.reuse_of_proto)
}
inline ::FontTableProto* FontTableProto::release_reuse_of_proto() {
  
  ::FontTableProto* temp = reuse_of_proto_;
  reuse_of_proto_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::FontTableProto* FontTableProto::unsafe_arena_release_reuse_of_proto() {
  // @@protoc_insertion_point(field_release:FontTableProto.reuse_of_proto)
  
  ::FontTableProto* temp = reuse_of_proto_;
  reuse_of_proto_ = nullptr;
  return temp;
}
inline ::FontTableProto* FontTableProto::_internal_mutable_reuse_of_proto() {
  
  if (reuse_of_proto_ == nullptr) {
    auto* p = CreateMaybeMessage<::FontTableProto>(GetArenaForAllocation());
    reuse_of_proto_ = p;
  }
  return reuse_of_proto_;
}
inline ::FontTableProto* FontTableProto::mutable_reuse_of_proto() {
  ::FontTableProto* _msg = _internal_mutable_reuse_of_proto();
  // @@protoc_insertion_point(field_mutable:FontTableProto.reuse_of_proto)
  return _msg;
}
inline void FontTableProto::set_allocated_reuse_of_proto(::FontTableProto* reuse_of_proto) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reuse_of_proto_;
  }
  if (reuse_of_proto) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(reuse_of_proto);
    if (message_arena != submessage_arena) {
      reuse_of_proto = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reuse_of_proto, submessage_arena);
    }
    
  } else {
    
  }
  reuse_of_proto_ = reuse_of_proto;
  // @@protoc_insertion_point(field_set_allocated:FontTableProto.reuse_of_proto)
}

// uint32 flag_byte_proto = 8;
inline void FontTableProto::clear_flag_byte_proto() {
  flag_byte_proto_ = 0u;
}
inline uint32_t FontTableProto::_internal_flag_byte_proto() const {
  return flag_byte_proto_;
}
inline uint32_t FontTableProto::flag_byte_proto() const {
  // @@protoc_insertion_point(field_get:FontTableProto.flag_byte_proto)
  return _internal_flag_byte_proto();
}
inline void FontTableProto::_internal_set_flag_byte_proto(uint32_t value) {
  
  flag_byte_proto_ = value;
}
inline void FontTableProto::set_flag_byte_proto(uint32_t value) {
  _internal_set_flag_byte_proto(value);
  // @@protoc_insertion_point(field_set:FontTableProto.flag_byte_proto)
}

// -------------------------------------------------------------------

// GlyphPointProto

// int32 x_proto = 1;
inline void GlyphPointProto::clear_x_proto() {
  x_proto_ = 0;
}
inline int32_t GlyphPointProto::_internal_x_proto() const {
  return x_proto_;
}
inline int32_t GlyphPointProto::x_proto() const {
  // @@protoc_insertion_point(field_get:GlyphPointProto.x_proto)
  return _internal_x_proto();
}
inline void GlyphPointProto::_internal_set_x_proto(int32_t value) {
  
  x_proto_ = value;
}
inline void GlyphPointProto::set_x_proto(int32_t value) {
  _internal_set_x_proto(value);
  // @@protoc_insertion_point(field_set:GlyphPointProto.x_proto)
}

// int32 y_proto = 2;
inline void GlyphPointProto::clear_y_proto() {
  y_proto_ = 0;
}
inline int32_t GlyphPointProto::_internal_y_proto() const {
  return y_proto_;
}
inline int32_t GlyphPointProto::y_proto() const {
  // @@protoc_insertion_point(field_get:GlyphPointProto.y_proto)
  return _internal_y_proto();
}
inline void GlyphPointProto::_internal_set_y_proto(int32_t value) {
  
  y_proto_ = value;
}
inline void GlyphPointProto::set_y_proto(int32_t value) {
  _internal_set_y_proto(value);
  // @@protoc_insertion_point(field_set:GlyphPointProto.y_proto)
}

// bool on_curve_proto = 3;
inline void GlyphPointProto::clear_on_curve_proto() {
  on_curve_proto_ = false;
}
inline bool GlyphPointProto::_internal_on_curve_proto() const {
  return on_curve_proto_;
}
inline bool GlyphPointProto::on_curve_proto() const {
  // @@protoc_insertion_point(field_get:GlyphPointProto.on_curve_proto)
  return _internal_on_curve_proto();
}
inline void GlyphPointProto::_internal_set_on_curve_proto(bool value) {
  
  on_curve_proto_ = value;
}
inline void GlyphPointProto::set_on_curve_proto(bool value) {
  _internal_set_on_curve_proto(value);
  // @@protoc_insertion_point(field_set:GlyphPointProto.on_curve_proto)
}

// -------------------------------------------------------------------

// WOFF2HeaderProto

// uint32 flavor_proto = 1;
inline void WOFF2HeaderProto::clear_flavor_proto() {
  flavor_proto_ = 0u;
}
inline uint32_t WOFF2HeaderProto::_internal_flavor_proto() const {
  return flavor_proto_;
}
inline uint32_t WOFF2HeaderProto::flavor_proto() const {
  // @@protoc_insertion_point(field_get:WOFF2HeaderProto.flavor_proto)
  return _internal_flavor_proto();
}
inline void WOFF2HeaderProto::_internal_set_flavor_proto(uint32_t value) {
  
  flavor_proto_ = value;
}
inline void WOFF2HeaderProto::set_flavor_proto(uint32_t value) {
  _internal_set_flavor_proto(value);
  // @@protoc_insertion_point(field_set:WOFF2HeaderProto.flavor_proto)
}

// uint32 header_version_proto = 2;
inline void WOFF2HeaderProto::clear_header_version_proto() {
  header_version_proto_ = 0u;
}
inline uint32_t WOFF2HeaderProto::_internal_header_version_proto() const {
  return header_version_proto_;
}
inline uint32_t WOFF2HeaderProto::header_version_proto() const {
  // @@protoc_insertion_point(field_get:WOFF2HeaderProto.header_version_proto)
  return _internal_header_version_proto();
}
inline void WOFF2HeaderProto::_internal_set_header_version_proto(uint32_t value) {
  
  header_version_proto_ = value;
}
inline void WOFF2HeaderProto::set_header_version_proto(uint32_t value) {
  _internal_set_header_version_proto(value);
  // @@protoc_insertion_point(field_set:WOFF2HeaderProto.header_version_proto)
}

// uint32 num_tables_proto = 3;
inline void WOFF2HeaderProto::clear_num_tables_proto() {
  num_tables_proto_ = 0u;
}
inline uint32_t WOFF2HeaderProto::_internal_num_tables_proto() const {
  return num_tables_proto_;
}
inline uint32_t WOFF2HeaderProto::num_tables_proto() const {
  // @@protoc_insertion_point(field_get:WOFF2HeaderProto.num_tables_proto)
  return _internal_num_tables_proto();
}
inline void WOFF2HeaderProto::_internal_set_num_tables_proto(uint32_t value) {
  
  num_tables_proto_ = value;
}
inline void WOFF2HeaderProto::set_num_tables_proto(uint32_t value) {
  _internal_set_num_tables_proto(value);
  // @@protoc_insertion_point(field_set:WOFF2HeaderProto.num_tables_proto)
}

// uint64 compressed_offset_proto = 4;
inline void WOFF2HeaderProto::clear_compressed_offset_proto() {
  compressed_offset_proto_ = uint64_t{0u};
}
inline uint64_t WOFF2HeaderProto::_internal_compressed_offset_proto() const {
  return compressed_offset_proto_;
}
inline uint64_t WOFF2HeaderProto::compressed_offset_proto() const {
  // @@protoc_insertion_point(field_get:WOFF2HeaderProto.compressed_offset_proto)
  return _internal_compressed_offset_proto();
}
inline void WOFF2HeaderProto::_internal_set_compressed_offset_proto(uint64_t value) {
  
  compressed_offset_proto_ = value;
}
inline void WOFF2HeaderProto::set_compressed_offset_proto(uint64_t value) {
  _internal_set_compressed_offset_proto(value);
  // @@protoc_insertion_point(field_set:WOFF2HeaderProto.compressed_offset_proto)
}

// uint32 compressed_length_proto = 5;
inline void WOFF2HeaderProto::clear_compressed_length_proto() {
  compressed_length_proto_ = 0u;
}
inline uint32_t WOFF2HeaderProto::_internal_compressed_length_proto() const {
  return compressed_length_proto_;
}
inline uint32_t WOFF2HeaderProto::compressed_length_proto() const {
  // @@protoc_insertion_point(field_get:WOFF2HeaderProto.compressed_length_proto)
  return _internal_compressed_length_proto();
}
inline void WOFF2HeaderProto::_internal_set_compressed_length_proto(uint32_t value) {
  
  compressed_length_proto_ = value;
}
inline void WOFF2HeaderProto::set_compressed_length_proto(uint32_t value) {
  _internal_set_compressed_length_proto(value);
  // @@protoc_insertion_point(field_set:WOFF2HeaderProto.compressed_length_proto)
}

// uint32 uncompressed_size_proto = 6;
inline void WOFF2HeaderProto::clear_uncompressed_size_proto() {
  uncompressed_size_proto_ = 0u;
}
inline uint32_t WOFF2HeaderProto::_internal_uncompressed_size_proto() const {
  return uncompressed_size_proto_;
}
inline uint32_t WOFF2HeaderProto::uncompressed_size_proto() const {
  // @@protoc_insertion_point(field_get:WOFF2HeaderProto.uncompressed_size_proto)
  return _internal_uncompressed_size_proto();
}
inline void WOFF2HeaderProto::_internal_set_uncompressed_size_proto(uint32_t value) {
  
  uncompressed_size_proto_ = value;
}
inline void WOFF2HeaderProto::set_uncompressed_size_proto(uint32_t value) {
  _internal_set_uncompressed_size_proto(value);
  // @@protoc_insertion_point(field_set:WOFF2HeaderProto.uncompressed_size_proto)
}

// repeated .TableProto tables_proto = 7;
inline int WOFF2HeaderProto::_internal_tables_proto_size() const {
  return tables_proto_.size();
}
inline int WOFF2HeaderProto::tables_proto_size() const {
  return _internal_tables_proto_size();
}
inline void WOFF2HeaderProto::clear_tables_proto() {
  tables_proto_.Clear();
}
inline ::TableProto* WOFF2HeaderProto::mutable_tables_proto(int index) {
  // @@protoc_insertion_point(field_mutable:WOFF2HeaderProto.tables_proto)
  return tables_proto_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TableProto >*
WOFF2HeaderProto::mutable_tables_proto() {
  // @@protoc_insertion_point(field_mutable_list:WOFF2HeaderProto.tables_proto)
  return &tables_proto_;
}
inline const ::TableProto& WOFF2HeaderProto::_internal_tables_proto(int index) const {
  return tables_proto_.Get(index);
}
inline const ::TableProto& WOFF2HeaderProto::tables_proto(int index) const {
  // @@protoc_insertion_point(field_get:WOFF2HeaderProto.tables_proto)
  return _internal_tables_proto(index);
}
inline ::TableProto* WOFF2HeaderProto::_internal_add_tables_proto() {
  return tables_proto_.Add();
}
inline ::TableProto* WOFF2HeaderProto::add_tables_proto() {
  ::TableProto* _add = _internal_add_tables_proto();
  // @@protoc_insertion_point(field_add:WOFF2HeaderProto.tables_proto)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TableProto >&
WOFF2HeaderProto::tables_proto() const {
  // @@protoc_insertion_point(field_list:WOFF2HeaderProto.tables_proto)
  return tables_proto_;
}

// repeated .TtcFontProto ttc_fonts_proto = 8;
inline int WOFF2HeaderProto::_internal_ttc_fonts_proto_size() const {
  return ttc_fonts_proto_.size();
}
inline int WOFF2HeaderProto::ttc_fonts_proto_size() const {
  return _internal_ttc_fonts_proto_size();
}
inline void WOFF2HeaderProto::clear_ttc_fonts_proto() {
  ttc_fonts_proto_.Clear();
}
inline ::TtcFontProto* WOFF2HeaderProto::mutable_ttc_fonts_proto(int index) {
  // @@protoc_insertion_point(field_mutable:WOFF2HeaderProto.ttc_fonts_proto)
  return ttc_fonts_proto_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TtcFontProto >*
WOFF2HeaderProto::mutable_ttc_fonts_proto() {
  // @@protoc_insertion_point(field_mutable_list:WOFF2HeaderProto.ttc_fonts_proto)
  return &ttc_fonts_proto_;
}
inline const ::TtcFontProto& WOFF2HeaderProto::_internal_ttc_fonts_proto(int index) const {
  return ttc_fonts_proto_.Get(index);
}
inline const ::TtcFontProto& WOFF2HeaderProto::ttc_fonts_proto(int index) const {
  // @@protoc_insertion_point(field_get:WOFF2HeaderProto.ttc_fonts_proto)
  return _internal_ttc_fonts_proto(index);
}
inline ::TtcFontProto* WOFF2HeaderProto::_internal_add_ttc_fonts_proto() {
  return ttc_fonts_proto_.Add();
}
inline ::TtcFontProto* WOFF2HeaderProto::add_ttc_fonts_proto() {
  ::TtcFontProto* _add = _internal_add_ttc_fonts_proto();
  // @@protoc_insertion_point(field_add:WOFF2HeaderProto.ttc_fonts_proto)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TtcFontProto >&
WOFF2HeaderProto::ttc_fonts_proto() const {
  // @@protoc_insertion_point(field_list:WOFF2HeaderProto.ttc_fonts_proto)
  return ttc_fonts_proto_;
}

// -------------------------------------------------------------------

// TableProto

// uint32 tag_proto = 1;
inline void TableProto::clear_tag_proto() {
  tag_proto_ = 0u;
}
inline uint32_t TableProto::_internal_tag_proto() const {
  return tag_proto_;
}
inline uint32_t TableProto::tag_proto() const {
  // @@protoc_insertion_point(field_get:TableProto.tag_proto)
  return _internal_tag_proto();
}
inline void TableProto::_internal_set_tag_proto(uint32_t value) {
  
  tag_proto_ = value;
}
inline void TableProto::set_tag_proto(uint32_t value) {
  _internal_set_tag_proto(value);
  // @@protoc_insertion_point(field_set:TableProto.tag_proto)
}

// uint32 flags_proto = 2;
inline void TableProto::clear_flags_proto() {
  flags_proto_ = 0u;
}
inline uint32_t TableProto::_internal_flags_proto() const {
  return flags_proto_;
}
inline uint32_t TableProto::flags_proto() const {
  // @@protoc_insertion_point(field_get:TableProto.flags_proto)
  return _internal_flags_proto();
}
inline void TableProto::_internal_set_flags_proto(uint32_t value) {
  
  flags_proto_ = value;
}
inline void TableProto::set_flags_proto(uint32_t value) {
  _internal_set_flags_proto(value);
  // @@protoc_insertion_point(field_set:TableProto.flags_proto)
}

// uint32 src_offset_proto = 3;
inline void TableProto::clear_src_offset_proto() {
  src_offset_proto_ = 0u;
}
inline uint32_t TableProto::_internal_src_offset_proto() const {
  return src_offset_proto_;
}
inline uint32_t TableProto::src_offset_proto() const {
  // @@protoc_insertion_point(field_get:TableProto.src_offset_proto)
  return _internal_src_offset_proto();
}
inline void TableProto::_internal_set_src_offset_proto(uint32_t value) {
  
  src_offset_proto_ = value;
}
inline void TableProto::set_src_offset_proto(uint32_t value) {
  _internal_set_src_offset_proto(value);
  // @@protoc_insertion_point(field_set:TableProto.src_offset_proto)
}

// uint32 src_length_proto = 4;
inline void TableProto::clear_src_length_proto() {
  src_length_proto_ = 0u;
}
inline uint32_t TableProto::_internal_src_length_proto() const {
  return src_length_proto_;
}
inline uint32_t TableProto::src_length_proto() const {
  // @@protoc_insertion_point(field_get:TableProto.src_length_proto)
  return _internal_src_length_proto();
}
inline void TableProto::_internal_set_src_length_proto(uint32_t value) {
  
  src_length_proto_ = value;
}
inline void TableProto::set_src_length_proto(uint32_t value) {
  _internal_set_src_length_proto(value);
  // @@protoc_insertion_point(field_set:TableProto.src_length_proto)
}

// uint32 transform_length_proto = 5;
inline void TableProto::clear_transform_length_proto() {
  transform_length_proto_ = 0u;
}
inline uint32_t TableProto::_internal_transform_length_proto() const {
  return transform_length_proto_;
}
inline uint32_t TableProto::transform_length_proto() const {
  // @@protoc_insertion_point(field_get:TableProto.transform_length_proto)
  return _internal_transform_length_proto();
}
inline void TableProto::_internal_set_transform_length_proto(uint32_t value) {
  
  transform_length_proto_ = value;
}
inline void TableProto::set_transform_length_proto(uint32_t value) {
  _internal_set_transform_length_proto(value);
  // @@protoc_insertion_point(field_set:TableProto.transform_length_proto)
}

// uint32 dst_offset_proto = 6;
inline void TableProto::clear_dst_offset_proto() {
  dst_offset_proto_ = 0u;
}
inline uint32_t TableProto::_internal_dst_offset_proto() const {
  return dst_offset_proto_;
}
inline uint32_t TableProto::dst_offset_proto() const {
  // @@protoc_insertion_point(field_get:TableProto.dst_offset_proto)
  return _internal_dst_offset_proto();
}
inline void TableProto::_internal_set_dst_offset_proto(uint32_t value) {
  
  dst_offset_proto_ = value;
}
inline void TableProto::set_dst_offset_proto(uint32_t value) {
  _internal_set_dst_offset_proto(value);
  // @@protoc_insertion_point(field_set:TableProto.dst_offset_proto)
}

// uint32 dst_length_proto = 7;
inline void TableProto::clear_dst_length_proto() {
  dst_length_proto_ = 0u;
}
inline uint32_t TableProto::_internal_dst_length_proto() const {
  return dst_length_proto_;
}
inline uint32_t TableProto::dst_length_proto() const {
  // @@protoc_insertion_point(field_get:TableProto.dst_length_proto)
  return _internal_dst_length_proto();
}
inline void TableProto::_internal_set_dst_length_proto(uint32_t value) {
  
  dst_length_proto_ = value;
}
inline void TableProto::set_dst_length_proto(uint32_t value) {
  _internal_set_dst_length_proto(value);
  // @@protoc_insertion_point(field_set:TableProto.dst_length_proto)
}

// bytes dst_data_proto = 8;
inline void TableProto::clear_dst_data_proto() {
  dst_data_proto_.ClearToEmpty();
}
inline const std::string& TableProto::dst_data_proto() const {
  // @@protoc_insertion_point(field_get:TableProto.dst_data_proto)
  return _internal_dst_data_proto();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void TableProto::set_dst_data_proto(ArgT0&& arg0, ArgT... args) {
 
 dst_data_proto_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:TableProto.dst_data_proto)
}
inline std::string* TableProto::mutable_dst_data_proto() {
  std::string* _s = _internal_mutable_dst_data_proto();
  // @@protoc_insertion_point(field_mutable:TableProto.dst_data_proto)
  return _s;
}
inline const std::string& TableProto::_internal_dst_data_proto() const {
  return dst_data_proto_.Get();
}
inline void TableProto::_internal_set_dst_data_proto(const std::string& value) {
  
  dst_data_proto_.Set(value, GetArenaForAllocation());
}
inline std::string* TableProto::_internal_mutable_dst_data_proto() {
  
  return dst_data_proto_.Mutable(GetArenaForAllocation());
}
inline std::string* TableProto::release_dst_data_proto() {
  // @@protoc_insertion_point(field_release:TableProto.dst_data_proto)
  return dst_data_proto_.Release();
}
inline void TableProto::set_allocated_dst_data_proto(std::string* dst_data_proto) {
  if (dst_data_proto != nullptr) {
    
  } else {
    
  }
  dst_data_proto_.SetAllocated(dst_data_proto, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (dst_data_proto_.IsDefault()) {
    dst_data_proto_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:TableProto.dst_data_proto)
}

// -------------------------------------------------------------------

// GlyfEncoderProto

// repeated uint32 n_contour_stream_proto = 1;
inline int GlyfEncoderProto::_internal_n_contour_stream_proto_size() const {
  return n_contour_stream_proto_.size();
}
inline int GlyfEncoderProto::n_contour_stream_proto_size() const {
  return _internal_n_contour_stream_proto_size();
}
inline void GlyfEncoderProto::clear_n_contour_stream_proto() {
  n_contour_stream_proto_.Clear();
}
inline uint32_t GlyfEncoderProto::_internal_n_contour_stream_proto(int index) const {
  return n_contour_stream_proto_.Get(index);
}
inline uint32_t GlyfEncoderProto::n_contour_stream_proto(int index) const {
  // @@protoc_insertion_point(field_get:GlyfEncoderProto.n_contour_stream_proto)
  return _internal_n_contour_stream_proto(index);
}
inline void GlyfEncoderProto::set_n_contour_stream_proto(int index, uint32_t value) {
  n_contour_stream_proto_.Set(index, value);
  // @@protoc_insertion_point(field_set:GlyfEncoderProto.n_contour_stream_proto)
}
inline void GlyfEncoderProto::_internal_add_n_contour_stream_proto(uint32_t value) {
  n_contour_stream_proto_.Add(value);
}
inline void GlyfEncoderProto::add_n_contour_stream_proto(uint32_t value) {
  _internal_add_n_contour_stream_proto(value);
  // @@protoc_insertion_point(field_add:GlyfEncoderProto.n_contour_stream_proto)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GlyfEncoderProto::_internal_n_contour_stream_proto() const {
  return n_contour_stream_proto_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GlyfEncoderProto::n_contour_stream_proto() const {
  // @@protoc_insertion_point(field_list:GlyfEncoderProto.n_contour_stream_proto)
  return _internal_n_contour_stream_proto();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GlyfEncoderProto::_internal_mutable_n_contour_stream_proto() {
  return &n_contour_stream_proto_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GlyfEncoderProto::mutable_n_contour_stream_proto() {
  // @@protoc_insertion_point(field_mutable_list:GlyfEncoderProto.n_contour_stream_proto)
  return _internal_mutable_n_contour_stream_proto();
}

// repeated uint32 n_points_stream_proto = 2;
inline int GlyfEncoderProto::_internal_n_points_stream_proto_size() const {
  return n_points_stream_proto_.size();
}
inline int GlyfEncoderProto::n_points_stream_proto_size() const {
  return _internal_n_points_stream_proto_size();
}
inline void GlyfEncoderProto::clear_n_points_stream_proto() {
  n_points_stream_proto_.Clear();
}
inline uint32_t GlyfEncoderProto::_internal_n_points_stream_proto(int index) const {
  return n_points_stream_proto_.Get(index);
}
inline uint32_t GlyfEncoderProto::n_points_stream_proto(int index) const {
  // @@protoc_insertion_point(field_get:GlyfEncoderProto.n_points_stream_proto)
  return _internal_n_points_stream_proto(index);
}
inline void GlyfEncoderProto::set_n_points_stream_proto(int index, uint32_t value) {
  n_points_stream_proto_.Set(index, value);
  // @@protoc_insertion_point(field_set:GlyfEncoderProto.n_points_stream_proto)
}
inline void GlyfEncoderProto::_internal_add_n_points_stream_proto(uint32_t value) {
  n_points_stream_proto_.Add(value);
}
inline void GlyfEncoderProto::add_n_points_stream_proto(uint32_t value) {
  _internal_add_n_points_stream_proto(value);
  // @@protoc_insertion_point(field_add:GlyfEncoderProto.n_points_stream_proto)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GlyfEncoderProto::_internal_n_points_stream_proto() const {
  return n_points_stream_proto_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GlyfEncoderProto::n_points_stream_proto() const {
  // @@protoc_insertion_point(field_list:GlyfEncoderProto.n_points_stream_proto)
  return _internal_n_points_stream_proto();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GlyfEncoderProto::_internal_mutable_n_points_stream_proto() {
  return &n_points_stream_proto_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GlyfEncoderProto::mutable_n_points_stream_proto() {
  // @@protoc_insertion_point(field_mutable_list:GlyfEncoderProto.n_points_stream_proto)
  return _internal_mutable_n_points_stream_proto();
}

// repeated uint32 flag_byte_stream_proto = 3;
inline int GlyfEncoderProto::_internal_flag_byte_stream_proto_size() const {
  return flag_byte_stream_proto_.size();
}
inline int GlyfEncoderProto::flag_byte_stream_proto_size() const {
  return _internal_flag_byte_stream_proto_size();
}
inline void GlyfEncoderProto::clear_flag_byte_stream_proto() {
  flag_byte_stream_proto_.Clear();
}
inline uint32_t GlyfEncoderProto::_internal_flag_byte_stream_proto(int index) const {
  return flag_byte_stream_proto_.Get(index);
}
inline uint32_t GlyfEncoderProto::flag_byte_stream_proto(int index) const {
  // @@protoc_insertion_point(field_get:GlyfEncoderProto.flag_byte_stream_proto)
  return _internal_flag_byte_stream_proto(index);
}
inline void GlyfEncoderProto::set_flag_byte_stream_proto(int index, uint32_t value) {
  flag_byte_stream_proto_.Set(index, value);
  // @@protoc_insertion_point(field_set:GlyfEncoderProto.flag_byte_stream_proto)
}
inline void GlyfEncoderProto::_internal_add_flag_byte_stream_proto(uint32_t value) {
  flag_byte_stream_proto_.Add(value);
}
inline void GlyfEncoderProto::add_flag_byte_stream_proto(uint32_t value) {
  _internal_add_flag_byte_stream_proto(value);
  // @@protoc_insertion_point(field_add:GlyfEncoderProto.flag_byte_stream_proto)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GlyfEncoderProto::_internal_flag_byte_stream_proto() const {
  return flag_byte_stream_proto_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GlyfEncoderProto::flag_byte_stream_proto() const {
  // @@protoc_insertion_point(field_list:GlyfEncoderProto.flag_byte_stream_proto)
  return _internal_flag_byte_stream_proto();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GlyfEncoderProto::_internal_mutable_flag_byte_stream_proto() {
  return &flag_byte_stream_proto_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GlyfEncoderProto::mutable_flag_byte_stream_proto() {
  // @@protoc_insertion_point(field_mutable_list:GlyfEncoderProto.flag_byte_stream_proto)
  return _internal_mutable_flag_byte_stream_proto();
}

// repeated uint32 composite_stream_proto = 4;
inline int GlyfEncoderProto::_internal_composite_stream_proto_size() const {
  return composite_stream_proto_.size();
}
inline int GlyfEncoderProto::composite_stream_proto_size() const {
  return _internal_composite_stream_proto_size();
}
inline void GlyfEncoderProto::clear_composite_stream_proto() {
  composite_stream_proto_.Clear();
}
inline uint32_t GlyfEncoderProto::_internal_composite_stream_proto(int index) const {
  return composite_stream_proto_.Get(index);
}
inline uint32_t GlyfEncoderProto::composite_stream_proto(int index) const {
  // @@protoc_insertion_point(field_get:GlyfEncoderProto.composite_stream_proto)
  return _internal_composite_stream_proto(index);
}
inline void GlyfEncoderProto::set_composite_stream_proto(int index, uint32_t value) {
  composite_stream_proto_.Set(index, value);
  // @@protoc_insertion_point(field_set:GlyfEncoderProto.composite_stream_proto)
}
inline void GlyfEncoderProto::_internal_add_composite_stream_proto(uint32_t value) {
  composite_stream_proto_.Add(value);
}
inline void GlyfEncoderProto::add_composite_stream_proto(uint32_t value) {
  _internal_add_composite_stream_proto(value);
  // @@protoc_insertion_point(field_add:GlyfEncoderProto.composite_stream_proto)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GlyfEncoderProto::_internal_composite_stream_proto() const {
  return composite_stream_proto_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GlyfEncoderProto::composite_stream_proto() const {
  // @@protoc_insertion_point(field_list:GlyfEncoderProto.composite_stream_proto)
  return _internal_composite_stream_proto();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GlyfEncoderProto::_internal_mutable_composite_stream_proto() {
  return &composite_stream_proto_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GlyfEncoderProto::mutable_composite_stream_proto() {
  // @@protoc_insertion_point(field_mutable_list:GlyfEncoderProto.composite_stream_proto)
  return _internal_mutable_composite_stream_proto();
}

// repeated uint32 bbox_bitmap_proto = 5;
inline int GlyfEncoderProto::_internal_bbox_bitmap_proto_size() const {
  return bbox_bitmap_proto_.size();
}
inline int GlyfEncoderProto::bbox_bitmap_proto_size() const {
  return _internal_bbox_bitmap_proto_size();
}
inline void GlyfEncoderProto::clear_bbox_bitmap_proto() {
  bbox_bitmap_proto_.Clear();
}
inline uint32_t GlyfEncoderProto::_internal_bbox_bitmap_proto(int index) const {
  return bbox_bitmap_proto_.Get(index);
}
inline uint32_t GlyfEncoderProto::bbox_bitmap_proto(int index) const {
  // @@protoc_insertion_point(field_get:GlyfEncoderProto.bbox_bitmap_proto)
  return _internal_bbox_bitmap_proto(index);
}
inline void GlyfEncoderProto::set_bbox_bitmap_proto(int index, uint32_t value) {
  bbox_bitmap_proto_.Set(index, value);
  // @@protoc_insertion_point(field_set:GlyfEncoderProto.bbox_bitmap_proto)
}
inline void GlyfEncoderProto::_internal_add_bbox_bitmap_proto(uint32_t value) {
  bbox_bitmap_proto_.Add(value);
}
inline void GlyfEncoderProto::add_bbox_bitmap_proto(uint32_t value) {
  _internal_add_bbox_bitmap_proto(value);
  // @@protoc_insertion_point(field_add:GlyfEncoderProto.bbox_bitmap_proto)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GlyfEncoderProto::_internal_bbox_bitmap_proto() const {
  return bbox_bitmap_proto_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GlyfEncoderProto::bbox_bitmap_proto() const {
  // @@protoc_insertion_point(field_list:GlyfEncoderProto.bbox_bitmap_proto)
  return _internal_bbox_bitmap_proto();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GlyfEncoderProto::_internal_mutable_bbox_bitmap_proto() {
  return &bbox_bitmap_proto_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GlyfEncoderProto::mutable_bbox_bitmap_proto() {
  // @@protoc_insertion_point(field_mutable_list:GlyfEncoderProto.bbox_bitmap_proto)
  return _internal_mutable_bbox_bitmap_proto();
}

// repeated uint32 bbox_stream_proto = 6;
inline int GlyfEncoderProto::_internal_bbox_stream_proto_size() const {
  return bbox_stream_proto_.size();
}
inline int GlyfEncoderProto::bbox_stream_proto_size() const {
  return _internal_bbox_stream_proto_size();
}
inline void GlyfEncoderProto::clear_bbox_stream_proto() {
  bbox_stream_proto_.Clear();
}
inline uint32_t GlyfEncoderProto::_internal_bbox_stream_proto(int index) const {
  return bbox_stream_proto_.Get(index);
}
inline uint32_t GlyfEncoderProto::bbox_stream_proto(int index) const {
  // @@protoc_insertion_point(field_get:GlyfEncoderProto.bbox_stream_proto)
  return _internal_bbox_stream_proto(index);
}
inline void GlyfEncoderProto::set_bbox_stream_proto(int index, uint32_t value) {
  bbox_stream_proto_.Set(index, value);
  // @@protoc_insertion_point(field_set:GlyfEncoderProto.bbox_stream_proto)
}
inline void GlyfEncoderProto::_internal_add_bbox_stream_proto(uint32_t value) {
  bbox_stream_proto_.Add(value);
}
inline void GlyfEncoderProto::add_bbox_stream_proto(uint32_t value) {
  _internal_add_bbox_stream_proto(value);
  // @@protoc_insertion_point(field_add:GlyfEncoderProto.bbox_stream_proto)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GlyfEncoderProto::_internal_bbox_stream_proto() const {
  return bbox_stream_proto_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GlyfEncoderProto::bbox_stream_proto() const {
  // @@protoc_insertion_point(field_list:GlyfEncoderProto.bbox_stream_proto)
  return _internal_bbox_stream_proto();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GlyfEncoderProto::_internal_mutable_bbox_stream_proto() {
  return &bbox_stream_proto_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GlyfEncoderProto::mutable_bbox_stream_proto() {
  // @@protoc_insertion_point(field_mutable_list:GlyfEncoderProto.bbox_stream_proto)
  return _internal_mutable_bbox_stream_proto();
}

// repeated uint32 glyph_stream_proto = 7;
inline int GlyfEncoderProto::_internal_glyph_stream_proto_size() const {
  return glyph_stream_proto_.size();
}
inline int GlyfEncoderProto::glyph_stream_proto_size() const {
  return _internal_glyph_stream_proto_size();
}
inline void GlyfEncoderProto::clear_glyph_stream_proto() {
  glyph_stream_proto_.Clear();
}
inline uint32_t GlyfEncoderProto::_internal_glyph_stream_proto(int index) const {
  return glyph_stream_proto_.Get(index);
}
inline uint32_t GlyfEncoderProto::glyph_stream_proto(int index) const {
  // @@protoc_insertion_point(field_get:GlyfEncoderProto.glyph_stream_proto)
  return _internal_glyph_stream_proto(index);
}
inline void GlyfEncoderProto::set_glyph_stream_proto(int index, uint32_t value) {
  glyph_stream_proto_.Set(index, value);
  // @@protoc_insertion_point(field_set:GlyfEncoderProto.glyph_stream_proto)
}
inline void GlyfEncoderProto::_internal_add_glyph_stream_proto(uint32_t value) {
  glyph_stream_proto_.Add(value);
}
inline void GlyfEncoderProto::add_glyph_stream_proto(uint32_t value) {
  _internal_add_glyph_stream_proto(value);
  // @@protoc_insertion_point(field_add:GlyfEncoderProto.glyph_stream_proto)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GlyfEncoderProto::_internal_glyph_stream_proto() const {
  return glyph_stream_proto_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GlyfEncoderProto::glyph_stream_proto() const {
  // @@protoc_insertion_point(field_list:GlyfEncoderProto.glyph_stream_proto)
  return _internal_glyph_stream_proto();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GlyfEncoderProto::_internal_mutable_glyph_stream_proto() {
  return &glyph_stream_proto_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GlyfEncoderProto::mutable_glyph_stream_proto() {
  // @@protoc_insertion_point(field_mutable_list:GlyfEncoderProto.glyph_stream_proto)
  return _internal_mutable_glyph_stream_proto();
}

// repeated uint32 instruction_stream_proto = 8;
inline int GlyfEncoderProto::_internal_instruction_stream_proto_size() const {
  return instruction_stream_proto_.size();
}
inline int GlyfEncoderProto::instruction_stream_proto_size() const {
  return _internal_instruction_stream_proto_size();
}
inline void GlyfEncoderProto::clear_instruction_stream_proto() {
  instruction_stream_proto_.Clear();
}
inline uint32_t GlyfEncoderProto::_internal_instruction_stream_proto(int index) const {
  return instruction_stream_proto_.Get(index);
}
inline uint32_t GlyfEncoderProto::instruction_stream_proto(int index) const {
  // @@protoc_insertion_point(field_get:GlyfEncoderProto.instruction_stream_proto)
  return _internal_instruction_stream_proto(index);
}
inline void GlyfEncoderProto::set_instruction_stream_proto(int index, uint32_t value) {
  instruction_stream_proto_.Set(index, value);
  // @@protoc_insertion_point(field_set:GlyfEncoderProto.instruction_stream_proto)
}
inline void GlyfEncoderProto::_internal_add_instruction_stream_proto(uint32_t value) {
  instruction_stream_proto_.Add(value);
}
inline void GlyfEncoderProto::add_instruction_stream_proto(uint32_t value) {
  _internal_add_instruction_stream_proto(value);
  // @@protoc_insertion_point(field_add:GlyfEncoderProto.instruction_stream_proto)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GlyfEncoderProto::_internal_instruction_stream_proto() const {
  return instruction_stream_proto_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GlyfEncoderProto::instruction_stream_proto() const {
  // @@protoc_insertion_point(field_list:GlyfEncoderProto.instruction_stream_proto)
  return _internal_instruction_stream_proto();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GlyfEncoderProto::_internal_mutable_instruction_stream_proto() {
  return &instruction_stream_proto_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GlyfEncoderProto::mutable_instruction_stream_proto() {
  // @@protoc_insertion_point(field_mutable_list:GlyfEncoderProto.instruction_stream_proto)
  return _internal_mutable_instruction_stream_proto();
}

// repeated uint32 overlap_bitmap_proto = 9;
inline int GlyfEncoderProto::_internal_overlap_bitmap_proto_size() const {
  return overlap_bitmap_proto_.size();
}
inline int GlyfEncoderProto::overlap_bitmap_proto_size() const {
  return _internal_overlap_bitmap_proto_size();
}
inline void GlyfEncoderProto::clear_overlap_bitmap_proto() {
  overlap_bitmap_proto_.Clear();
}
inline uint32_t GlyfEncoderProto::_internal_overlap_bitmap_proto(int index) const {
  return overlap_bitmap_proto_.Get(index);
}
inline uint32_t GlyfEncoderProto::overlap_bitmap_proto(int index) const {
  // @@protoc_insertion_point(field_get:GlyfEncoderProto.overlap_bitmap_proto)
  return _internal_overlap_bitmap_proto(index);
}
inline void GlyfEncoderProto::set_overlap_bitmap_proto(int index, uint32_t value) {
  overlap_bitmap_proto_.Set(index, value);
  // @@protoc_insertion_point(field_set:GlyfEncoderProto.overlap_bitmap_proto)
}
inline void GlyfEncoderProto::_internal_add_overlap_bitmap_proto(uint32_t value) {
  overlap_bitmap_proto_.Add(value);
}
inline void GlyfEncoderProto::add_overlap_bitmap_proto(uint32_t value) {
  _internal_add_overlap_bitmap_proto(value);
  // @@protoc_insertion_point(field_add:GlyfEncoderProto.overlap_bitmap_proto)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GlyfEncoderProto::_internal_overlap_bitmap_proto() const {
  return overlap_bitmap_proto_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
GlyfEncoderProto::overlap_bitmap_proto() const {
  // @@protoc_insertion_point(field_list:GlyfEncoderProto.overlap_bitmap_proto)
  return _internal_overlap_bitmap_proto();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GlyfEncoderProto::_internal_mutable_overlap_bitmap_proto() {
  return &overlap_bitmap_proto_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
GlyfEncoderProto::mutable_overlap_bitmap_proto() {
  // @@protoc_insertion_point(field_mutable_list:GlyfEncoderProto.overlap_bitmap_proto)
  return _internal_mutable_overlap_bitmap_proto();
}

// int32 n_glyphs_proto = 10;
inline void GlyfEncoderProto::clear_n_glyphs_proto() {
  n_glyphs_proto_ = 0;
}
inline int32_t GlyfEncoderProto::_internal_n_glyphs_proto() const {
  return n_glyphs_proto_;
}
inline int32_t GlyfEncoderProto::n_glyphs_proto() const {
  // @@protoc_insertion_point(field_get:GlyfEncoderProto.n_glyphs_proto)
  return _internal_n_glyphs_proto();
}
inline void GlyfEncoderProto::_internal_set_n_glyphs_proto(int32_t value) {
  
  n_glyphs_proto_ = value;
}
inline void GlyfEncoderProto::set_n_glyphs_proto(int32_t value) {
  _internal_set_n_glyphs_proto(value);
  // @@protoc_insertion_point(field_set:GlyfEncoderProto.n_glyphs_proto)
}

// -------------------------------------------------------------------

// ContourVecProto

// repeated .GlyphPointProto points_proto = 1;
inline int ContourVecProto::_internal_points_proto_size() const {
  return points_proto_.size();
}
inline int ContourVecProto::points_proto_size() const {
  return _internal_points_proto_size();
}
inline void ContourVecProto::clear_points_proto() {
  points_proto_.Clear();
}
inline ::GlyphPointProto* ContourVecProto::mutable_points_proto(int index) {
  // @@protoc_insertion_point(field_mutable:ContourVecProto.points_proto)
  return points_proto_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::GlyphPointProto >*
ContourVecProto::mutable_points_proto() {
  // @@protoc_insertion_point(field_mutable_list:ContourVecProto.points_proto)
  return &points_proto_;
}
inline const ::GlyphPointProto& ContourVecProto::_internal_points_proto(int index) const {
  return points_proto_.Get(index);
}
inline const ::GlyphPointProto& ContourVecProto::points_proto(int index) const {
  // @@protoc_insertion_point(field_get:ContourVecProto.points_proto)
  return _internal_points_proto(index);
}
inline ::GlyphPointProto* ContourVecProto::_internal_add_points_proto() {
  return points_proto_.Add();
}
inline ::GlyphPointProto* ContourVecProto::add_points_proto() {
  ::GlyphPointProto* _add = _internal_add_points_proto();
  // @@protoc_insertion_point(field_add:ContourVecProto.points_proto)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::GlyphPointProto >&
ContourVecProto::points_proto() const {
  // @@protoc_insertion_point(field_list:ContourVecProto.points_proto)
  return points_proto_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_woff2_2eproto
